<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS简单笔记</title>
    <url>/2019/10/01/CSS%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="系列链接"><a class="markdownIt-Anchor" href="#系列链接"></a> 系列链接</h2>
<p><a href="https://pengxiandyou.github.io/2019/08/27/HTML%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">HTML简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/01/CSS%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">CSS简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/JavaScript%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">JavaScript简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/jQuery%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">jQuery简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/%E6%8B%93%E5%B1%95%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">拓展简单笔记</a><br/></p>
<h2 id="一-基本语法"><a class="markdownIt-Anchor" href="#一-基本语法"></a> 一 基本语法</h2>
<ol>
<li>
<pre class="highlight"><code class="css">&lt;<span class="hljs-selector-tag">html</span>&gt;
	&lt;<span class="hljs-selector-tag">head</span>&gt;
		&lt;<span class="hljs-selector-tag">style</span> <span class="hljs-selector-tag">type</span>="<span class="hljs-selector-tag">text</span>/<span class="hljs-selector-tag">css</span>"&gt;
			选择器名&#123;
				样式属性:样式数值;
				样式属性:样式数值;
				样式属性:样式数值;
			&#125;
		&lt;/<span class="hljs-selector-tag">style</span>&gt;
	&lt;/<span class="hljs-selector-tag">head</span>&gt;
&lt;/<span class="hljs-selector-tag">html</span>&gt;
&lt;!<span class="hljs-selector-tag">--code</span>￼0<span class="hljs-selector-tag">--</span>&gt;

<span class="hljs-selector-tag">-</span> ```<span class="hljs-selector-tag">css</span>
  .类名&#123;
  	样式属性:样式数值;
  	样式属性:样式数值;
  	样式属性:样式数值;
  &#125; 
  &lt;!<span class="hljs-selector-tag">--code</span>￼1<span class="hljs-selector-tag">--</span>&gt;

  <span class="hljs-selector-tag">-</span> 标签里写`<span class="hljs-selector-tag">id</span>="<span class="hljs-selector-tag">ID</span>"`

</code></pre>
</li>
<li>
<p>引用方式</p>
<ul>
<li>
<pre class="highlight"><code class="css">&lt;!<span class="hljs-selector-tag">--</span> 内部样式 <span class="hljs-selector-tag">--</span>&gt;
&lt;<span class="hljs-selector-tag">head</span>&gt;
		&lt;<span class="hljs-selector-tag">style</span> <span class="hljs-selector-tag">type</span>="<span class="hljs-selector-tag">text</span>/<span class="hljs-selector-tag">css</span>"&gt;
			选择器名&#123;
				样式属性:样式数值;
				样式属性:样式数值;
				样式属性:样式数值;
			&#125;
		&lt;/<span class="hljs-selector-tag">style</span>&gt;
&lt;/<span class="hljs-selector-tag">head</span>&gt;&lt;!<span class="hljs-selector-tag">--</span> 只能当前页面使用 <span class="hljs-selector-tag">--</span>&gt;
&lt;!<span class="hljs-selector-tag">--code</span>￼2<span class="hljs-selector-tag">--</span>&gt;

</code></pre>
</li>
<li>
<pre class="highlight"><code class="css">&lt;!<span class="hljs-selector-tag">--</span> 行内样式 <span class="hljs-selector-tag">--</span>&gt;
&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">style</span>="<span class="hljs-selector-tag">font-size</span><span class="hljs-selector-pseudo">:25px</span>;<span class="hljs-selector-tag">color</span><span class="hljs-selector-pseudo">:pink</span>;"&gt;爱&lt;/<span class="hljs-selector-tag">span</span>&gt;
&lt;!<span class="hljs-selector-tag">--code</span>￼3<span class="hljs-selector-tag">--</span>&gt;

</code></pre>
</li>
</ul>
<ol start="2">
<li>
<p>后代选择器</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;!-- 层次关系 --&gt;&lt;!-- 还可以和交集选择器用 --&gt;</span><br><span class="line">选择器<span class="number">1</span> 选择器<span class="number">2</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">列子:</span><br><span class="line">p .red&#123;</span><br><span class="line"><span class="attribute">color</span>:red</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;我&lt;<span class="selector-tag">span</span> class=&quot;red&quot;&gt;爱&lt;/<span class="selector-tag">span</span>&gt;你&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>并集选择器</p>
</li>
<li>
<pre class="highlight"><code class="css">选择器1,选择器2,选择器3&#123;

&#125;
&lt;!<span class="hljs-selector-tag">--code</span>￼5<span class="hljs-selector-tag">--</span>&gt;

</code></pre>
</li>
<li>
<table>
<thead>
<tr>
<th style="text-align:center">伪类名称</th>
<th style="text-align:center">含义</th>
<th style="text-align:center">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>a:link</code></td>
<td style="text-align:center">未单击访问时超链接样式</td>
<td style="text-align:center"><code>a:link&#123;color:#9ef5f9;&#125;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>a:visited</code></td>
<td style="text-align:center">单击访问后超链接样式</td>
<td style="text-align:center"><code>a:visited&#123;color:#333;&#125;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>a:hover</code></td>
<td style="text-align:center">鼠标悬浮其上的超链接样式</td>
<td style="text-align:center"><code>a:hover&#123;color:#ff7300;&#125;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>a:active</code></td>
<td style="text-align:center">鼠标单击未释放的超链接样式</td>
<td style="text-align:center"><code>a:active&#123;color:#999;&#125;</code></td>
</tr>
</tbody>
</table>
</li>
<li>
<p>设置伪类的顺序：<code>a:link-&gt;a:visited-&gt;a:hover-&gt;a:active</code></p>
</li>
<li>
<p>一般和超链接标签配合使用</p>
</li>
</ol>
</li>
<li>
<p>背景样式</p>
<ul>
<li><code>background-color</code></li>
<li><code>background-image:url(路径)</code></li>
<li><code>background-repeat</code>:图片平铺方式 <code>no-repeat</code> <code>repeat-x</code> <code>repeat-y</code> 默认:<code>repeat</code></li>
<li><code>background-position</code>:设置图片偏远 <code>50px 100px</code> <code>50% 100%</code> <code>left bottom</code> <code>center center</code> <code>right top</code>等等</li>
<li><code>background</code>: <code>颜色 图片 position repeat</code></li>
</ul>
</li>
<li>
<p>列表样式</p>
<ul>
<li>
<p><code>list-style-type</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">值</th>
<th style="text-align:center">说明</th>
<th style="text-align:center">语法示例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>none</code></td>
<td style="text-align:center">无标记符号(可做导航栏; 可横排 间隔)</td>
<td style="text-align:center"><code>list-style-type:none;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>disc</code></td>
<td style="text-align:center">实心圆，默认类型</td>
<td style="text-align:center"><code>list-style-type:disc;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>circle</code></td>
<td style="text-align:center">空心圆</td>
<td style="text-align:center"><code>list-style-type:circle;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>square</code></td>
<td style="text-align:center">实心正方形</td>
<td style="text-align:center"><code>list-style-type:square;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>decimal</code></td>
<td style="text-align:center">数字</td>
<td style="text-align:center"><code>list-style-type:decimal;</code></td>
</tr>
</tbody>
</table>
</li>
<li>
<p><code>list-style-image</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">	<span class="attribute">list-style-image</span>: <span class="built_in">url</span>(<span class="string">image/arrow-right. gif</span>); </span><br><span class="line">	<span class="attribute">list-style-type</span>: circle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>list-style-position</code> : <code>inside</code> <code>outside</code></p>
</li>
</ul>
</li>
</ol>
<h2 id="五-结合div"><a class="markdownIt-Anchor" href="#五-结合div"></a> 五 结合<code>&lt;div&gt;</code></h2>
<ol>
<li>
<p>用法 :</p>
<ul>
<li>网页布局</li>
<li>排版网页内容</li>
</ul>
</li>
<li>
<p>语法例子:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">	<span class="attribute">height</span>:<span class="number">280px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="selector-tag">header</span>&quot;&gt; 网页内容 &lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>可加属性</p>
<ul>
<li><code>border:1px red solid;</code></li>
</ul>
</li>
</ol>
<p>​</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Git学习笔记</title>
    <url>/2020/08/10/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="从遇见狂神说视频里截的图"><a class="markdownIt-Anchor" href="#从遇见狂神说视频里截的图"></a> 从<a href="https://space.bilibili.com/95256449"><strong>遇见狂神说</strong></a><a href="https://www.bilibili.com/video/BV1FE411P7B3">视频</a>里截的图</h1>
<p>结果示意图</p>
<p><img data-src="https://i.loli.net/2020/08/10/o8GzfitwRECyv5S.png" alt="2020-07-30_170946.PNG" />文件操作</p>
<p><img data-src="https://i.loli.net/2020/08/10/oabC3Qp2YniJ78d.png" alt="2020-07-30_172632.PNG" />忽略文件<br />
<img data-src="https://i.loli.net/2020/08/10/6i3lbROQ1eackyt.png" alt="2020-07-30_180209.PNG" /></p>
<h1 id="简介-诞生-安装等"><a class="markdownIt-Anchor" href="#简介-诞生-安装等"></a> 简介、诞生、安装等</h1>
<p> 没有，自己查。关于安装，我没用官方的。我用的是<a href="https://cmder.net/">cmder</a>。它集成了Git。</p>
<h1 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> <a href="https://www.baidu.com/s?wd=Git%20%E9%85%8D%E7%BD%AE">配置</a></h1>
<h2 id="查看配置"><a class="markdownIt-Anchor" href="#查看配置"></a> 查看配置</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --system --list</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --<span class="built_in">local</span>  --list</span><br></pre></td></tr></table></figure>
<p> 从上面三条命令可以看出<code>--list</code>⇔<code>-l</code>。system指安装目录下的gitconfig文件，global指用户目录（~）下的gitconfig文件，local指当前仓库的gitconfig文件。</p>
<h2 id="配置-2"><a class="markdownIt-Anchor" href="#配置-2"></a> 配置</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;150811&quot;</span> <span class="comment"># 名称 引号可加可不加</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email 150811@qq.com <span class="comment"># 邮箱</span></span><br></pre></td></tr></table></figure>
<p> 看了上上面的命令，可以自行对上面的命令进行改造。实在不想打命令，可以去对应文件修改。关于冒充，最好不要。</p>
<h1 id="命令合集部分跳转"><a class="markdownIt-Anchor" href="#命令合集部分跳转"></a> 命令合集部分跳转</h1>
<ol>
<li><a href=#qt>其他</a></li>
<li><a href=#tag>tag</a></li>
<li><a href=#rebase>rebase</a></li>
<li><a href=#pf>pull和fetch</a></li>
<li><a href=#push>push</a></li>
<li><a href=#cherry-pick>chrerry-pick</a></li>
<li><a href=#stash>stash</a></li>
<li><a href="#merge">merge合并和rebase</a></li>
<li>[branch](# branch分支相关)</li>
<li><a href="#remote%E8%BF%9C%E7%A8%8B%E7%9B%B8%E5%85%B3">remote</a></li>
<li><a href="#rm">rm</a></li>
<li><a href="#checkout">checkout和resotre恢复相关</a></li>
<li><a href="#reset">reset和revert</a></li>
<li><a href="#log">log</a></li>
</ol>
<h1 id="命令合集"><a class="markdownIt-Anchor" href="#命令合集"></a> 命令合集</h1>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p> 这个命令可以初始化一个空仓库。也可以用下面的命令得到一个仓库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> [url] [<span class="built_in">dir</span>]</span><br></pre></td></tr></table></figure>
<p> 如果不加路径，就会在当前路径生成一个仓库名的文件夹。后续需要进入这个文件夹。所以我一般会用<code>.</code>这路径。</p>
<hr />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git add [file]</span><br></pre></td></tr></table></figure>
<p> <code>git add</code>这个命令作用很多。</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;消息&quot;</span> [file 不加则全部]</span><br><span class="line">git commit //会进入编辑模式，用的编辑器取决于配置文件</span><br><span class="line">git commit --amend //常常用来修改某个branch上最顶端的commit</span><br><span class="line">git commit -c ORIG_HEAD  //-c选项使得新提交的<span class="built_in">log</span> message重用ORIG_HEAD指向的commit使用的<span class="built_in">log</span> message，但允许用户编辑（查--amend得到）</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p> 这个不多说，<s>懂得都懂，不懂得，说了你也不明白，不如不说。你们也别来问我怎么了，利益牵扯太大，说了对你们也没什么好处，当不知道就行了，其余的我只能说这里面水很深，牵扯到很多大人物。详细资料你们自己找是很难找的，网上大部分已经删除干净了，所以我只能说懂得都懂，不懂得也没办法。</s></p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<p> 这个命令可以查看当前仓库的状态，会提示你用什么命令来解决问题。</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff [file]</span><br></pre></td></tr></table></figure>
<p> 这个命令可以看到文件有什么修改。当然这时可能看到乱码。自行解决。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff：是查看working tree与index的差别的。</span><br><span class="line">git diff --cached：是查看index与repository的差别的。</span><br><span class="line">git diff HEAD：是查看working tree和repository的差别的。其中：HEAD代表的是最近的一次commit的信息。</span><br></pre></td></tr></table></figure>
<p> <span id=diff>上述命令</span>来自<a href="https://www.liaoxuefeng.com/wiki/896043488029600">教程</a>的评论区，我比较相信。<code>git diff HEAD -- readme.txt</code>中间确实有空格。</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">log</span> --graph</span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline</span><br><span class="line">git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure>
<p> 这个命令建议使用简写。不打命令就在文件里改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lg = <span class="built_in">log</span> --graph --pretty=format:<span class="string">&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27;</span> --abbrev-commit --<span class="built_in">date</span>=relative</span><br><span class="line">llg = <span class="built_in">log</span> --color --graph --pretty=format:<span class="string">&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27;</span> --abbrev-commit</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure>
<p> <span id=log>这个命令</span>可以看每次的命令。对于我来说，可以方便回退到某个版本。</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard HEAD^ </span><br><span class="line">下面有git reset --soft HEAD^ </span><br><span class="line">默认是--mixed</span><br></pre></td></tr></table></figure>
<p> <span id=reset>这个命令</span>可以回退到某一个版本。win上需要双倍<code>^</code>（父）。后面可以理解为指针。还有~<num>。</p>
<p> 对于使用<code>--hard</code>，我还是有些疑惑。我还是查阅过一点资料的。这种疑惑是一种知识不全的感觉。</p>
<p> <code>reset</code>好像有点危险。远程无效。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git revert HEAD </span><br></pre></td></tr></table></figure>
<p> 可以分享给别人。撤销提交，引入新提交，和提交前一样。</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -- readme.txt</span><br></pre></td></tr></table></figure>
<p> <span id=checkout>这个命令</span>结合可以撤销修改到最近的<code>commit or add</code>(感觉有问题，是不是直接从暂存区恢复？)状态。理解起来很烦，所以我一般用<code>switch</code>。</p>
<p> 修改了工作区，可以用上面的命令丢弃修改。改了工作区有<code>add</code>了，用<code>git reset HEAD &lt;file&gt;</code>，再使用上面的命令。</p>
<p> 较高的Git版本，会提示用<code>restore</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">从暂存区恢复工作区，</span><br><span class="line">git resotre --worktree readme.txt</span><br><span class="line">从master恢复暂存区 </span><br><span class="line">git restore --staged readme.txt</span><br><span class="line">从master同时恢复工作区和暂存区</span><br><span class="line">git restore --<span class="built_in">source</span>=HEAD --staged --worktree readme.txt</span><br></pre></td></tr></table></figure>
<hr />
<p> <span id=rm>rm</span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">rm</span></span><br><span class="line">git <span class="built_in">rm</span> --cached</span><br><span class="line">git <span class="built_in">rm</span> -r</span><br><span class="line">直觉告诉我应该有</span><br><span class="line">git <span class="built_in">rm</span> -rf</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin [仓库克隆或下载那的链接]</span><br></pre></td></tr></table></figure>
<p> <span id=remote>这个命令</span>结合可以关联远程仓库。我是把<code>origin</code>理解为主机名的，配置文件看一看，大概就理解了。取消关联<code>git remote rm origin</code>（没试过）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote</span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure>
<p> 上面的命令用来查看远程库的信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br><span class="line">追踪远程分支</span><br><span class="line">还可以</span><br><span class="line">git<span class="string">&#x27;checkout……</span></span><br></pre></td></tr></table></figure>
<p> 第一次推送要用类似上面的命令。</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b dev</span><br><span class="line">推荐使用</span><br><span class="line">git switch -c dev</span><br></pre></td></tr></table></figure>
<p> 上面的<span id=branch>命令</span>表示创建并切换分支。可以理解为下面两条命令。似乎还可以加上远程分支<code>origin/name</code>和<code>commit_id</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch dev</span><br><span class="line">git checkout dev</span><br></pre></td></tr></table></figure>
<p> 对于查看分支可以用下面的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<p> 删除分支可以用下面的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d dev</span><br><span class="line">-D 强行删除</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch --set-upstream-to=origin/dev dev</span><br></pre></td></tr></table></figure>
<p> 上面的命令是来链接本地分支与远程分支的。</p>
<hr />
<p> <span id=merge>合并</span>，假设有两个分支，在生成另一个分支切出去后，主分支没动。当另一个分支有提交后，在主分支合并会直接前进。如果主分支也有提交，合并会形成一个新的提交。它有两个父结点的提交。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git merge dev</span><br><span class="line">git merge --no-ff -m <span class="string">&quot;merge with no-ff&quot;</span> dev</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rebase master 会把当前的复制到master。 可以跟两个，搬后面的</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure>
<p> <span id=stash>这个命令</span>可以储藏当前工作区。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure>
<p> 查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git stash pop</span><br><span class="line">git stash apply stash@&#123;0&#125;</span><br></pre></td></tr></table></figure>
<p> 恢复</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git cherry-pick 4c805e2</span><br></pre></td></tr></table></figure>
<p> <span id=cherry-pick>这个命令</span>可以复制指定提交到当前HEAD，可以更多个<code>commit_id</code>，不过顺序又要求（如果没记错）。</p>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push [主机名] [本地分支]:[远程分支]</span><br><span class="line">不带参数会和push.default有关。</span><br></pre></td></tr></table></figure>
<p> <span id=push>这个命令</span>不加本地分支会删除远程分支。</p>
<hr />
<div id=pf>pull和fetch</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull 等价git fetch 加 git merge</span><br><span class="line">git pull --rebase</span><br><span class="line">git pull [主机名] [远程分支]:[本地分支]</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git fetch 本地master不会前进</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rebase 分支合并在前面</span><br><span class="line">git rebase -i HEAD~4 提交历史是直线，还可以用前面的分支名。（游戏得出）</span><br><span class="line">git rebase --interactive HEAD~4</span><br></pre></td></tr></table></figure>
<p> <span id=rebase>如果</span>不知道哈希值，可以用它的交互模式。可以调序、删除不要、合并提交（游戏）。</p>
<hr />
<div id=tag>tag</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git tag</span><br><span class="line">git tag v1.0</span><br><span class="line">git tag v0.9 f52c633</span><br><span class="line">git tag -a v0.1 -m <span class="string">&quot;version 0.1 released&quot;</span> 1094adb</span><br><span class="line">git show &lt;tagname&gt;</span><br><span class="line">git tag -d v0.1</span><br><span class="line">git push origin v1.0</span><br><span class="line">git push origin --tags</span><br><span class="line">git push origin :refs/tags/v0.9</span><br></pre></td></tr></table></figure>
<hr />
<p> <div id=qt>其他</div></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout [commit_id/branch_name] 我是这么理解的。还可以加~、^</span><br><span class="line">---</span><br><span class="line"><span class="built_in">cat</span> .git\HEAD 看HEAD的指向。</span><br><span class="line">git symbolic-ref HEAD 如果HAED指向引用，用这个查看指向。</span><br><span class="line">---</span><br><span class="line">git branch -f master HEAD~3 ‘-f’容许我们将分支强制移动到指定位置。 </span><br><span class="line">git reset --soft HEAD^  //将branch的头指针向前移动一个commit，--soft选项使得index和workspace tree的内容保持移动之前不变（查--amend得到的）（前面有--hard的，因此可以反向理解）</span><br><span class="line">---</span><br><span class="line">git bisect</span><br><span class="line">---</span><br><span class="line">git describe &lt;ref&gt; </span><br><span class="line">输出&lt;tag&gt;_&lt;numCommits&gt;_g&lt;<span class="built_in">hash</span>&gt;</span><br><span class="line">tag 表示的是离 ref 最近的标签， numCommits 是表示这个 ref 与 tag 相差有多少个提交记录， <span class="built_in">hash</span> 表示的是你所给定的 ref 所表示的提交记录哈希值的前几位。</span><br><span class="line">当 ref 提交记录上有某个标签时，则只输出标签名称</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>Gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript简单笔记</title>
    <url>/2019/10/24/JavaScript%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="系列链接"><a class="markdownIt-Anchor" href="#系列链接"></a> 系列链接</h1>
<p><a href="https://pengxiandyou.github.io/2019/08/27/HTML%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">HTML简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/01/CSS%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">CSS简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/JavaScript%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">JavaScript简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/jQuery%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">jQuery简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/%E6%8B%93%E5%B1%95%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">拓展简单笔记</a><br/></p>
<h1 id="javascript-皮毛学习"><a class="markdownIt-Anchor" href="#javascript-皮毛学习"></a> JavaScript 皮毛学习</h1>
<p><img data-src="https://i.loli.net/2019/08/07/muwZjGEB3il7MPb.png" alt="什么是JavaScript.PNG" /></p>
<p><img data-src="https://i.loli.net/2019/08/07/vtSUNueEXQxBRAO.png" alt="BOM浏览器对象模型.PNG" /></p>
<p><img data-src="https://i.loli.net/2019/08/07/z5jXuydGYp1Obvm.png" alt="DOM文档对象模型.PNG" /></p>
<h2 id="一-基本结构"><a class="markdownIt-Anchor" href="#一-基本结构"></a> 一 基本结构</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascrip&quot;&gt;</span><br><span class="line">语句;如:</span><br><span class="line">alert(&quot;hello&quot;);写完整: window.alert(&quot;hello&quot;); BOM里面的window的方法</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>写到<code>js</code>文件里</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;&quot;&gt;&lt;/script&gt; language=&quot;javascript&quot;省略了</span><br></pre></td></tr></table></figure>
<p>另一种写法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input name=&quot;btn&quot; type=&quot;button&quot; value=&quot;弹出消息框&quot; onclick=&quot;javascript:alert(&#x27;你来啦&#x27;);&quot;/&gt;</span><br><span class="line">双引号里用单引号</span><br></pre></td></tr></table></figure>
<h2 id="二-例子"><a class="markdownIt-Anchor" href="#二-例子"></a> 二 例子</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    document.write(&quot;123&quot;);</span><br><span class="line">    for(var i=0;i&lt;5;i++)&#123;</span><br><span class="line">    document.write(&quot;233&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="三-语法"><a class="markdownIt-Anchor" href="#三-语法"></a> 三 语法</h2>
<pre><code>1. `js`弱类型语法: 声明都用`var` 类型由赋值决定
 - `var i=1;` `i=1.1;` `i=&quot;aaa&quot;;` `i=new Date();` `var j=233;` `var i,j,k=10;` `l=233;`
 - `alert(typeof(i));`可看类型 (提示框)
   - `typeof `运算符返回值如下：
     - `undefined`：变量被声明后，但未被赋值
     - `string`：用单引号或双引号来声明的字符串
     - `boolean`: `true`或`false`
     - `number`：整数或浮点数
     - `object`: `javascript`中的对象、数组和`null`
 - 输入框: `prompt(&quot;提示信息&quot;,&quot;提示信息&quot;);`
</code></pre>
<h2 id="四-函数"><a class="markdownIt-Anchor" href="#四-函数"></a> 四 函数</h2>
<ol>
<li>
<p><code>parseInt()</code> : 字符串转整数  <code>parseDouble()</code> : 转小数 <code>isNaN</code> : is not a number(不是数返回真,数返回假)</p>
</li>
<li>
<p>自定义函数</p>
<ul>
<li>
<p>无参</p>
<p>function 方法名(){</p>
<p>}</p>
</li>
<li>
<p>带参</p>
<p>function 方法名(变量名1,变量名2){</p>
<p>}</p>
</li>
</ul>
</li>
<li>
<p>匿名写法</p>
<ul>
<li>事件名=function(){代码;}</li>
<li>(function (){代码;}<font color="#ff4040">()</font>)</li>
</ul>
</li>
<li>
<p>直接运行</p>
<ul>
<li><code>window.onload=function()&#123;代码&#125;</code></li>
<li><code>&lt;body onload=&quot;事件名()&quot;&gt;</code> (事件 我理解 <code>on</code> 开头 <code>onload</code> <code>onmouseover</code> <code>onclick</code> <code>onchange</code>)</li>
</ul>
</li>
</ol>
<h2 id="五-window对象"><a class="markdownIt-Anchor" href="#五-window对象"></a> 五 window对象</h2>
<ol>
<li>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>screen</code></td>
<td style="text-align:center">有关客户端的屏幕和显示性能的消息</td>
</tr>
<tr>
<td style="text-align:center"><code>location</code></td>
<td style="text-align:center">有关当前URL的信息</td>
</tr>
</tbody>
</table>
<p>例子:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alert(screen.width+&quot;,&quot;+screen.height);</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.location.href=&quot;https://github.com/pengxiandyou&quot;;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a onclick=&quot;javascript:window.location.href=&#x27;https://github.com/pengxiandyou&#x27;&quot;&gt;我的主页&lt;/a&gt; //javascript:不写也对</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>window常用方法 : <code>alert()</code> <code>prompt()</code> <code>confirm()确认框</code></p>
<p>定时器 <code>setTimeout()</code> <code>setInterval()</code></p>
<p>例子 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//不要运行,运行下面的</span><br><span class="line">function  test()&#123;</span><br><span class="line">	 var item=document.getElementById(&quot;mytxt&quot;);</span><br><span class="line">	 item.value=&quot;2&quot;;//.value就是取值</span><br><span class="line"> 	document.getElementById(&quot;mydiv&quot;).innerHTML=&quot;&lt;h1&gt;我爱你&lt;/h1&gt;&quot;;// 可以放标签 innerText只能放文本</span><br><span class="line"> 	var num=parseInt(item.value)+1;</span><br><span class="line"> 		item.value=num;</span><br><span class="line"> setTimeout(&quot;test&quot;,1000);//感觉像递归</span><br><span class="line">&#125;</span><br><span class="line">window.onload=function()&#123;</span><br><span class="line">	 setTimeout(&quot;test&quot;,1000);//指定多久以后制行一次 只执行一次	</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">-----------------------------------------------</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;mytxt&quot;/&gt;</span><br><span class="line">&lt;div id=&quot;mydiv&quot;&gt; aaa &lt;/div&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;0&quot; onclick=&quot;test()&quot;/&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function  test()&#123;</span><br><span class="line">	var item=document.getElementById(&quot;mytxt&quot;);</span><br><span class="line">	var num=parseInt(item.value)+1;</span><br><span class="line">	item.value=num;</span><br><span class="line">	setTimeout(&quot;test()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line">window.onload=function()&#123;</span><br><span class="line">	setTimeout(&quot;test()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------</span><br><span class="line"> &lt;input type=&quot;text&quot; id=&quot;mytxt&quot; value=&quot;0&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var tm;</span><br><span class="line">function start()&#123;</span><br><span class="line">var item=document.getElementById(&quot;mytxt&quot;);</span><br><span class="line">var num=parseInt(item.value)+1;</span><br><span class="line">item.value=num;</span><br><span class="line">tm=setTimeout(&quot;start()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line">function stop()&#123;</span><br><span class="line">clearTimeout(tm);</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------------------</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;mytxt&quot; value=&quot;0&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;开始&quot; onclick=&quot;start()&quot;/&gt;//开始点得越多动得越快结束也要点多次</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;结束&quot; onclick=&quot;stop()&quot;/&gt;//虽然看起来tm只有一个</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var tm;</span><br><span class="line">function start()&#123;</span><br><span class="line">var item=document.getElementById(&quot;mytxt&quot;);</span><br><span class="line">var num=parseInt(item.value)+1;</span><br><span class="line">item.value=num;</span><br><span class="line">document.getElementById(&quot;begin&quot;).disabled=true;</span><br><span class="line">tm=setTimeout(&quot;start()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line">function stop()&#123;</span><br><span class="line">document.getElementById(&quot;begin&quot;).disabled=false;</span><br><span class="line">clearTimeout(tm);</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------------------</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;mytxt&quot; value=&quot;0&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;开始&quot; onclick=&quot;start()&quot; id=&quot;begin&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;结束&quot; onclick=&quot;stop()&quot;/&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function  test()&#123;</span><br><span class="line">	var item=document.getElementById(&quot;mytxt&quot;);</span><br><span class="line">	var num=parseInt(item.value)+1;</span><br><span class="line">	item.value=num;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line">window.onload=function()&#123;</span><br><span class="line">	setInterval(&quot;test()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------</span><br><span class="line"> &lt;input type=&quot;text&quot; id=&quot;mytxt&quot;value=&quot;0&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var tm;</span><br><span class="line">function  test()&#123;</span><br><span class="line">	var item=document.getElementById(&quot;mytxt&quot;);</span><br><span class="line">	var num=parseInt(item.value)+1;</span><br><span class="line">	item.value=num;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line">function begin()&#123;</span><br><span class="line">	tm=setInterval(&quot;test()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line">function stop()&#123;</span><br><span class="line">	clearInterval(tm);</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;mytxt&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;开始&quot; onclick=&quot;begin()&quot; id=&quot;begin&quot;/&gt;//多点几次也动得快,但结束只能结束一个</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;结束&quot; onclick=&quot;stop()&quot;/&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="bom编程"><a class="markdownIt-Anchor" href="#bom编程"></a> <code>BOM</code>编程</h2>
<p>使用display样式属性控制元素的隐藏和显示 自带属性可以直接点 css样式要点style再点</p>
<ol>
<li><code>Document</code>对象常用方法</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">方法</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>getElementByID()</code></td>
<td style="text-align:center">返回对拥有指定id的第一个对象的引用</td>
</tr>
<tr>
<td style="text-align:center"><code>getElementsByName()</code></td>
<td style="text-align:center">返回带有指定名称的对象的集合</td>
</tr>
<tr>
<td style="text-align:center"><code>getElementsByTagName()</code></td>
<td style="text-align:center">返回带有指定标签名的对象的集合</td>
</tr>
<tr>
<td style="text-align:center"><code>write()</code></td>
<td style="text-align:center">向文档写文本、HTML表达式或JavaScript代码</td>
</tr>
</tbody>
</table>
<p><code>visibility</code>属性的值</p>
<table>
<thead>
<tr>
<th style="text-align:center">值</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>visible</code></td>
<td style="text-align:center">表示元素可见</td>
</tr>
<tr>
<td style="text-align:center"><code>hidden</code></td>
<td style="text-align:center">表示元素不可见</td>
</tr>
</tbody>
</table>
<p>语法 : <code>object.style.visibility=&quot;值&quot;</code>  一般不用,隐藏会留空,用<code>display</code></p>
<ol start="2">
<li>
<p>查看/修改属性节点</p>
<ul>
<li>
<p><code>getAttribute</code>(“属性名”)</p>
</li>
<li>
<p><code>setAttribute</code>(“属性名”.“属性值”)</p>
</li>
<li>
<p>例子 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.onload=function()&#123;</span><br><span class="line">	document.getelementById(&quot;bt&quot;).onclick=function()&#123;</span><br><span class="line">		var item=document.getelementById(&quot;link&quot;);</span><br><span class="line">		alert(item.getAttribute(&quot;href&quot;));	</span><br><span class="line">		alert(item.href);</span><br><span class="line">		item.setAttribute(&quot;href&quot;,&quot;http://pengxiandyou.gitee.io&quot;);</span><br><span class="line">		item.href=&quot;htttp://www.baidu.com&quot;;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------</span><br><span class="line">&lt;a href=&quot;http://www.baidu.com&quot; id=&quot;link&quot;&gt;百度&lt;/a&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;bt&quot; value=&quot;点击&quot;/&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>创建和增加节点</p>
<ul>
<li>
<p><code>createElement()</code> : 创建节点</p>
</li>
<li>
<p><code>appendChild()</code> : 末尾追加方式插入节点</p>
</li>
<li>
<p><code>nsetBefore()</code> : 在指定节点前插入新节点</p>
</li>
<li>
<p>例子 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> window.onload=function()&#123;</span><br><span class="line">        	document.getElementById(&quot;bt&quot;).onclick=function()&#123;</span><br><span class="line">       		 var myimg=document.createElement(&quot;img&quot;);</span><br><span class="line">   myimg.setAttribute(&quot;src&quot;,&quot;https://i.loli.net/2019/08/07/YLJRbAhD7tS9Tk3.gif&quot;);</span><br><span class="line">        //document.body.appendChild(myimg);</span><br><span class="line">        document.body.insertBefore(myimg,document.getElementById(&quot;mydiv&quot;));</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">-----------------------------------</span><br><span class="line">  &lt;div id=&quot;mydiv&quot;&gt;aaaaaa&lt;/div&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;bt&quot; value=&quot;点击&quot;/&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>删除和替换节点</p>
<ul>
<li>
<p><code>removeChild()</code> : 删除节点</p>
</li>
<li>
<p><code>replaceChild()</code> : 删除节点</p>
</li>
<li>
<p>例子 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> window.onload=function()&#123;</span><br><span class="line">        	document.getElementById(&quot;bt&quot;).onclick=function()&#123;</span><br><span class="line">       		 var myimg=document.createElement(&quot;img&quot;);</span><br><span class="line">   myimg.setAttribute(&quot;src&quot;,&quot;https://i.loli.net/2019/08/07/YLJRbAhD7tS9Tk3.gif&quot;);</span><br><span class="line">        //document.body.appendChild(myimg);</span><br><span class="line">        document.body.insertBefore(myimg,document.getElementById(&quot;mydiv&quot;));</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">-----------------------------------</span><br><span class="line">  &lt;div id=&quot;mydiv&quot;&gt;aaaaaa&lt;/div&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;bt&quot; value=&quot;点击&quot;/&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  	document.getElementById(&quot;bt&quot;).onclick=function()&#123;</span><br><span class="line">    		var myimg=document.createElement(&quot;img&quot;);    		myimg.setAttribute(&quot;src&quot;,&quot;https://i.loli.net/2019/08/07/YLJRbAhD7tS9Tk3.gif&quot;);</span><br><span class="line">   		 	//document.body.appendChild(myimg);</span><br><span class="line">   		 	document.body.insertBefore(myimg,document.getElementById(&quot;mydiv&quot;));</span><br><span class="line">	&#125;;</span><br><span class="line">	document.getElementById(&quot;bt1&quot;).onclick=function()&#123;</span><br><span class="line">    		var myimg=document.getElementsByTagName(&quot;img&quot;);</span><br><span class="line">    		for(i=myimg.length;i&gt;0;)&#123;   //注意 其他写法有可能在多张图片下要点多次删除 或者 数组越界</span><br><span class="line">    		i--	;		</span><br><span class="line">    			document.body.removeChild(myimg[i]);</span><br><span class="line">    		&#125;</span><br><span class="line">    		</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">------------------------------------------</span><br><span class="line">  &lt;div id=&quot;mydiv&quot;&gt;aaaaaa&lt;/div&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;bt&quot; value=&quot;点击&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;bt1&quot; value=&quot;删除&quot;/&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>样式操作</p>
<p>例子 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">font-size:25px;</span><br><span class="line">background-color:pink;</span><br><span class="line">&#125;</span><br><span class="line">-------------</span><br><span class="line">驼峰命名</span><br><span class="line">.style.fontSize</span><br><span class="line">.style.backgroundColor</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>改变样式属性</p>
<ul>
<li>
<p>style属性 一次改一个</p>
</li>
<li>
<p><code>className</code>属性 可以指定样式表的名字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ul li&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    list-style: none;</span><br><span class="line">    padding: 10px;</span><br><span class="line">    background: url(&quot;https://i.loli.net/2019/08/07/3OwH5qKcXdsRzGC.jpg&quot;);</span><br><span class="line">    width: 1100px;</span><br><span class="line">    height: 600px;</span><br><span class="line">&#125;</span><br><span class="line">---------------------</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">  	&lt;li onmouseover=&quot;this.style.backgroundImage=&#x27;url(https://i.loli.net/2019/08/07/YLJRbAhD7tS9Tk3.gif)&#x27;&quot;</span><br><span class="line">  	onmouseout=&quot;this.style.backgroundImage=&#x27;url(https://i.loli.net/2019/08/07/3OwH5qKcXdsRzGC.jpg)&#x27;&quot;</span><br><span class="line">  	&gt;1233222222222222222222222222&lt;/li&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">两类样式</span><br><span class="line">-------------------------</span><br><span class="line">this.className=&quot;类名&quot;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>表单验证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     	function validate()&#123;</span><br><span class="line">      		var name=document.getElementById(&quot;name&quot;).value;</span><br><span class="line">      		if (name==&quot;&quot;) &#123;</span><br><span class="line">      			document.getElementById(&quot;nameerror&quot;).innerHTML=&quot;用户名不能为空&quot;;</span><br><span class="line">      			return false;</span><br><span class="line">      		&#125;</span><br><span class="line">      		if (name.length&lt;3 ||name.length&gt;6) &#123;</span><br><span class="line">      			document.getElementById(&quot;nameerror&quot;).innerHTML=&quot;长度3到6之间&quot;;</span><br><span class="line">      			return false;</span><br><span class="line">      		&#125;</span><br><span class="line">      		</span><br><span class="line">      		var password = document.getElementById(&quot;password&quot;).value;</span><br><span class="line">      		if (password==&quot;&quot;) &#123;</span><br><span class="line">      			document.getElementById(&quot;passworderror&quot;).innerHTML=&quot;密码不能为空&quot;;</span><br><span class="line">      			return false;</span><br><span class="line">      		&#125;</span><br><span class="line">      		if (password.length&lt;8 ||password.length&gt;16) &#123;</span><br><span class="line">      			document.getElementById(&quot;passworderror&quot;).innerHTML=&quot;长度8到16之间&quot;;</span><br><span class="line">      			return false;</span><br><span class="line">      		&#125; </span><br><span class="line">  </span><br><span class="line">      		 var cfpassword = document.getElementById(&quot;cfpassword&quot;).value;  		    </span><br><span class="line">      		 if (cfpassword==&quot;&quot;) &#123;</span><br><span class="line">      			document.getElementById(&quot;cfpassworderror&quot;).innerHTML=&quot;请确认密码&quot;;</span><br><span class="line">      			return false;</span><br><span class="line">      		&#125;</span><br><span class="line">      		</span><br><span class="line">     			if (cfpassword!=password) &#123;</span><br><span class="line">      			document.getElementById(&quot;cfpassworderror&quot;).innerHTML=&quot;密码不相同&quot;;</span><br><span class="line">      			return false;</span><br><span class="line">      		&#125;     </span><br><span class="line">  </span><br><span class="line">      		var email = document.getElementById(&quot;email&quot;).value;  </span><br><span class="line">      		 if (!(/^\w+@[a-zA-Z0-9]&#123;2,10&#125;(?:\.[a-z]&#123;2,4&#125;)&#123;1,3&#125;$/.test(email)) )</span><br><span class="line">      		 &#123;</span><br><span class="line">      			document.getElementById(&quot;cfemail&quot;).innerHTML=&quot;请输入正确邮箱&quot;;</span><br><span class="line">      			return false;</span><br><span class="line">      		&#125; 		   		</span><br><span class="line">      		return true;</span><br><span class="line">      	&#125;</span><br><span class="line">      	    window.onload=function()&#123;</span><br><span class="line">          	document.getElementById(&quot;bt&quot;).onclick=function()&#123;</span><br><span class="line">          		if (validate()) &#123;</span><br><span class="line">          			document.getElementById(&quot;myform&quot;).submit();</span><br><span class="line">          		&#125;&#125;&#125;;</span><br><span class="line">   ------------------------------</span><br><span class="line">   &lt;form action=&quot;#&quot; method=&quot;get&quot; onsubmit=&quot;return validate()&quot;&gt;&lt;!--返回真假  必须要return--&gt;</span><br><span class="line">  	用户名 : &lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot;/&gt;&lt;span id=&quot;nameerror&quot;&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">  	密 码 : &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot;/&gt;&lt;span id=&quot;passworderror&quot;&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">确 认 : &lt;input type=&quot;cfpassword&quot; name=&quot;cfpassword&quot; id=&quot;cfpassword&quot;/&gt;&lt;span id=&quot;cfpassworderror&quot;&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">  	邮 箱 : &lt;input type=&quot;text&quot; name=&quot;email&quot; id=&quot;email&quot;&gt; &lt;span id=&quot;cfemail&quot;&gt;&lt;/span&gt;	&lt;br/&gt;</span><br><span class="line">  	&lt;input type=&quot;submit&quot; value=&quot;注册&quot;&gt;</span><br><span class="line">  &lt;/form&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML简单笔记</title>
    <url>/2019/08/27/HTML%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<center><font size=10 > <a name=w3c href=https://www.w3school.com.cn/>w3c</a> </font></center>
<hr/>
# 系列链接
<p><a href="https://pengxiandyou.github.io/2019/08/27/HTML%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">HTML简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/01/CSS%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">CSS简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/JavaScript%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">JavaScript简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/jQuery%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">jQuery简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/%E6%8B%93%E5%B1%95%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">拓展简单笔记</a><br/></p>
<h1 id="一-标题标签"><a class="markdownIt-Anchor" href="#一-标题标签"></a> 一 标题标签</h1>
<ol>
<li>
<p><code>&lt;h1&gt;一级标题&lt;/h1&gt;</code></p>
</li>
<li>
<p><code>&lt;h2&gt;二级标题&lt;/h2&gt;</code></p>
</li>
<li>
<p><code>&lt;h3&gt;三级标题&lt;/h3&gt;</code></p>
</li>
<li>
<p><code>&lt;h4&gt;四级标题&lt;/h4&gt;</code></p>
</li>
<li>
<p><code>&lt;h5&gt;五级标题&lt;/h5&gt;</code></p>
</li>
<li>
<p><code>&lt;h6&gt;六级标题&lt;/h6&gt;</code></p>
</li>
<li>
<p><code>&lt;h7&gt;七级标题&lt;/h7&gt;</code>  <font color=red> 没有</font></p>
</li>
</ol>
<h1 id="二-段落标签"><a class="markdownIt-Anchor" href="#二-段落标签"></a> 二 段落标签</h1>
<ol>
<li><code>&lt;p&gt;段落&lt;/p&gt;</code></li>
</ol>
<h1 id="三标签"><a class="markdownIt-Anchor" href="#三标签"></a> 三`标签</h1>
<ol>
<li><code>&lt;br/&gt;</code></li>
</ol>
<h1 id="四-水平线标签"><a class="markdownIt-Anchor" href="#四-水平线标签"></a> 四 水平线标签</h1>
<ol>
<li><code>&lt;hr /&gt;</code></li>
</ol>
<h1 id="五-加粗和斜体"><a class="markdownIt-Anchor" href="#五-加粗和斜体"></a> 五 加粗和斜体</h1>
<ol>
<li><code>&lt;strong&gt;加粗&lt;/strong&gt;</code> <strong>加粗</strong></li>
<li><code>&lt;b&gt;加粗&lt;/b&gt;</code> <b>加粗</b></li>
<li><code>&lt;em&gt;斜体&lt;/em&gt;</code> <em>斜体</em></li>
<li><code>&lt;i&gt;斜体&lt;/i&gt;</code>  <i>斜体</i></li>
<li><code>&lt;font size=&quot;3&quot; color=&quot;red&quot;&gt;字体标签&lt;/font&gt;</code> <font size="3" color="red">字体标签</font></li>
<li>按照标准不建议用 有样式 <code>css</code>来控制  自己怎么方便怎么用</li>
</ol>
<h1 id="六-特殊符号-网页显示一些东西"><a class="markdownIt-Anchor" href="#六-特殊符号-网页显示一些东西"></a> 六 特殊符号 (网页显示一些东西)</h1>
<ol>
<li><code>&amp;nbsp;</code> 空 格</li>
<li><code>&amp;lt;</code> &lt;</li>
<li><code>&amp;gt;</code> &gt;</li>
<li><code>&amp;quto;</code>  &quot; markdown不识别可能</li>
<li><code>&amp;copy;</code> ©</li>
</ol>
<h1 id="七-图片标签"><a class="markdownIt-Anchor" href="#七-图片标签"></a> 七 图片标签</h1>
<ol>
<li><code>&lt;img src=&quot;&quot; /&gt;</code>
<ul>
<li><code>src</code>: 指定图片路径 <font color="blue">相对引用:</font>以当前网页路径作为参考位置,了解<font color="red">.</font> 和<font color="red">…</font> <font color="blue">绝对引用:</font> 例如 <a href="https://www.baidu.com/img/superlogo_c4d7df0a003d3db9b65e9ef0fe6da1ec.png?where=super">https://www.baidu.com/img/superlogo_c4d7df0a003d3db9b65e9ef0fe6da1ec.png?where=super</a></li>
<li><code>width</code> <code>height</code></li>
<li><code>title</code>: 鼠标放到图片上的悬浮文字提示</li>
<li><code>al</code>t: 图片不能正常显示 替换图片的文</li>
</ul>
</li>
</ol>
<h1 id="八-超链接"><a class="markdownIt-Anchor" href="#八-超链接"></a> 八 超链接</h1>
<ol>
<li><code>&lt;a href=&quot;&quot;&gt;链接焦点 图片or文字&lt;/a&gt;</code> <a href="">超链接</a>
<ul>
<li>target:  _self:默认值  _blank:新窗口</li>
<li>锚链接: 当前页面跳转 先在目标地写<code>&lt;a name=&quot;锚名字&quot;&gt;&lt;/a&gt;</code> 然后点击<code>&lt;a href=&quot;#锚名字&quot;&gt;&lt;/a&gt;</code> # 浏览器解释回到最上面 例如: <a href="#w3c">顶部w3c</a></li>
<li>功能链接: 可以启动第三方软件 有特定格式 例如 <code>&lt;a href=&quot;mailto:1508115864@qq.com&quot;&gt;联系我&lt;/a&gt;</code> <a href="mailto:1508115864@qq.com">联系我</a></li>
</ul>
</li>
</ol>
<h1 id="九-列表"><a class="markdownIt-Anchor" href="#九-列表"></a> 九 列表</h1>
<ol>
<li>
<p>无序列表</p>
<ol>
<li></li>
</ol>
   <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>桔子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如</p>
   <ul><li>桔子</li><li>香蕉</li><li>苹果</li></ul>
<ol start="2">
<li>type: square: 正方形 disc: 实心圈(网页默认) circle: 空心圈</li>
</ol>
</li>
<li>
<p>有序列表</p>
<ol>
<li>
<pre class="highlight"><code class="html">h<span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>桔子<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>香蕉<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>
<span class="hljs-comment"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   	如</span><br><span class="line">      </span><br><span class="line">   &lt;ol&gt;&lt;li&gt;桔子&lt;/li&gt;&lt;li&gt;香蕉&lt;/li&gt;&lt;li&gt;苹果&lt;/li&gt;&lt;/ol&gt;</span><br><span class="line">   2. type: A &lt;font color =&quot;green&quot;&gt;or&lt;/font&gt; a I &lt;font color =&quot;green&quot;&gt;or&lt;/font&gt; i</span><br><span class="line">   </span><br><span class="line">3. 定义列表(常来用来做图文混排)</span><br><span class="line"></span><br><span class="line">   1. ```html</span><br><span class="line">      &lt;dl&gt;</span><br><span class="line">      &lt;dt&gt;水果:&lt;/dt&gt;</span><br><span class="line">      &lt;dd&gt;桔子&lt;/dd&gt;</span><br><span class="line">      &lt;dd&gt;香蕉&lt;/dd&gt;</span><br><span class="line">      &lt;dd&gt;苹果&lt;/dd&gt;</span><br><span class="line">      &lt;/dl&gt;</span><br></pre></td></tr></table></figure></span>
如
   <span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>水果:<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>桔子<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>香蕉<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>
   <span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span>

</code></pre>
</li>
</ol>
</li>
</ol>
<h1 id="十-表格布局-div-框架布局后面再说"><a class="markdownIt-Anchor" href="#十-表格布局-div-框架布局后面再说"></a> 十 表格布局 (DIV 框架布局后面再说)</h1>
<ol>
<li>
<p>规整排列数据</p>
</li>
<li>
<pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span>//网页默认没有边框
	<span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>//行
		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>我爱你<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>//列
		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>你爱我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
	<span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
	<span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>
		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>我和你<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>你和我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
	<span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>
<span class="hljs-comment"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   &lt;table&gt;</span><br><span class="line">   	&lt;tr&gt;</span><br><span class="line">   		&lt;td&gt;我爱你&lt;/td&gt;</span><br><span class="line">   		&lt;td&gt;你爱我&lt;/td&gt;</span><br><span class="line">   	&lt;/tr&gt;</span><br><span class="line">   	&lt;tr&gt;</span><br><span class="line">   		&lt;td&gt;我和你&lt;/td&gt;</span><br><span class="line">   		&lt;td&gt;你和我&lt;/td&gt;</span><br><span class="line">   	&lt;/tr&gt;</span><br><span class="line">   &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">3. border 边框(数`px`) width height</span><br><span class="line"></span><br><span class="line">4. 表格对齐</span><br><span class="line"></span><br><span class="line">5. 单元格对齐</span><br><span class="line"></span><br><span class="line">   &lt;table&gt;</span><br><span class="line">   	&lt;tr&gt;</span><br><span class="line">   		&lt;td&gt;属性&lt;/td&gt;</span><br><span class="line">   		&lt;td&gt;值&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;说明&lt;/td&gt;</span><br><span class="line">   	&lt;/tr&gt;</span><br><span class="line">   	&lt;tr&gt;</span><br><span class="line">   		&lt;td&gt;align&lt;br /&gt;水平对齐方式&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;left&lt;br /&gt;center&lt;br /&gt;right&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;左对齐&lt;br/&gt;居中对齐&lt;br /&gt;右对齐&lt;/td&gt;</span><br><span class="line">   	&lt;/tr&gt;</span><br><span class="line">       	&lt;tr&gt;</span><br><span class="line">   		&lt;td&gt;valign&lt;br /&gt;垂直对齐方式&lt;/td&gt;</span><br><span class="line">   		&lt;td&gt;top&lt;br /&gt;middle&lt;br /&gt;bottom&lt;br /&gt;baseline&lt;/td&gt;</span><br><span class="line">           &lt;td&gt;顶端对齐&lt;br/&gt;居中对齐&lt;br /&gt;低端对齐&lt;br /&gt;基线对齐&lt;/td&gt;</span><br><span class="line">   	&lt;/tr&gt;</span><br><span class="line">   &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">6. 好多地方都可以用上面的东西 就近原则</span><br><span class="line"></span><br><span class="line">7. 跨行跨列</span><br><span class="line"></span><br><span class="line">   - 跨列 水平合并</span><br><span class="line"></span><br><span class="line">     ```html</span><br><span class="line">     &lt;table&gt;</span><br><span class="line">     	&lt;tr&gt;</span><br><span class="line">     		&lt;td colspan=&quot;2&quot;&gt;你我&lt;/td&gt;</span><br><span class="line">     	&lt;/tr&gt;</span><br><span class="line">     	&lt;tr&gt;</span><br><span class="line">     		&lt;td&gt;我爱你&lt;/td&gt;</span><br><span class="line">     		&lt;td&gt;你爱我&lt;/td&gt;</span><br><span class="line">     	&lt;/tr&gt;</span><br><span class="line">     	&lt;tr&gt;</span><br><span class="line">     		&lt;td&gt;我和你&lt;/td&gt;</span><br><span class="line">     		&lt;td&gt;你和我&lt;/td&gt;</span><br><span class="line">     	&lt;/tr&gt;</span><br><span class="line">     &lt;/table&gt;</span><br></pre></td></tr></table></figure></span>
  如
  <span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span>
  	<span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>
  		<span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">"2"</span>&gt;</span>你我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
	 	<span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
  	<span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>
  		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>我爱你<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
  		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>你爱我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
  	<span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
  	<span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>
  		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>我和你<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
  		<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>你和我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
  	<span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>
  
- 跨行 垂直合并
  
     <span class="hljs-comment"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>你我<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>我爱你<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>你爱我<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>我和你<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>你和我<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></span>
     如
     <span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>
             <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">rowspan</span>=<span class="hljs-string">"2"</span>&gt;</span>你我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
             <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>我爱你<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
             <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>你爱我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
         <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>
             <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>我和你<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
             <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>你和我<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>
         <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
     <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>
     
- 两跨 自己专研

</code></pre>
</li>
</ol>
<h1 id="十一-框架布局"><a class="markdownIt-Anchor" href="#十一-框架布局"></a> 十一 框架布局</h1>
<ol>
<li>
<p>将一个页面分成若干个部分,每个部分嵌套一个页面 一般用来做后台管理页面(回忆某次<code>java</code>实践)</p>
<ul>
<li>
<p>分页面  <code>frameset</code>不能和<code>body</code>一起用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,20%,*&quot;</span>&gt;</span><span class="comment">&lt;!-- cols 也可以px --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span><span class="comment">&lt;!-- cols 也可以px --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>准备页面</p>
</li>
<li>
<p>关联页面 <code>src</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span><span class="comment">&lt;!-- cols 也可以px --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>指定目标位置 给<code>frame</code>起一个名字</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span><span class="comment">&lt;!-- cols 也可以px --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名字&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名字&quot;</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名字&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;名字&quot;</span>&gt;</span>链接焦点<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>禁止拖动 <code>noresize=&quot;noresize&quot;</code> 没有滚动条 <code>scrolling=&quot;no&quot;</code></p>
</li>
<li>
<p>子框架 <code>&lt;iframe src=&quot;&quot;&gt;&lt;/iframe&gt;</code>可以把页面加进来 页面复用 可以在<code>body</code>里用</p>
 <iframe src="https://aidn.jp/mikutap/" width=700px></iframe><br/>
 <iframe src="https://www.rainymood.com" width=700px></iframe>
</li>
</ol>
<h1 id="十二-表单-表单元素"><a class="markdownIt-Anchor" href="#十二-表单-表单元素"></a> 十二 表单 表单元素</h1>
<ol>
<li>
<ul>
<li>表单: 嵌套表单元素 填写的数据以一个表单整体提交</li>
<li>表单元素: 文本框 密码框 单选框 复选框 下拉列表</li>
</ul>
</li>
<li>
<pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post/get"</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"某html等"</span>&gt;</span> <span class="hljs-comment">&lt;!-- 默认get action:指定数据提交到服务器后由谁处理--&gt;</span> 
<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> 名字: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"name"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>/&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-comment">&lt;!-- 也可以用&lt;br /&gt;--&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> 密码: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span>/&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> 
	<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"Button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"提交"</span>/&gt;</span> <span class="hljs-comment">&lt;!-- 不传 一般不加name--&gt;</span>
	<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"reset"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"Reset"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"重填"</span>/&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>
<span class="hljs-comment"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   &lt;form method=&quot;get&quot; action=&quot;某html&quot;&gt;</span><br><span class="line">   &lt;p&gt; 名字: &lt;input name=&quot;name&quot; type=&quot;text&quot;/&gt; &lt;/p&gt;</span><br><span class="line">   &lt;p&gt; 密码: &lt;input name=&quot;password&quot; type=&quot;password&quot;/&gt; &lt;/p&gt;</span><br><span class="line">   &lt;p&gt; </span><br><span class="line">   	&lt;input type=&quot;submit&quot; name=&quot;Button&quot; value=&quot;提交&quot;/&gt;</span><br><span class="line">   	&lt;input type=&quot;reset&quot; name=&quot;Reset&quot; value=&quot;重填&quot;/&gt;</span><br><span class="line">   &lt;/p&gt;</span><br><span class="line">   &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">3. 有`name`的表单元素才会提交</span><br><span class="line"></span><br><span class="line">4. - `text` : `size` 文本框长度 `maxlength` 可输入最大字符</span><br><span class="line"></span><br><span class="line">   - `password`: </span><br><span class="line"></span><br><span class="line">   - &#x27;radio&#x27; : 单选 如</span><br><span class="line"></span><br><span class="line">      ```html</span><br><span class="line">     &lt;input type=&quot;radio&quot; name =&quot;gender&quot;/&gt;男 &lt;!-- 不加name 不能识别为一组 无法控制 --&gt;</span><br><span class="line">     &lt;input type=&quot;radio&quot; name =&quot;gender&quot;/&gt;女 &lt;!-- 加上value可提交 否则为on --&gt;</span><br></pre></td></tr></table></figure></span>

  <span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span> =<span class="hljs-string">"gender"</span>/&gt;</span>男
  	<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span> =<span class="hljs-string">"gender"</span>/&gt;</span>女
  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>

- `checkbox` : 复选 参上
- 按钮 :
  - 提交 : `submit`
  - 重置 : `reset`
  - 普通 : `button` 可自定义任何功能
  - 图片 : `img` `src=""` 默认有提交功能
- 文件域 : `file`  要用`post` 要有`enctype=""`  可以是 `multipart /form-data`多部件

</code></pre>
</li>
<li>
<p>下拉 :</p>
</li>
</ol>
   <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span>&gt;</span>A<span class="tag">&lt;/<span class="name">option</span>&gt;</span> <span class="comment">&lt;!-- 有value 传value的值 无value 传中间的值</span></span><br><span class="line"><span class="comment">	&lt;option&gt;B&lt;/option&gt;</span></span><br><span class="line"><span class="comment">	&lt;option&gt;C&lt;/option&gt; &lt;!-- 默认选中 selected=&quot;selected&quot; --&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span>&gt;</span>D<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
   <form>
   <select name="选择">
   	<option>A</option>
   	<option>B</option>
   	<option selected="selected" >C</option>
   	<option>D</option>
   </select>
   </form>
<ol start="6">
<li>
<p>多行文本域</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;10&quot;</span>&gt;</span>写字<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><textarea rows="5" cols="10">写字</textarea></p>
</li>
</ol>
<h2 id="十三-表单高级应用"><a class="markdownIt-Anchor" href="#十三-表单高级应用"></a> 十三 表单高级应用</h2>
<ol>
<li>
<p>隐藏域 不给用户看</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iptut</span> <span class="attr">type</span> =<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>只读和禁用 <code>readnoly=&quot;readonly&quot;</code> 一般用于文本框  <code>disabled=&quot;disabled&quot;</code> 一般用于按钮</p>
</li>
<li>
<p>语义化 没什么用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">legend</span>&gt;</span>用户信息<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">	姓名 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<form>
	<fieldset>
	<legend>用户信息</legend>
	姓名 : <input type="text"/>
	</fieldset>
</form>
</li>
<li>
<ul>
<li>
<p>所有标签可以加 <code>id</code> 和 <code>name</code></p>
<ul>
<li><code>id</code>: 同一个页面不能出现相同的<code>id</code></li>
<li><code>name</code>: 可以重复</li>
</ul>
</li>
<li>
<pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><span class="hljs-comment">&lt;!-- 增强用户体验 符合规范 --&gt;</span><span class="hljs-comment">&lt;!-- 点击名字 光标跳到文本框 --&gt;</span>
	<span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>
	<span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>用户信息<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>
	<span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"uname"</span>&gt;</span>姓名 : <span class="hljs-tag">&lt;/<span class="hljs-name">lable</span>&gt;</span>
	<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"uname"</span>/&gt;</span>
	<span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>
</code></pre>
<form>
	<fieldset>
	<legend>用户信息</legend>
	<label for="uname">姓名 : </lable>
	<input type="text" id="uname"/>
	</fieldset>
</form>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>前端</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL简单学习笔记三之DMl和DQL</title>
    <url>/2019/08/26/MySQL%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B9%8BDMl%E5%92%8CDQL/</url>
    <content><![CDATA[<h1 id="系列链接"><a class="markdownIt-Anchor" href="#系列链接"></a> 系列链接</h1>
<p><a href="https://pengxiandyou.github.io/2019/08/22/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%B8%80/">MySQL简单笔记一</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/23/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%BA%8C%E4%B9%8BDDL/">MySQL简单笔记二之DDL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/26/MySQL%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B9%8BDMl%E5%92%8CDQL/">MySQL简单学习笔记三之DMl和DQL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/27/MySQL%E8%AF%AD%E6%B3%95%E7%9A%84Oracle%E7%BB%83%E4%B9%A0%E8%A1%A8%E5%88%86%E4%BA%AB/">MySQL语法的Oracle练习表分享</a><br/></p>
<center > <font size=10>DML</font></center>
1. 添加数据
   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- insert into 表名(列123...) values(值123..)</span><br><span class="line">INSERT INTO student VALUES(5,&#x27;eee&#x27;,15);</span><br><span class="line">INSERT INTO student(id,NAME,age) VALUES(6,&#x27;fff&#x27;,60);</span><br><span class="line">INSERT INTO student(id,NAME) VALUES(7,&#x27;ggg&#x27;);</span><br><span class="line">INSERT INTO student VALUES(8,&#x27;hhh&#x27;,NULL);</span><br><span class="line">INSERT INTO student VALUES(9,&#x27;iii&#x27;,DEFAULT);</span><br><span class="line">-- 插入 varchar 或 date 型的数据要用 单引号 引起来</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p>修改数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- update 表 set 列1=值1....</span><br><span class="line">-- 无条件则改所有行的该列值</span><br><span class="line">UPDATE student SET age=35;</span><br><span class="line">UPDATE student SET age=35 WHERE id=1;</span><br><span class="line">UPDATE student SET NAME=&#x27;zs&#x27;,age=32 WHERE id=10;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>删除数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- delete from </span><br><span class="line">-- 没有条件删除全表</span><br><span class="line">DELETE FROM student </span><br><span class="line">DELETE FROM student WHERE id=8;</span><br><span class="line">-- truncate table 表 删除全表,先删后建表 DDL 不属于DML</span><br><span class="line">DELETE FROM student WHERE id=9 AND NAME=iii;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr/>
<center > <font size=10>DQL</font></center>
1. 查询
   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- select 列名123.. from 表名</span><br><span class="line">-- *所有列</span><br><span class="line">SELECT * FROM student;</span><br><span class="line">SELECT id ,`name` ,age FROM student; </span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p>条件查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 条件查询 = != &lt;&gt; &lt; &lt;= &gt;= &gt; </span><br><span class="line">-- between...and; in(set); is null; and; or; not; </span><br><span class="line">SELECT * FROM student WHERE age =20 AND gender=&#x27;女&#x27;;</span><br><span class="line">SELECT * FROM student WHERE age IN(20,35,12);</span><br><span class="line">SELECT * FROM student WHERE age NOT IN(20,35,12);</span><br><span class="line">SELECT * FROM student WHERE NOT(age=20 OR age=35 OR age=12 );</span><br><span class="line">SELECT * FROM student WHERE NAME IS NULL ;</span><br><span class="line">SELECT * FROM student WHERE NAME IS NOT NULL ;</span><br><span class="line">SELECT * FROM student WHERE age&gt;=10 AND age&lt;=60;</span><br><span class="line">SELECT * FROM student WHERE age BETWEEN 10 AND 60;</span><br><span class="line">SELECT * FROM student WHERE age NOT BETWEEN 15 AND 60;#我试的时候not在age前后都可以</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>模糊查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- %代表任意( 1,0,多) _表示一个任意</span><br><span class="line">-- 和like一起使用</span><br><span class="line">SELECT * FROM student WHERE NAME LIKE &#x27;a%&#x27;;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>去重</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT NAME FROM student;</span><br><span class="line">SELECT DISTINCT age FROM student;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>组合数据 如和 可能为空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT *,id+age FROM student;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>试用数据的函数 自学 理解为编程语言有返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT *,id+IFNULL(age,0)FROM student;</span><br><span class="line">SELECT CURDATE();#用select输出</span><br><span class="line">SELECT YEAR(CURDATE());</span><br><span class="line">SELECT ADDDATE(CURDATE(),10);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>给列名起别名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT id sid,NAME sname,age sage FROM student;</span><br><span class="line">SELECT id AS sid,NAME AS sname,age AS sage FROM student;</span><br><span class="line">SELECT *,id+age AS &#x27;和&#x27; FROM student;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>排序 默认升序<code>asc</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student ORDER BY age;</span><br><span class="line">SELECT * FROM student ORDER BY age ASC;</span><br><span class="line">SELECT * FROM student ORDER BY age DESC;#降序</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>指定多个参考列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student ORDER BY age ASC,NAME ASC;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>顺序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*顺序</span><br><span class="line">select</span><br><span class="line">from</span><br><span class="line">where -- 筛选</span><br><span class="line">group by</span><br><span class="line">having</span><br><span class="line">order by</span><br><span class="line">limit	-- 排序</span><br><span class="line">*/</span><br><span class="line">SELECT * FROM student WHERE age BETWEEN 10 AND 60 ORDER BY NAME;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>聚合函数 数据统计</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- sum() max() min() avg() count()</span><br><span class="line">SELECT SUM(id) ,AVG(age),MAX(age),MIN(age) FROM student;</span><br><span class="line">SELECT COUNT(*) FROM student ;#写* 列(会统计非空)都可 一般用 * 主键</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>分组查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- group by</span><br><span class="line">SELECT gender,COUNT(*) FROM student GROUP BY gender;</span><br><span class="line">SELECT age,gender,COUNT(*) FROM student GROUP BY age,gender;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>分组再筛选</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- having 统计后再筛选</span><br><span class="line">SELECT  age,gender,COUNT(*) FROM student GROUP BY age,gender HAVING COUNT(*)&gt;=2;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>分页 limit 叶索引 页大小</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student LIMIT 0,2;</span><br><span class="line">SELECT * FROM student LIMIT 1,2;</span><br><span class="line">SELECT * FROM student LIMIT 5;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student AS stu,course AS cou WHERE stu.`course_id`=cou.`id`;</span><br></pre></td></tr></table></figure>
<ol>
<li>
<p>内连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student stu INNER JOIN course cou ON stu.`course_id`=cou.`id`;#inner可以省</span><br><span class="line">SELECT * FROM student stu </span><br><span class="line">INNER JOIN course cou </span><br><span class="line">ON stu.`course_id`=cou.`id` #一般连接条件</span><br><span class="line">WHERE stu.`gender`=&#x27;男&#x27;;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>左外连接  左边全显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student stu </span><br><span class="line">LEFT OUTER JOIN course cou </span><br><span class="line">ON stu.`course_id`=cou.`id`;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>右外连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student stu </span><br><span class="line">RIGHT OUTER JOIN course cou </span><br><span class="line">ON stu.`course_id`=cou.`id`;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>完全外连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student stu </span><br><span class="line">LEFT OUTER JOIN course cou </span><br><span class="line">ON stu.`course_id`=cou.`id`</span><br><span class="line">UNION</span><br><span class="line">SELECT * FROM student stu </span><br><span class="line">RIGHT OUTER JOIN course cou </span><br><span class="line">ON stu.`course_id`=cou.`id`;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>交叉连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student ,course ;</span><br><span class="line">SELECT * FROM student CROSS JOIN course;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>自然连接 内 也可以 加 <code>right</code> <code>left</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM student NATURAL JOIN course;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li>
<p>子查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 功能最强大 </span><br><span class="line">-- 查询嵌套 </span><br><span class="line">/*select (子查询)</span><br><span class="line">from (子查询)</span><br><span class="line">where (子查询)</span><br><span class="line">*/</span><br><span class="line">-- 比eee年龄高的学生</span><br><span class="line">SELECT * FROM student WHERE age&gt;(SELECT age FROM student WHERE NAME=&#x27;eee&#x27;);</span><br><span class="line">-- 比男生最大年龄还大的女士 大于所有</span><br><span class="line">SELECT * FROM student WHERE gender!=&#x27;男&#x27; AND age&gt;ALL(SELECT age FROM student WHERE gender=&#x27;男&#x27;);</span><br><span class="line">--  大于任意 最低</span><br><span class="line">SELECT * FROM student WHERE gender!=&#x27;男&#x27; AND age&gt;ANY(SELECT age FROM student WHERE gender=&#x27;男&#x27;);</span><br><span class="line">-- 和aaa这个女士学同一门课的女士 </span><br><span class="line">SELECT * FROM student </span><br><span class="line">WHERE (gender,course_id) IN (SELECT gender,course_id FROM student WHERE NAME =&#x27;aaa&#x27;) AND NAME!=&#x27;aaa&#x27;;</span><br><span class="line">-- 查询学生和课程</span><br><span class="line">SELECT NAME,course FROM student s,(SELECT * FROM course) c WHERE s.`course_id`=c.id ORDER BY NAME; </span><br><span class="line">-- 相关子查询</span><br><span class="line">SELECT NAME, (SELECT course FROM course c WHERE s.`course_id`=c.id) FROM student s ORDER BY NAME; </span><br></pre></td></tr></table></figure>
</li>
<li>
<p>了解事务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#手动开事务,将若干个语句作为一个原子操作</span><br><span class="line">star transaction;</span><br><span class="line">语句</span><br><span class="line">commit;#提交</span><br><span class="line">rollback;#回滚</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL简单笔记一</title>
    <url>/2019/08/22/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
    <content><![CDATA[<h1 id="系列链接"><a class="markdownIt-Anchor" href="#系列链接"></a> 系列链接</h1>
<p><a href="https://pengxiandyou.github.io/2019/08/22/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%B8%80/">MySQL简单笔记一</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/23/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%BA%8C%E4%B9%8BDDL/">MySQL简单笔记二之DDL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/26/MySQL%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B9%8BDMl%E5%92%8CDQL/">MySQL简单学习笔记三之DMl和DQL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/27/MySQL%E8%AF%AD%E6%B3%95%E7%9A%84Oracle%E7%BB%83%E4%B9%A0%E8%A1%A8%E5%88%86%E4%BA%AB/">MySQL语法的Oracle练习表分享</a><br/></p>
<h1 id="font-colorblue-aligncentermysql-font"><a class="markdownIt-Anchor" href="#font-colorblue-aligncentermysql-font"></a> <font color=blue align=center>mysql: </font></h1>
<h2 id="启动停止-net-startstop-mysql"><a class="markdownIt-Anchor" href="#启动停止-net-startstop-mysql"></a> 启动停止 net start/stop mysql</h2>
<h2 id="登陆-mysql-u用户名-p密码"><a class="markdownIt-Anchor" href="#登陆-mysql-u用户名-p密码"></a> 登陆 mysql -u用户名 -p密码</h2>
<h2 id="退出-quitexit"><a class="markdownIt-Anchor" href="#退出-quitexit"></a> 退出 quit；exit；</h2>
<h2 id="查看所有font-colorgreen数据库font-show-font-colorgreendatabasesfont"><a class="markdownIt-Anchor" href="#查看所有font-colorgreen数据库font-show-font-colorgreendatabasesfont"></a> 查看所有<font color=green>数据库</font> show <font color=green>databases</font>;</h2>
<h2 id="新建数据库-create-database-数据库名"><a class="markdownIt-Anchor" href="#新建数据库-create-database-数据库名"></a> 新建数据库 create database 数据库名；</h2>
<h2 id="test数据库给用户用-font-colorred一般不用font"><a class="markdownIt-Anchor" href="#test数据库给用户用-font-colorred一般不用font"></a> test数据库给用户用 <font color=red>一般不用</font></h2>
<h2 id="进入数据库-ues-数据库名"><a class="markdownIt-Anchor" href="#进入数据库-ues-数据库名"></a> 进入数据库 ues 数据库名</h2>
<h2 id="查看当前数据库的font-colorgren表font-show-font-colorgreentablesfont"><a class="markdownIt-Anchor" href="#查看当前数据库的font-colorgren表font-show-font-colorgreentablesfont"></a> 查看当前数据库的<font color=gren>表</font> show <font color=green>tables</font>;</h2>
<h2 id="查看表的结构-desc-表名"><a class="markdownIt-Anchor" href="#查看表的结构-desc-表名"></a> 查看表的结构 desc 表名；</h2>
<h2 id="查看某张表的数据-select-from-表名"><a class="markdownIt-Anchor" href="#查看某张表的数据-select-from-表名"></a> 查看某张表的数据 select * from 表名；</h2>
<h2 id="sql语句官方建议大写-font-colorred我们一般小写本身不区分大小写font"><a class="markdownIt-Anchor" href="#sql语句官方建议大写-font-colorred我们一般小写本身不区分大小写font"></a> sql语句官方建议大写 <font color=red>我们一般小写,本身不区分大小写</font></h2>
<h2 id="sql语句分类"><a class="markdownIt-Anchor" href="#sql语句分类"></a> SQL语句分类</h2>
<ol>
<li>DDL:数据定义语言 Data Definition Language
<ul>
<li>对象的创建 删除 修改 :建库 建表 修改表 删除表 删库 <font color=red size =5>create drop alter</font></li>
</ul>
</li>
<li>DML:数据操作语言 Data Manipulation Language
<ul>
<li>增删改; 添加数据 删除数据 修改数据 <font color=red size =5>insert update delete</font></li>
</ul>
</li>
<li>DCL:数据控制语言 Data Control Language
<ul>
<li>创建用户 分配账号密码 分配权限 <font color=red size =5>grant revoke</font></li>
</ul>
</li>
<li>DQL:数据查询语言 Data Query Language
<ul>
<li>查询: <font color=red size =5>select</font></li>
</ul>
</li>
<li>DTL:数据事务语言 Data Trasaction Language
<ul>
<li>执行事务操作</li>
</ul>
</li>
</ol>
<h1 id="表"><a class="markdownIt-Anchor" href="#表"></a> 表:</h1>
<ul>
<li>
<p>每列数据类型</p>
<ul>
<li>int：整型 从-2<sup>31到2</sup>31-1的整型数据。存储大小为 4个字节</li>
<li>double：浮点型，例如double（5，2）表示最多5位，其中必须有2位小数，即最大值为999.99；</li>
<li>decimal：泛型型，在表金钱方面使用该类型，因为不会出现精度缺失问题；</li>
<li>char：固定长度字符串类型：char（长度）char（10）：该列最大存储10个字符，我的实际字符5，后面会用空格填满</li>
<li>varchar：可变长度字符串类型；</li>
<li>text：字符串类型；直接使用改类型，不需要规定长度，会多使用一个专门的空间存储长度</li>
<li>blob：字节类型；存放二进制字节编码       图片（小说）要真正存储二进制数据，一般结合高级语言</li>
<li>date：日期类型，格式为：yyyy-MM-dd；</li>
<li>time：时间类型，格式为：hh:mm:ss</li>
<li>timestamp：时间戳类型；yyyy-MM-dd hh:mm:ss</li>
<li>datetime：日期时间yyyy-MM-dd hh:mm:ss   **timestamp和datetime的范围不同 **</li>
</ul>
<p>有复合主键 一般不用 底层 索引 底层 二叉树</p>
</li>
</ul>
<h1 id="唯一键约束"><a class="markdownIt-Anchor" href="#唯一键约束"></a> 唯一键约束：</h1>
<p>该列数据不能重复<br />
唯一键可以为空 MysQL允许多列为空（SQL Server只允许一列为空)<br />
唯一键可以多个<br />
唯一约束的创建：就是创建一个唯一的索引</p>
<h1 id="检查约束"><a class="markdownIt-Anchor" href="#检查约束"></a> 检查约束</h1>
<p>MySQL不支持，（Sqlserver和oracle都支持）</p>
<h1 id="外键约束"><a class="markdownIt-Anchor" href="#外键约束"></a> 外键约束：</h1>
<p>约束表和表之间的关系<br />
外键所在的表就是子表<br />
子表引用数据的表就是主表<br />
字表的外键列引用主表的主键列（或者唯一键）</p>
<h1 id="范式"><a class="markdownIt-Anchor" href="#范式"></a> 范式：</h1>
<p>设计数据库的一个标准，范式的等级越高，冗余越低，<s>一般的项目到瑟三阶范三（传统项目）</s></p>
<p>互联网项目：大数据，冗余大，基本都是单表<br />
将一个表的数据拆成多个表：降低冗余，降低查询效率</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-  一阶范式：表中不能套表所有的数据库系统，都不会违反一阶范式</span><br><span class="line">-  二阶范式：满足一阶范式，非主键列必须依赖于主键。一个表中必须要主键  函数依赖：y=f（x）x--&gt;y 删除异常 更新异常 插入异常</span><br><span class="line">-  三阶范式：满足二阶范式，不存在传递依赖 x--&gt;y y--&gt;z x--&gt;z</span><br></pre></td></tr></table></figure>
<p><font color=red size=10>语句:</font></p>
<ol>
<li>数据库
<ul>
<li>创建 create database 库名;</li>
<li>删除 drop database 库名;</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven、Spring、SpringMVC、MyBatis、SSM整合、SpringBoot</title>
    <url>/2024/01/27/Maven%E3%80%81Spring%E3%80%81SpringMVC%E3%80%81MyBatis%E3%80%81SSM%E6%95%B4%E5%90%88%E3%80%81SpringBoot/</url>
    <content><![CDATA[<h2 id="maven"><a class="markdownIt-Anchor" href="#maven"></a> Maven</h2>
<p>  Maven是一款为Java项目管理构建、依赖管理的工具（软件）使用Maven可以自动化构建、测试、打包和发布项目，大大提高了开发效率和质量。</p>
<p>  <strong>依赖管理：</strong> Maven可以管项自的依赖，包括自动下载所需依赖库、自动载依赖需要的依赖并自保证版本没有冲突依赖版本管理等。通过Maven，我们可以方便地维护项目所依赖的外部库，而我们仅仅需要编写配置即可。</p>
<p>  **构建管理：**Maven可以管理项自的编译、测试、打包、部暑等构建过程。通过实现标准的构建生命周期，Maven可以确保每一个构建过程都遵循同样的规则和最佳实践。同时，Maven的插件机制也使得开发者可以对构建过程进行扩展和定制。主动触发构建，只需要简单的命令操作即可。<img data-src="https://s2.loli.net/2024/01/27/7UM6Awc5bgLVtoh.png" alt="image-20240127022938293" style="zoom:50%;" /></p>
<p>  <strong>原理：</strong><img data-src="https://s2.loli.net/2024/01/27/NTAhgYiP2lvwR3O.png" alt="image-20240127023411742" style="zoom:50%;" /></p>
<p>  <code>mvn -v</code>验证安装是否成功。额外配置JDK版本，不用它的5。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 不用默认的jdk5.0 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-17<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>17<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>17<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>17<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>17<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在build里添加,解决自带site插件报错 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-site-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-project-info-reports-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自带的打包war插件与JDK17不匹配的话，在build里添加 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>**GroupID格式：**com.｛公司/BU｝.业务线.[子业务线]，最多4级。</p>
</li>
<li>
<p>**ArtifactID格式：**产品线名-模块名。语义不重复不遗漏，先到仓库中心去查证一下。</p>
</li>
<li>
<p>**Version版本号格式推荐：**主版本号.次版本号.修订号</p>
<ul>
<li>主版本号：当做了不兼容的API修改，或者增加了能改变产品方向的新功能</li>
<li>次版本号：当做了向下兼容的功能性新增（新增类、接口等）。</li>
<li>修订号：修复bug，没有修改方法签名的功能加强，保持API兼容性</li>
<li>例如：初始→1.0.0修改bug一→1.0.1功能调整→1.1.1等</li>
</ul>
</li>
<li>
<p>**Packaging定义规则：**指示将项目打包为什么类型的文件，idea根据packaging值，识别maven项目类型！</p>
<ul>
<li><code>packaging</code>属性为<code>jar</code>（默认值），代表普通的Java工程，打包以后是jar结尾的文件。</li>
<li><code>packaging</code>属性为<code>war</code>，代表Java的web工程，打包以后.war结尾的文件。</li>
<li><code>packaging</code>属性为<code>pom</code>，代表不会打包，用来做继承的父工程。</li>
</ul>
</li>
</ul>
<p><strong>创建web项目：</strong></p>
<ol>
<li>修改pom文件的<code>packaging</code>属性为<code>war</code>，记得重新加载；</li>
<li>在<code>src</code>文件下创建<code>webapp/WEB-INF/web.xml</code>，不同工具中的<code>webapp</code>不一样，有的叫<code>web</code>、<code>webContent</code>、<code>webRoot</code>；</li>
<li>xml文件不好写，可以用<code>JBLJavaToWeb</code>插件。</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">命令</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>mvn compile</code></td>
<td style="text-align:center">编译项目，生成target文件</td>
</tr>
<tr>
<td style="text-align:center"><code>mvn package</code></td>
<td style="text-align:center">打包项目，生成war文件</td>
</tr>
<tr>
<td style="text-align:center"><code>mvn clean</code></td>
<td style="text-align:center">清理编译或打包后的项目结构</td>
</tr>
<tr>
<td style="text-align:center"><code>mvn install</code></td>
<td style="text-align:center">打包后上传到maven本地仓库（本地部署）</td>
</tr>
<tr>
<td style="text-align:center"><code>mvn deploy</code></td>
<td style="text-align:center">只打包，上传到maven私服仓库（私服部署）</td>
</tr>
<tr>
<td style="text-align:center"><code>mvn site</code></td>
<td style="text-align:center">生成站点（报告），报错的话，pom添加site相关插件（百度）</td>
</tr>
<tr>
<td style="text-align:center"><code>mvn test</code></td>
<td style="text-align:center">执行测试源码（测试）</td>
</tr>
</tbody>
</table>
<p>记不住也没多大事，有工具辅助，在右侧状态栏。</p>
<p>**主要生命周期：**懒人操作，大部分命令会执行之前的命令</p>
<ul>
<li>
<p>清理周期：主要是对项目编译生成文件进行清理</p>
<p>包含命令：<code>clean</code></p>
</li>
<li>
<p>默认周期：定义了真正构件时所需要执行的所有步骤，它是生命周期中最核心的部分</p>
<p>包含命令：<code>compile-test-package-install/deploy</code></p>
</li>
<li>
<p>报告周期</p>
<p>包含命令：site</p>
<p>打包：<code>mvn clean package</code> 本地仓库：<code>mvn clean install</code></p>
</li>
</ul>
<p><strong>依赖管理：</strong></p>
<ul>
<li>
<p>引入 ：放<code>dependencies</code>标签里，写各种依赖。会自动下载依赖以及依赖的依赖。</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="comment">&lt;!-- maven仓库信息官网https://mvnrepository.com，可查，可直接复制 --&gt;</span></span><br><span class="line">    		<span class="comment">&lt;!-- 无法访问，可用使用插件maven search，安装好后在Tools里  --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test测试目录可用/compile任何目录可用/provided除了服务器，都可用。服务器自带，例：servlet /runtime运行时才用，例：mysql<span class="tag">&lt;/<span class="name">scope</span>&gt;</span><span class="comment">&lt;!-- 产生作用的范围 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>版本统一提取和维护</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 声明版本 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--命名随便，内部制定版本号即可！--&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span><span class="comment">&lt;!-- 在上面的引入里的版本处可使用$&#123;junit.version&#125; --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--也可以通过maven规定的固定的key，配需maven的参数！如下配编码格式！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>下载失败解决：❶检查网络；❷清理之前下载失败的仓库缓存</p>
</li>
</ul>
<p><strong>build构建插件：</strong></p>
<ul>
<li>
<p><code>&lt;finalName&gt;打包名&lt;/finalName&gt;</code></p>
</li>
<li>
<p>如果在java文件夹中添加java类，会自动打包编译到classes文件夹下。</p>
<p>但是在java文件夹中添加xml文件，默认不会被打包！</p>
<p>默认情况下，按照maven工程结构放置的文件会默认被编译和打包！</p>
<p>除此之外、我们可以使用<code>resources</code>标签，指定要打包资源的文件夹要把哪些静态资源打包到classes根自录下！</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span> <span class="comment">&lt;!-- 打包目录，只配置，则都打包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">   		<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span><span class="comment">&lt;!-- 包含任意层级的properties结尾的文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>依赖传递和依赖冲突</strong>：</p>
<ul>
<li>假如有Maven项自A，项自B依赖A，项目C依赖B。那么我们可以说C依赖A。也就是说，依赖的关系为：C一&gt;B一 A，那么我们执行项目C时，会自动把B、A都下载导入到C项目的jar包文件夹中，这就是依赖的传递性。</li>
<li>在A依赖B，B依赖C的前提下，C是否能够传递到A，取决于B依赖C时使用的依赖范围
<ul>
<li>B依赖C时使用comile范围：可以传递</li>
<li>B依赖C时使用test或provided范围：不能传递，所以需要这样的jar包时，就必须在需要的地方明确配置依赖才可以</li>
</ul>
</li>
<li>作用：简化依赖导入过程；确保依赖版本正确。</li>
<li>冲突时（高版本兼容低版本）：❶路径最短者优先；❷先声明者优先；❸手动排除<code>&lt;exclusions&gt; &lt;exclusion&gt;&lt;groupId&gt;org.springframeworks/grounId&gt;&lt;artifactId&gt;spring-aop&lt;/artifactId&gt;&lt;/exclusion&gt; &lt;/exclusions&gt;</code>，直接不要了。</li>
</ul>
<p><strong>继承和聚合关系：</strong></p>
<ul>
<li>
<p>Maven继承是指在Maven的项目中，让一个项目从另一个项目中继承配置信息的机制。继承可以让我们在多个项目中共享同一配置信息，简化项目的管理和维护工作。</p>
</li>
<li>
<p>作用：在父工程中统一管理项目中的依赖信息。它的背景是：</p>
<ul>
<li>
<p>对一个比较大型的项目进行了模块拆分。</p>
</li>
<li>
<p>一个project下面，创建了很多个module。</p>
</li>
<li>
<p>每一个module都需要配置自己的依赖信息。</p>
<p>它背后的需求是：</p>
<ul>
<li>
<p>多个模块要使用同一个框架，它们应该是同一个版本，项目中使用的框架版本需要统一管理。</p>
</li>
<li>
<p>使用框架时所需要的jar包组合（或者说依赖信息组合）需要经过长期摸索和反复调试，最终确定一个可用组合。这个耗费很大精力总结出来的方案不应该在新的项目中重新摸索。</p>
<p>通过在父工程中为整个项目维护依赖信息的组合既保证了整个项目使用规范、准确的jar包；又能够将以往的经验沉淀下来，节约时间和精力。</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>父工程不写代码，直接干掉src。</p>
<ul>
<li>
<p>父工程里</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只有父工程的打包方是pom--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 罗列了子模块的内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">module</span>&gt;</span>maven-son-one<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>子工程里</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPsHoT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-son-one<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>继承情况：dependencies默认全部继承，如果要子工程按需继承，在父工程的<code>dependencies</code>标签外套上<code>dependencyManagement</code>，子工程自己写依赖，不需要写<code>version</code>；这种方式：父工程只做定义，不下载；子工程按需继承，按需下载。</p>
</li>
</ul>
</li>
<li>
<p>聚合：</p>
<ul>
<li>背景：各个模块相互依赖的情况下，打包时，要打包和部署父工程以及其他依赖的模块。</li>
<li>概念：Maven聚合是指将多个项目组织到一个父级项目中，工以便一起构建和管理的机制。聚合可以帮助我们更好地管理一组相关的子项目，同时简化它们的构建和部署过程。</li>
<li>作用：
<ul>
<li>管理多个子项目：通过聚合，可以将多个子项目组织在一起，方便管理和维护。</li>
<li>构建和发布一组相关的项目：通过聚合，可以在一个命令中构建和发布多个相关的项目，简化了部署和维护工作。</li>
<li>优化构建顺序：通过聚合可以对多个项目进行顺序控制，避免出现构建依赖混乱导致构建失败的情况。</li>
<li>统一管理依赖项：通过聚合，可以在父项目中管理公共依赖项和插件，避免重复定义。</li>
</ul>
</li>
<li>步骤：在父工程执行打包和部署。</li>
</ul>
</li>
</ul>
<p><strong>仓库之间的关系和优先级：</strong></p>
<p>  Maven仓库主要分为本地仓库（Local Repository）、中央仓库（Central Repository）和远程仓库（Remote Repository）三种类型。</p>
<p>  本地-&gt;私服-&gt;镜像-&gt;中央，任何环节找到了，都会在之前环节保存一份。</p>
<h2 id="spring"><a class="markdownIt-Anchor" href="#spring"></a> Spring</h2>
<h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3>
<h4 id="技术体系"><a class="markdownIt-Anchor" href="#技术体系"></a> 技术体系</h4>
<ul>
<li>
<p>单一架构</p>
  <img data-src="https://s2.loli.net/2024/01/28/VT7StuZspz85Khw.png" alt="image-20240128015722738" style="zoom:50%;" />
</li>
<li>
<p>分布式架构</p>
  <img data-src="https://s2.loli.net/2024/01/28/EkTQCSVMLdl8yXv.png" alt="image-20240128020804551" style="zoom:50%;" />
</li>
</ul>
<h4 id="框架概念和理解"><a class="markdownIt-Anchor" href="#框架概念和理解"></a> 框架概念和理解</h4>
<p>  框架（Framework）是一个集成了基本结构、规范、设计模式、编程语言和程序库等基础组件的软件系统，它可以用来构建更高级别的应用程序。框架的设计和实现旨在解决特定领域中的常见问题，帮助开发人员更高效、更稳定地实现软件开发目标。</p>
<ul>
<li>提高开发效率</li>
<li>降低开发成本</li>
<li>提高应用程序的稳定性</li>
<li>提供标准化的解决方案</li>
</ul>
<p>  站在文件结构的角度理解框架，可以将框架总结：框架=jar包+配置文件</p>
<h3 id="springframework简介"><a class="markdownIt-Anchor" href="#springframework简介"></a> SpringFramework简介</h3>
<h4 id="spring和springframework"><a class="markdownIt-Anchor" href="#spring和springframework"></a> Spring和SpringFramework</h4>
<p>  广义上的Spring泛指以SpringFramewiork为基础的Spring技术栈；狭义的Spring特指SpringFramework，通常我们将它称为Spring框架。</p>
<h4 id="springframework主要功能模块"><a class="markdownIt-Anchor" href="#springframework主要功能模块"></a> SpringFramework主要功能模块</h4>
<table>
<thead>
<tr>
<th style="text-align:center">功能模块</th>
<th style="text-align:center">功能介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Core Container</td>
<td style="text-align:center">核心容器，控制反转和依赖注入</td>
</tr>
<tr>
<td style="text-align:center">AOP&amp;Aspects</td>
<td style="text-align:center">面向切面编程</td>
</tr>
<tr>
<td style="text-align:center">TX</td>
<td style="text-align:center">声明式事务管理</td>
</tr>
<tr>
<td style="text-align:center">Testing</td>
<td style="text-align:center">快速整合测试环境</td>
</tr>
<tr>
<td style="text-align:center">DataAccess/lntegration</td>
<td style="text-align:center">提供了对数据访问/集成的功能</td>
</tr>
<tr>
<td style="text-align:center">SpringMVC</td>
<td style="text-align:center">提供了面向Web应用程序的集成功能。</td>
</tr>
</tbody>
</table>
<img data-src="https://s2.loli.net/2024/01/28/iExVDUOL1fajFZH.png" alt="SpringFramework框架结构图" style="zoom:50%;" />
<h4 id="springframework主要优势"><a class="markdownIt-Anchor" href="#springframework主要优势"></a> SpringFramework主要优势</h4>
<ol>
<li>丰富的生态系统：Spring生态系统非常丰富，支持许多模块和库，如SpringBoot、SpringSecurity、Spring Cloud等等，可以帮助开发人员快速构建高可靠性的企业应用程序。</li>
<li>模块化的设计：框架组件之间的松散耦合和模块化设计使得SpringFramework具有良好的可重用性、可扩展性和可维护性。开发人员可以轻松地选择自已需要的模块，根据自已的需求进行开发。</li>
<li>简化Java开发：SpringFramework简化了Java开发，提供了各种工具和APl，可以降低开发复杂度和学习成本。同时，SpringFramework支持各种应用场景，包括Web应用程序、RESTfulAPl、消息传递、批处理等等。</li>
<li>不断创新和发展：SpringFramework开发团队一直在不断创新和发展，保持与最新技术的接轨，为开发人员提供更加先进和优秀的工具和框架。</li>
</ol>
<h3 id="springloc容器概念"><a class="markdownIt-Anchor" href="#springloc容器概念"></a> Springloc容器概念</h3>
<h4 id="组件和组件管理概念"><a class="markdownIt-Anchor" href="#组件和组件管理概念"></a> 组件和组件管理概念</h4>
<ul>
<li>
<p>什么是组件？</p>
  <img data-src="https://s2.loli.net/2024/01/28/fgSN1pd8ntBTyPq.png" alt="常规的三层架构处理请求流程" style="zoom:50%;" />
  <img data-src="https://s2.loli.net/2024/01/28/GNJ7lTmRYFcdvgK.png" alt="整个项目就是由各种组件搭建而成" style="zoom:50%;" />
</li>
<li>
<p>我们的期待？：替我们创建组件的对象、帮我们保存组件的对象、帮助我们自动组装、替我们管理事务、协助我们整合其他框架……</p>
</li>
<li>
<p>Sprin充当组件管理角色（loC）</p>
<p>组件可以完全交给Spring框架进行管理， Spring框架替代了栏 序员原有的new对象和对象属性赋值动作等。</p>
<p>Spring具体的组件管理动作包合：</p>
<ul>
<li>组件对象实例伴</li>
<li>组件属性属性赋值</li>
<li>组件对象之间引用</li>
<li>组件对象存活周期管理</li>
<li>……</li>
</ul>
</li>
</ul>
<p>  我们只需要编写元数据（配置文件）告知Spring管理娜些类组件和他们的管理即可！</p>
<p>  注意：组件是映射到应用程序中所有可重用组件的aVa对象，应该是可复用的功能对象！</p>
<ul>
<li>组件交给Spring管理优势
<ol>
<li>降低了组件之间的耦合性：Springloc容器通过依赖注入机制，将组件之间的依赖关系削弱，减少了程序组件之间的耦合性，使得组件更加松散地耦合。</li>
<li>提高了代码的可重用性和可维护性：组件的实例化过程、依赖关系的管理等功能交给Spring IoC容器处理，使得组件代码更加模块化、可重用、更易于维护。</li>
<li>方便了配置和管理：Spring IoC容器通过XML文件或者注解，轻松的对组件进行配置和管理，使得组件的切换、替换等操作更加的方便和快捷。</li>
<li>交给Spring管理的对象（组件）方可享受Spring框架的其他功能（AOP声明式事务管理）等</li>
</ol>
</li>
</ul>
<h4 id="spring-ioc容器和容器实现"><a class="markdownIt-Anchor" href="#spring-ioc容器和容器实现"></a> Spring IoC容器和容器实现</h4>
<p>  Springloc容器，负责实例化、配置和组装bean（组件）。容器通过读取配置元数据来获取有关要实例化、配置和组装组件的指令。配置元数据以XML、Java注解或Java代码形式表现。它允许表达组成应用程序的组件以及这些组件之间丰富的相互依赖关系。</p>
<p>  <code>org.springframework.beans</code>和<code>org.springframework.context</code>包是SpringFramework的loC容器的基础包。<code>BeanFactory</code>接口提供了一种高级配置机制，能够管理任何类型的对象，它是SpringIoC容器标准化超接口！<code>ApplicationContext</code>是BeanFactory的子接口。</p>
<p>  <code>ApplicationContext</code>补充：</p>
<ul>
<li>
<p>更容易与Spring的AOP功能集成</p>
</li>
<li>
<p>消息资源处理 星（用于国际化）</p>
</li>
<li>
<p>特定于应用程序给予此接口实现，例如Web应用程序的<code>WebApplicationContext</code></p>
<p>简而言之，<code>BeanFactory</code>提供了配置框架和基本功能，而 <code>ApplicationContext</code> 添加了更多特定于企业的功能。<code>ApplicationContext</code>是<code>BeanFactory</code>白 的完整超集！</p>
</li>
</ul>
<p>  <code>ApplicationContext</code>容器实现类：</p>
<table>
<thead>
<tr>
<th style="text-align:center">类型名</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>ClassPathXmlApplicationContext</code></td>
<td>通过读取类路径下的XML格式的配置文件创建IOC容器对象</td>
</tr>
<tr>
<td style="text-align:center"><code>FileSystemXmlApplicationContext</code></td>
<td>通过文件系统路径读取XML格式的配置文件创建IOC容器对象</td>
</tr>
<tr>
<td style="text-align:center"><code>AnnotationConfigApplicationContext</code></td>
<td>通过读取Java配置类创建IOc容器对象</td>
</tr>
<tr>
<td style="text-align:center"><code>WebApplicationContext</code></td>
<td>专门为Web应用准备，基于Web环境创建IOC容器对象，并将对象引入存入ServletContext域中。</td>
</tr>
</tbody>
</table>
<p>  Spring框架提供了多种配置方式：XML配置方式、注解方式和Java配置类方式：</p>
<ul>
<li>
<p>XML配置方式：是Spring框架最早的配置方式之一，通过在XML文件中定义Bean及其依赖关系、Bean的作用域等信息，让SpringIoC容器来管理Bean之间的依赖关系。该方式从Spring框架的第一版开始提供支持。</p>
</li>
<li>
<p>注解方式从Spring2.5版本开始提供支持，可以通过在Bean类上使用注解来代替XML配置文件中的配置信息。通过在Bean类上加上相应的注解（如@Component，@Service，@Autowired等），将Bean注册到 SpringIoC容器中，这样SpringIoC容器就可以管理这些Bean之间的依赖关系。</p>
</li>
<li>
<p>Java配置类方式：从Spring3.o版本开始提供支持，通过Java类来定义Bean、Bean之间的依赖关系和配置信息，从而代替xML配置文件的方式。Java配置类是一种使用Java编写配置信息的方式，通过@Configuration、@Bean等注解来实现Bean和依赖关系的配置。</p>
<p>配置方式的使用场景不同，为了更多体验每种方式，SSM期间，我门使用XML+注解方式为主。 SpringBoot期间，我们使用配置类+注解方式为主！</p>
</li>
</ul>
<h4 id="spring-iocdi概念总结"><a class="markdownIt-Anchor" href="#spring-iocdi概念总结"></a> Spring IoC/DI概念总结</h4>
<ul>
<li>
<p>loc容器</p>
<p>SpringloC容器，负责实例化、配置和组装bean（组件）。容器通过读取配置元数据来获取有关要实例化、配置和组装组件的指令。</p>
</li>
<li>
<p>IoC（Inversion of Control)控制反转</p>
<p>主要是针对对象的创建和调用控制而言的，也就是说，当应用程序需要使用一个对象时，不再是应用程序直接创建该对象，而是由IoC容器来创建和管理：即控制权由应用程序转移到IoC容器中，也就是“反转”了控制权。这种方式基本上是通过依赖查找的方式实现的，即IoC容器维护着构成应用程序的对象，并负责创建这些对象。</p>
</li>
<li>
<p>DI（Dependency Iniection）依赖注入</p>
<p>DI是指在组件之间传递依赖关系的过程中，将依赖关系在容器内部进行处理，这样就不必在应用程序代码中硬编码对象之间的依赖关系，实现了对象之间的解耦合。在Spring中，DI是通过XML配置文件或注解的方式实现的。它提供了三种形式的依赖注入：构造函数注入、Setter方法注入和接口注入。</p>
</li>
</ul>
<h3 id="spring-iocdi实现"><a class="markdownIt-Anchor" href="#spring-iocdi实现"></a> Spring IoC/DI实现</h3>
<h4 id="实现步骤"><a class="markdownIt-Anchor" href="#实现步骤"></a> 实现步骤</h4>
<ol>
<li>
<p><strong>配置元数据（配置）</strong></p>
<p>配置元数据，既是编写交给SpringloC容器管理组件的信息，配置方式有三种。</p>
<p>基于XML的配置元数据的基本结构：</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xmlversion=<span class="string">&quot;1.0&quot;</span>encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- ！-此处要添加一些约束，配置文件的标签并不是随意命名  --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/xMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> [<span class="attr">1</span>]<span class="attr">class</span>=<span class="string">&quot;...&quot;</span>[<span class="attr">2</span>]&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!--:collaborators and configuration for this bean go here--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- collaborators andconfiguration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line">    &lt;!-more bean definitions go here--&gt; </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>SpringloC容器管理一个或多个组件。这些组件是使用你提供给容器的配置元数据（例如，以XML<code>&lt;bean/&gt;</code>定义的形式，它可用写<code>&lt;bean/&gt;</code>，也可以说写<code>&lt;bean&gt;&lt;bean/&gt;</code>）创建的。</p>
<p><code>&lt;bean/&gt;</code>标签==组件信息声明</p>
<ul>
<li><code>id</code>属性是标识单个Bean定义的字符串。</li>
<li><code>class</code>属性定义Bean的类型并使用完全限定的类名。</li>
</ul>
</li>
<li>
<p><strong>实例化IoC容器</strong></p>
<p>提供给<code>ApplicationContext</code>构造函数的位置路径是资源字符串地址，允许容器从各种外部资源（如本地文件系统、Java <code>CLASSPATH</code>等）加载配置元数据。</p>
<p>我们应该选择个合适的实现类，进行IoC容器的实例化：</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ApplicationContext context=<span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;services.xml&quot;</span>,<span class="string">&quot;daos.xml&quot;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>使用容器，获取Bean(组件）</strong></p>
<p><code>ApplicationContext</code>是一个高级工厂的接口，能够维护不同bean及其依赖项的注册表。通过使用方法<code>T getBean(String name, Class&lt;T&gt; requiredType)</code>，可以检索bean的实例。</p>
<p>允许读取Bean定义并访问它们，如以下示例所示：</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建ioc容器对象，指定配置文件，ioc也开始实例组件对象 </span></span><br><span class="line">ApplicationContext context=<span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;services.xml&quot;</span> <span class="string">&quot;daos.xml&quot;</span>); </span><br><span class="line"><span class="comment">//获取ioc容器的组件对象 </span></span><br><span class="line"><span class="type">PetStoreService</span> <span class="variable">service</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;petstore&quot;</span>,PetStoreService.class);</span><br><span class="line"><span class="comment">//使用组件对象 </span></span><br><span class="line">List&lt;string&gt; userList =service.getUsernameList();</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="基于xml方式管理bean"><a class="markdownIt-Anchor" href="#基于xml方式管理bean"></a> 基于XML方式管理Bean</h4>
<h5 id="声明配置文件-创建容器和获取bean"><a class="markdownIt-Anchor" href="#声明配置文件-创建容器和获取bean"></a> 声明配置文件、创建容器和获取Bean</h5>
<ul>
<li>
<p>思路</p>
  <img data-src="https://s2.loli.net/2024/01/28/TktJxHShfNrZ42C.png" alt="声明配置文件和创建容器思路" style="zoom:50%;" />
</li>
<li>
<p>准备（框架的搭建一般思路 ❶创建Maven工程 ❷引入依赖（jar包） ❸编写配置文件  ❹使用核心类库测试）</p>
<ol>
<li>
<p>创建Maven工程</p>
</li>
<li>
<p>导入Springloc相关依赖</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring context依赖--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--当你引入SpringContext依赖之后，表示将Spring的基础依赖引入了--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--unit5测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>准备组件类（HappyComponent）</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HappyComponent</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HappyComponent</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;进行了构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doWork</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HappyComponent.doWork&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>创建spring01.xml文件</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;HappyComponent01&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.pojo.HappyComponent&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在测试里写</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//1.基springo1.xml配置文件，创建Ioc容器</span></span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring01.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//2.根据id获取Bean对象，需要强转</span></span><br><span class="line">    <span class="comment">//HappyComponent happyComponent01 = (HappyComponent)context.getBean(&quot;HappyComponent01&quot;);</span></span><br><span class="line">    <span class="comment">//2.根据类来获取Bean对象，需要类型唯一，开发常用</span></span><br><span class="line">    <span class="comment">//HappyComponent happyComponent01 = context.getBean(HappyComponent.class);</span></span><br><span class="line">    <span class="comment">//2.两种者结合获取，学习常有</span></span><br><span class="line">    <span class="type">HappyComponent</span> <span class="variable">happyComponent01</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;HappyComponent01&quot;</span>, HappyComponent.class);</span><br><span class="line">    <span class="comment">//3.使用对象</span></span><br><span class="line">    happyComponent01.doWork();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li>
<p>其他说明</p>
<ul>
<li>bean的<code>id</code>不能重复。</li>
<li>我：本质是设置配置文件，然后刷新。</li>
<li>通过反射调用无参构造方法，可通过编写无参构造验证。</li>
<li>通过id获取需要强转。</li>
<li>仅通过类获取对象，需要<code>class</code>唯一。</li>
</ul>
</li>
</ul>
<h5 id="bean属性赋值setter注入"><a class="markdownIt-Anchor" href="#bean属性赋值setter注入"></a> Bean属性赋值：setter注入</h5>
<ol>
<li>
<p>组件添加属性</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HappyComponent</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String componentName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HappyComponent</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;进行了构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doWork</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HappyComponent.doWork&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getComponentName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;componentName取值&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> componentName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setComponentName</span><span class="params">(String componentName)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;componentName赋值:&quot;</span> + componentName);</span><br><span class="line">        <span class="built_in">this</span>.componentName = componentName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>修改xml文件</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;HappyComponent01&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.pojo.HappyComponent&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- set方法赋值，标签为property --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;componentName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开心的组件&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>测试</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;happyComponent01.getComponentName() = &quot;</span> + happyComponent01.getComponentName());</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>说明</p>
<ul>
<li>在<code>property</code>里，如果<code>name</code>为属性名，者<code>value</code>仅能为8大基本类型+8大包装类型+<code>String</code></li>
<li>通过<code>property</code>进行赋值，必须提供<code>set</code>方法</li>
</ul>
</li>
</ol>
<h5 id="bean属性赋值引用其他bean"><a class="markdownIt-Anchor" href="#bean属性赋值引用其他bean"></a> Bean属性赋值：引用其他Bean</h5>
<ol>
<li>
<p>声明新组件（HappyMachine）</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HappyMachine</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String machineName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMachineName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> machineName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMachineName</span><span class="params">(String machineName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.machineName = machineName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>原组件（HappyComponent）引用新组件</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> HappyMachine happyMachine;</span><br><span class="line">	</span><br><span class="line"><span class="keyword">public</span> HappyMachine <span class="title function_">getHappyMachine</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> happyMachine;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHappyMachine</span><span class="params">(HappyMachine happyMachine)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.happyMachine = happyMachine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>注入新组件（HappyMachine），并赋值</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;HappyComponent01&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.pojo.HappyComponent&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- set方法赋值，标签为property --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;componentName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开心的组件&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;happyMachine&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;HappyMachine&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;HappyMachine&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.pojo.HappyMachine&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;machineName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小爱同学&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>测试</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;happyComponent01.getHappyMachine() = &quot;</span> + happyComponent01.getHappyMachine());</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>说明</p>
<ul>
<li><code>ref</code>的值为<code>id</code></li>
<li>声明bean不分先后顺序，Spring容器内部有缓存机制，先实例化后属性赋值</li>
<li><code>ref</code>容易错写成<code>value</code>，会抛出Causedby:java.lang.llegalStateException:Cannot convert value of type<br />
java.lang.Stringtorequiredtype异常</li>
<li>只有声明到ioc容器，方可被其他bean引用</li>
<li>外部bean是共享的</li>
</ul>
</li>
</ol>
<h5 id="bean属性赋值内部bean声明了解"><a class="markdownIt-Anchor" href="#bean属性赋值内部bean声明了解"></a> Bean属性赋值：内部Bean声明（了解）</h5>
<ol>
<li>
<p>声明内部bean配置</p>
<p>在bean里面配置的bean就是内部bean，内部bean只能在当前bean内部使用，在其他地方不能使用。<br />
不会在ioc容器中，实例和存储内部bean，<span style="color:#CC00CC;">只会缓存类信息，每次获取的时候再实例化！！</span></p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;HappyComponent02&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.pojo.HappyComponent&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- set方法赋值，标签为property --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;componentName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开心的组件&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;happyMachine&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.pojo.HappyMachine&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;machineName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小艺&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>说明</p>
<ul>
<li><code>property</code>标签也是有两种写法</li>
</ul>
</li>
</ol>
<h5 id="bean属性赋值集合类型赋值"><a class="markdownIt-Anchor" href="#bean属性赋值集合类型赋值"></a> Bean属性赋值：集合类型赋值</h5>
<ol>
<li>
<p>组件里声明集合</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;String&gt; stringList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;String&gt; <span class="title function_">getStringList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> stringList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStringList</span><span class="params">(List&lt;String&gt; stringList)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.stringList = stringList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>xml文件里赋值</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;HappyComponent02&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.pojo.HappyComponent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;happyMachine&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;HappyMachine&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;componentName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开心的组件&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;stringList&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>手<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>脚<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>身体<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>说明</p>
<ul>
<li>同理，<code>set</code>、<code>map</code>，在<code>property</code>里写相应的标签</li>
<li>除<code>map</code>标签外，里面都是<code>value</code>标签</li>
<li><code>map</code>标签里是<code>entry</code>标签，<code>entry</code>标签里面是<code>key</code>和<code>value</code>，引用类型包含在<code>entry</code>标签里，<code>String</code>类型可直接写在<code>entry</code>标签上</li>
<li><code>entry</code>标签也可以写两种方式</li>
<li>Properties对于xml里的标签是<code>&lt;props&gt;&lt;/props&gt;</code></li>
<li>数组对于xml里的标签是<code>&lt;arpay&gt;&lt;/array&gt;</code></li>
</ul>
</li>
</ol>
<h5 id="bean属性赋值引入外部properties配置参数"><a class="markdownIt-Anchor" href="#bean属性赋值引入外部properties配置参数"></a> Bean属性赋值：引入外部Properties配置参数</h5>
<p>  例子是将Druid（德鲁伊）连接池对象交给Spring的loC容器管理！</p>
<ol>
<li>
<p>添加数据库依赖，放到需要的模块里就可以了</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>一个Druid使用的老方法</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DruidDataSource dataSource=<span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">dataSource.setDriverclassName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">datasource.seturl(<span class="string">&quot;jdbc:mysql://localhost:3306/blog&quot;</span>);</span><br><span class="line">datasource.setusername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">dataSource.setPassword(<span class="string">&quot;atguigu&quot;</span>);</span><br><span class="line"></span><br><span class="line">DruidPooledConnection connection= dataSource.getConnection();</span><br><span class="line">System.out.println(<span class="string">&quot;connection =&quot;</span> + connection);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在xml里配置</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/book&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面的方式还是有点死，接下来改进。</p>
<p>创建Resource Bundle，名字取db.properties。不加前缀的话，会使用电脑当前用户去连接数据库。</p>
 <figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">jdbc.driverclassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/book</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure>
<p>配置xml</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:db.properties&quot;</span>/&gt;</span><span class="comment">&lt;!-- 前面面不用自己全写，根据提示回车，idea会帮助添加约束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverclassName&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring01.xml&quot;</span>);</span><br><span class="line"><span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;dataSource&quot;</span>, DruidDataSource.class);</span><br><span class="line"><span class="type">DruidPooledConnection</span> <span class="variable">connection</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">System.out.println(<span class="string">&quot;connection = &quot;</span> + connection);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="高级特性factorybean特性"><a class="markdownIt-Anchor" href="#高级特性factorybean特性"></a> 高级特性：FactoryBean特性</h5>
<p>  <code>FactoryBean</code>接口是SpringIoC容器实例化逻辑的可插拔性特点。用于配置复杂的Bean对象，可以将创建过程存储在<code>FactoryBean</code>的<code>getObject</code>方法。<code>FactoryBean&lt;T&gt;</code>接口提供三种方法：</p>
<ul>
<li><code>T getObject()</code>：返回此工厂创建的对象的实例。该返回值会被存储到IoC容器</li>
<li><code>boolean isSingleton()</code>：如果此<code>FactoryBean</code>返回单例，则返回true，否则返回false。此方法的默认实现返回true（注意，lombok插件使用，可能影响效果）。</li>
<li><code>Class&lt;?&gt; getObjectType()</code>：返回<code>getObject()</code>方法返回的对象类型，如果事先不知道类型，则返回<code>null</code>。</li>
</ul>
<p>  例如，<code>Connection</code>对象的创建，我们通过<code>class.forName(&quot;com.mysgl.ci.idbc.Driyer&quot;);Connection connection =DriverManager.getConnection(url,user,password);</code>，它和一般的对象创建不一样。</p>
<p>  注意：我们从<code>getConnection</code>点进去，我们可以发现返回值上有括号，例如<code>return (con);</code>我不明白括号有什么用。</p>
<p>  让Spring创建Connection对象：</p>
<ol>
<li>
<p>新建包factory，创建一个类，实现<code>FactoryBean</code>接口</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConnectionFactoryBean</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;Connection&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//最终生产的对象</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Connection <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/book&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生产的对象的类型</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> Connection.class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生产的对象是否为单例</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSingleton</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置xml</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;connection&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.xml.factory.ConnectionFactoryBean&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>测试</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring01.xml&quot;</span>);</span><br><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;connection&quot;</span>, Connection.class);</span><br><span class="line">System.out.println(<span class="string">&quot;connection = &quot;</span> + connection);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>说明</p>
</li>
</ol>
<p>  显然，直觉会让你在实现时用<code>BeanFactory</code>，然而<code>FactoryBean</code>和<code>BeanFactory</code>是有区别的。</p>
<p>  **<code>FactoryBean</code>**是Spring中一种特殊的bean，可以在<code>getObject</code>工厂方法自定义的逻辑创建Bean！是一种能够生产其他Bean的Bean。<code>FactoryBean</code>在容器启动时被创建，而在实际使用时则是通过调用<code>getObject</code>方法来得到某所生产的Bean。因此，FactoryBean可以自定义任何所需的初始化逻辑，生产出一些定制化的bean。</p>
<p>  一般情况下，整合第三方框架，都是通过定义FactoryBean实现！！！</p>
<p>  **<code>BeanFactory</code>**是Spring框架的基础，其作为一个顶级接口定义了容器的基本行为，例如管理bean的生命周期、配置文件的加载和解析、bean的装配和依赖注入等。<code>BeanFactory</code>接口提供了访问bean的方式，例<code>getBean</code>方法获取指定的bean实例。它可以从不同的来源（例如Mysgl数据库、XML文件、Java配置类等）获取bean定义，并将其转换为bean实例。同时，<code>BeanFactory</code>还包含很多子类（例如ApplicationContext接口）提供了额外的强大功能。</p>
<p>  总的来说，<code>FactoryBean</code>和<code>BeanFactory</code>的区别主要在于前者是用于创建bean的接口，它提供了更加灵活的初始化定制功能；而后者是用于管理bean的框架基础接口，提供了基本的容器功能和bean生命周期管理。</p>
<h5 id="高级特性bean的作用域"><a class="markdownIt-Anchor" href="#高级特性bean的作用域"></a> 高级特性：Bean的作用域</h5>
<p>  <code>bean</code>标签声明Bean，只是将Bean的信息配置给SpringIoC容器。在Ioc容器中，这些<code>bean</code>标签对应的Spring内部<code>BeanDefinition</code> 对象，<code>BeanDefinition</code> 对象内，包含定义的信息（id,class,属性等等）！这意味着，<code>BeanDefinition</code>与类概念一样，SpringIoC容器可以可以根据<code>BeanDefinition</code>对象反射创建多个Bean对象实例。具体创建多少个Bean的实例对象，由Bean的作用域scope属性指定。默认情况：全局只需要实例化一个Bean对象，绝大情况我们也仅需创建一个对象！</p>
<table>
<thead>
<tr>
<th style="text-align:center">取值</th>
<th>含义</th>
<th>创建对象的时机</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>singleton</code></td>
<td>在IOC容器中，这个bean的对象始终为单实例</td>
<td>IoC容器初始化时</td>
<td>是</td>
</tr>
<tr>
<td style="text-align:center"><code>prototype</code></td>
<td>这个bean在IoC容器中有多个实例</td>
<td>获取bean时</td>
<td>否</td>
</tr>
<tr>
<td style="text-align:center">如果是在WebApplicationcontext环境下还会有另外两个作用域（但不常用）</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:center"><code>request</code></td>
<td>请求范围内有效的实例</td>
<td>每次请求</td>
<td>否</td>
</tr>
<tr>
<td style="text-align:center"><code>session</code></td>
<td>会话范围内有效的实例</td>
<td>每次会话</td>
<td>否</td>
</tr>
</tbody>
</table>
<h5 id="高级特性bean的生命周期此处比较简略"><a class="markdownIt-Anchor" href="#高级特性bean的生命周期此处比较简略"></a> 高级特性：Bean的生命周期（此处比较简略）</h5>
<p>  SpringFramework的Bean生命周期是指一个Bean对象从它的创建、初始化到销毁的整个过程。初始化方法用<code>init-method</code>属性指定。销毁方法由<code>destroy-method</code>指定。初始化在<code>set</code>方法之后。<code>ApplicationContext</code>不具备关闭能力，<code>ConfigurableApplicationdontext</code>具备关闭能力。实现<code>BeanPostProcessor</code>接口，可以做到在初始化之前和之后执行一些需要的步骤（后置处理器的前置方法、后置处理器的后者置方法），将它放到容器了，对所有bean都将起效果，相当于统一处理和过滤。</p>
<h4 id="基于注解方式管理bean"><a class="markdownIt-Anchor" href="#基于注解方式管理bean"></a> 基于注解方式管理Bean</h4>
<h5 id="bean注解标记和扫描ioc"><a class="markdownIt-Anchor" href="#bean注解标记和扫描ioc"></a> Bean注解标记和扫描（Ioc）</h5>
<p>  和XML配置文件一样，注解本身并不能执行，注解本身仅仅只是做一个标记，具体的功能是框架检测到注解标记的位置，然后针对这个位置按照注解标记的功能来执行具体操作。本质上：所有一切的操作都是Java代码来完成的，XML和注解只是告诉框架中的Java代码如何执行。</p>
<p>  Spring为了知道程序员在哪些地方标记了什么注解，就需要通过扫描的方式，来进行检测。然后根据注解进行后续操作。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.xml.dao.impl.UserDaoImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.xml.service.impl.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span><span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.xml.controller.UserController&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userService&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">UserDaouserDao =ioc.qetBean(<span class="string">&quot;userDao&quot;</span>,UserDao.class);</span><br><span class="line"><span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span>ioc.getBean(<span class="string">&quot;userService&quot;</span>,Userservice.class);</span><br><span class="line"><span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> ioc.qetBean(<span class="string">&quot;userController&quot;</span>,UserController.class);</span><br></pre></td></tr></table></figure>
<p>  以前，在service里调用dao是写死的，当要更换时要修改。现在可以写上<code>set</code>方法，在xml里进行属性配置，将赋值dao交给Spring。当项目庞大时，xml方式就有些捉襟见肘了。</p>
<table>
<thead>
<tr>
<th style="text-align:center">注解</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>@Component</code></td>
<td>该注解用于描述Spring中的Bean，它是一个泛化的概念，仅仅表示容器中的一个组件（Bean），并且可以作用在应用的任何层次，例如Service层、Dao层等。使用时只需将该注解标注在相应类上即可。</td>
</tr>
<tr>
<td style="text-align:center"><code>@Repository</code>仓库</td>
<td>该注解用于将数据访问层（Dao层-&gt;Mapper-&gt;biz）的类标识为Spring中的Bean，其功能与<code>@Component</code>相同</td>
</tr>
<tr>
<td style="text-align:center"><code>@Service</code></td>
<td>该注解通常作用在业务层（Service层）用于将业务层的类标识为Spring中的Bean，其功能与<code>@Component</code>相同。</td>
</tr>
<tr>
<td style="text-align:center"><code>@Controller</code></td>
<td>该注解通常作用在控制层（如SpringMVC的Controller），用于将控制层的类标识为Spring中的Bean，其功能与<code>@Component</code>相同。</td>
</tr>
<tr>
<td style="text-align:center"><code>@Configuration</code></td>
<td>标志为配置类</td>
</tr>
</tbody>
</table>
<p>  现在已经标记了，需要告诉Spring哪里有标记了。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.spring.anno&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;arnotation注解&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller注解&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  使用<code>context:component-scan</code>标记可以在指定的包下扫描，包含子包。以前在xml里配置了id和class，现在怎么getBean呢？名字用类名的首字母小写（也可以对<code>value</code>属性赋值改名，只赋值<code>value安全</code>可忽略属性名。），class用<code>类.class</code>。排除和包含（只扫某某，则需将<code>use-default-filters</code>属性改为<code>false</code>）用子标签，选择合适的<code>type</code>和<code>expression</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ioc.getBean(<span class="string">&quot;userController类名首字母小写&quot;</span>,UserController.class);</span><br></pre></td></tr></table></figure>
<h5 id="bean属性赋值引用类型自动装配di"><a class="markdownIt-Anchor" href="#bean属性赋值引用类型自动装配di"></a> Bean属性赋值：引用类型自动装配（DI）</h5>
<p>  前面已经通过注解将bean放到容器里了，但还需要进行属性赋值。注意参与自动装配的组件（需要装配、被装配） 全部都必须在loc容器中。在成员变量（set方法、构造方法）上自接标记<code>@Autowired</code>注解即可，不需要提供set方法。</p>
<p>  <code>@Autowired</code>先按照类型进行寻找，再找按照名字进行寻找。如果类型一样，可以用<code>@Qualifier</code>指定名字，不过不能单独使用，和<code>@Autowired</code>一起使用。另外<code>@Autowired</code>还有一个属性<code>required=false</code>，表示能装就装。</p>
<p>  假设要装配Dao，但是容器里一个都没有，会报错，<code>至少一个和Autowired(required=true）</code>；当把<code>required=true</code>改为<code>required=false</code>后，报空指针异常。</p>
<p>  <code>@Resource</code>和<code>@Autowired</code>都可以自动注入，但注入方式是相反的，<span style="background:#00CC66;">而且<code>@Resource</code>是JDK的。</span>JDK还有其他的注解，比如一下一些我没记住的。8之后，要使用部分注解还有额外添加依赖。小细节：<code>@Resource</code>在idea不显示小白线</p>
<table>
<thead>
<tr>
<th style="text-align:center">注解</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>@SuppressWarnings</code></td>
<td>抑制编译时产生的警告消息。</td>
</tr>
<tr>
<td style="text-align:center"><code>@SafeVarargs</code></td>
<td>标识一个有安全性警告的可变参数方法。</td>
</tr>
<tr>
<td style="text-align:center"><code>@PostConstruct</code></td>
<td>标识一个方法作为初始化方法。</td>
</tr>
<tr>
<td style="text-align:center"><code>@PreDestroy</code></td>
<td>标识一个方法作为销毁方法。</td>
</tr>
<tr>
<td style="text-align:center"><code>@Resource.AuthenticationType</code></td>
<td>标识注入的资源的身份验证类型。</td>
</tr>
<tr>
<td style="text-align:center"><s><code>@Resource.AuthenticationName</code></s></td>
<td>标识注入的资源的默认名称。</td>
</tr>
<tr>
<td style="text-align:center"><code>@SupportedAnnotationTypes</code></td>
<td>标识注解处理器所处理的注解类型。</td>
</tr>
<tr>
<td style="text-align:center"><code>@SupportedSourceVersion</code></td>
<td>标识注解处理器支持的Java源码版本。</td>
</tr>
<tr>
<td style="text-align:center"><code>@Named</code></td>
<td>标识一个被依赖注入的组件的名称。</td>
</tr>
<tr>
<td style="text-align:center"><code>@Inject</code></td>
<td>标识一个需要被注入的依赖组件。</td>
</tr>
<tr>
<td style="text-align:center"><code>@Singleton</code></td>
<td>标识一个组件的生命周期只有一个唯一的实例。</td>
</tr>
<tr>
<td style="text-align:center"><code>@RolesAllowed</code></td>
<td>标识授权角色。</td>
</tr>
<tr>
<td style="text-align:center"><code>@PermitAll</code></td>
<td>活动无需进行身份验证。</td>
</tr>
<tr>
<td style="text-align:center"><code>@DenyAll</code></td>
<td>标识不提供针对该方法的访问控制。</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td></td>
</tr>
</tbody>
</table>
<h5 id="bean属性赋值基本类型属性赋值di"><a class="markdownIt-Anchor" href="#bean属性赋值基本类型属性赋值di"></a> Bean属性赋值：基本类型属性赋值(DI）</h5>
<p>  <code>@Value</code>通常用于注入外部化属性，因为容器一启动，就已经有值了，且不能改变。先简单写一个properties文件和配置类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigProperties</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;config.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;config.age:100&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  在xml里引入properties文件。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:config.properties&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>  <code>@Value(&quot;$&#123;config.age:100&#125;&quot;)</code>如果没有写<code>:100</code>，当找不到时，就会使用100作为默认值。</p>
<h4 id="基于配置类方式管理bean"><a class="markdownIt-Anchor" href="#基于配置类方式管理bean"></a> 基于配置类方式管理Bean</h4>
<p>  Spring完全注解配置（FullyAnnotation-basedConfiguration）是指通过Java配置类代码来配置Spring应用程序使用注解采替代原本在XML配置件中的配置。相对于XML配置，完全注解配置具有更强的类型安全性和更好的可读性。</p>
<p>  创建配置类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span><span class="comment">//表明配置，加入容器</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.atguigu.spring.allanno&quot;)</span><span class="comment">//扫描的包</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:config.properties&quot;)</span><span class="comment">//导入的外部资源</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  说明：<code>@ComponentScan</code>和<code>@PropertySource</code>都有带<code>s</code>的，可以写多个<code>ComponentScan</code>和<code>PropertySource</code>。其中<code>@ComponentScan</code>接收数组，内部的<code>basePackages</code>有别名<code>value</code>。在上面的代码块中，只写了一个包，所以省略了许多。</p>
<p>  扫描和外部资源已经可以实现了，现在实现配置bean，例子：将Druid连接池对象存储到IoC容器。（使用<code>@Bean</code>注解）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.atguigu.spring.allanno&quot;)</span></span><br><span class="line"><span class="meta">@PropertySource(&#123;&quot;classpath:config.properties&quot;,&quot;classpath:db.properties&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Value(&quot;$&#123;jdbc.driverclassName&#125;&quot;)</span></span><br><span class="line"><span class="comment">//    private String driverClassName;</span></span><br><span class="line"><span class="comment">//    @Value(&quot;$&#123;jdbc.url&#125;&quot;)</span></span><br><span class="line"><span class="comment">//    private String url;</span></span><br><span class="line"><span class="comment">//    @Value(&quot;$&#123;jdbc.username&#125;&quot;)</span></span><br><span class="line"><span class="comment">//    private String userName;</span></span><br><span class="line"><span class="comment">//    @Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class="line"><span class="comment">//    private String password;</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Scope(scopeName = ConfigurableBeanFactory.SCOPE_PROTOTYPE)</span></span><br><span class="line">    <span class="keyword">public</span> DruidDataSource <span class="title function_">dataSource</span><span class="params">(<span class="meta">@Value(&quot;$&#123;jdbc.driverclassName&#125;&quot;)</span>String driverClassName,</span></span><br><span class="line"><span class="params">                                      <span class="meta">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span>String url,</span></span><br><span class="line"><span class="params">                                      <span class="meta">@Value(&quot;$&#123;jdbc.username&#125;&quot;)</span>String userName,</span></span><br><span class="line"><span class="params">                                      <span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span>String password)</span>&#123;</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        dataSource.setDriverClassName(driverClassName);</span><br><span class="line">        dataSource.setUrl(url);</span><br><span class="line">        dataSource.setUsername(userName);</span><br><span class="line">        dataSource.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(SpringConfig.class);</span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;dataSource&quot;</span>, DataSource.class);</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    System.out.println(<span class="string">&quot;connection = &quot;</span> + connection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  说明：<code>@Bean</code>返回值类型即为class，方法名即为id。如果不满意id，可以自己取，可以取多个。如果不喜欢属性变量被其它使用，可将其写在方法参数列表里，就像SpringMVC那样。bean的属性有scope，可以用注解<code>@Scope(scopeName = ConfigurableBeanFactory.SCOPE_PROTOTYPE)</code>表示，可见有些值Spring提供了，不用写魔法值。初始化和销毁方法可以在<code>@Bean</code>注解里指示属性<code>initMethod</code>和<code>destroyMethod</code>。</p>
<p>  之前用xml时，配置bean时可以引用其他bean。配置类怎么实现呢？</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> HappyMachine <span class="title function_">happyMachine</span><span class="params">()</span>&#123;</span><br><span class="line">	HappyMachine happyMachine=<span class="keyword">new</span> <span class="title class_">HappyMachine</span>();</span><br><span class="line">	happyMachine.setMachineName(<span class="string">&quot;小爱同学&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> happyMachine;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> HappyComponent <span class="title function_">happyComponent</span><span class="params">(HappyMachine happyMachine)</span>&#123;</span><br><span class="line">    HappyComponent happyComponent= <span class="keyword">new</span> <span class="title class_">HappyComponent</span>();</span><br><span class="line">	happyComponent.setHappyMachine(happyMachine);</span><br><span class="line">	<span class="keyword">return</span> happyComponent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>  以后配置类肯定不止一个。在总的配置类里添加<code>@Import（class）</code>，在低版本（4），被导入类必须添加<code>@Configuration</code>注解；高版本可省略，相当于自动添加<code>@Configuration</code>。</p>
<p>  有时不是所有的bean要立马注入。<code>@Conditional</code>是Spring4新提供的注解， 能够根据一定的条件进行判断，满足条件就给容器注入bean。可以放到类和方法上。传入一个实现了<code>Condition</code>接口的类。这个接口是一个断言接口<code>boolean matches(Condition Contextcontext,AnnotatedTypeMetadata metadata);</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConditional</span> <span class="keyword">implements</span> <span class="title class_">Condition</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">matches</span><span class="params">(ConditionContext context, AnnotatedTypeMetadata metadata)</span> &#123;</span><br><span class="line">        <span class="comment">//获取ioc使用的beanFactory</span></span><br><span class="line">        <span class="type">ConfigurableListableBeanFactory</span> <span class="variable">beanFactory</span> <span class="operator">=</span> context.getBeanFactory();</span><br><span class="line">        <span class="comment">//获取类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> context.getClassLoader();</span><br><span class="line">        <span class="comment">//获取bean定义的注册类</span></span><br><span class="line">        <span class="type">BeanDefinitionRegistry</span> <span class="variable">registry</span> <span class="operator">=</span> context.getRegistry();</span><br><span class="line">        <span class="comment">//获取当前环境信息</span></span><br><span class="line">        <span class="type">Environment</span> <span class="variable">environment</span> <span class="operator">=</span> context.getEnvironment();</span><br><span class="line">        <span class="type">String</span> <span class="variable">osName</span> <span class="operator">=</span> environment.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> osName.contains(<span class="string">&quot;Windows&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="三种方式的配置总结"><a class="markdownIt-Anchor" href="#三种方式的配置总结"></a> 三种方式的配置总结</h4>
<p>  <strong>XML方式：</strong></p>
<ul>
<li>所有内容写到xml格式配置文件中</li>
<li>声明bean通过bean标签</li>
<li>&lt;bean标签包含基本信息（id,class）和属性信息property name value/ref</li>
<li>引入外部的properties文件可以通过context:property-placeholder</li>
<li>loC具体容器实现选择ClassPathXmlApplicationContext对象</li>
</ul>
<p>  <strong>XML+注解方式：</strong></p>
<ul>
<li>注解负责标记loc的类和进行属性装配</li>
<li>xml文件依然需要，需要通过&lt;context:com nponent-scan标签指定注解范围</li>
<li>标记loC注解：@Component @Service @Controller @Repository</li>
<li>标记Dl注解：@Autowired @Qualifier @Resource @Value</li>
<li>loc具体容器实现选择ClassPathXmlApplicationContext对象</li>
</ul>
<p>  <strong>完全注解方式：</strong></p>
<ul>
<li>完全注解方式指的是去掉xml文件，使用配置类+注解实现</li>
<li>xml文件替换成使用@Configuration注解标记的类</li>
<li>标记loC注解：@Component @Service @Controller @Repository</li>
<li>标记Di注解：@Autowired @Qualifier @Resource @Value</li>
<li>&lt;context:component-scan标签指定注解范围使用@ComponentScan(basePackages = {“com.atguigu.components”})替代</li>
<li>&lt;context:property-placeholder引入外部配置文件使用@PropertySource({“classpath:application.properties”,“classpath:jdbc.properties”})替代</li>
</ul>
<h4 id="轻松测试配置"><a class="markdownIt-Anchor" href="#轻松测试配置"></a> 轻松测试配置</h4>
<p>  好处：不需要自己创建IOC容器对象了；任何需要的bean都可以在测试类中直接享受自动装配。</p>
<p>  导入依赖：junit-jupiter-api和spring-test</p>
<p>  使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringJUnitConfig(locations=&#123;&quot;classpath:spring-context.xml&quot;&#125;)</span> <span class="comment">//指定配置文件xml</span></span><br><span class="line"><span class="meta">@SpringJUnitConfig(value=&#123;BeanConfig.class&#125;)</span> <span class="comment">//指定配置类</span></span><br></pre></td></tr></table></figure>
<h3 id="spring-aop面向切面编程"><a class="markdownIt-Anchor" href="#spring-aop面向切面编程"></a> Spring AOP面向切面编程</h3>
<ul>
<li>OOP：Object Orinted Programming：面向对象编程，封装、继承、多态
<ul>
<li>继承强调的是纵向的扩展</li>
</ul>
</li>
<li>Aspect Orinted Programming：面向切面编程
<ul>
<li>对OOP作了一种补充</li>
<li>横切强调的是横向的扩展</li>
<li>代理设计模式</li>
</ul>
</li>
</ul>
<p>  比如，大量的方法要用类似的日志，可以使用代理模式（静态代理、动态代理）。</p>
<p>  动态代理技术分类：JDK动态代理、cglib。</p>
<ul>
<li>
<p>JDK动态代理：JDK原生的实现方式，需要被代理的目标类<strong>必须实现接口</strong>，他会根据目标类的接口动态生成一个代理对象！代理对象和目标对象有相同的接口！（拜把子）</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyFactory</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> T target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ProxyFactory</span><span class="params">(T target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getProxy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//参数目标类的类加载器 目标类实现的所有接口！代理对象要执行的代码过程</span></span><br><span class="line">        <span class="type">T</span> <span class="variable">proxy</span> <span class="operator">=</span> (T)Proxy.newProxyInstance(target.getClass().getClassLoader(),</span><br><span class="line">                target.getClass().getInterfaces(),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">MyInvocationHandler</span>());</span><br><span class="line">        <span class="keyword">return</span> proxy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span>  <span class="title class_">MyInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">        <span class="comment">//Method目标对象的方法 args目标方法的参数</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">            System.out.println(method.getName() + <span class="string">&quot;方法执行了，入参是&quot;</span> + Arrays.toString(args));</span><br><span class="line">            <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> method.invoke(target, args);</span><br><span class="line">            System.out.println(method.getName() + <span class="string">&quot;方法执行结束了，出参是&quot;</span> + result);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用方式是首先你有一个接口，有一个这个接口的实现类，将这个类的对象传入代理工厂，通过工厂获取代理对象，代理对象执行自己要执行的方法就行。</p>
</li>
<li>
<p>cglib：通过继承被代理的目标类实现代理，所以不需要自标类实现接口！ （认干爹）</p>
</li>
</ul>
<p>  通过上面的例子，发现代理需要自己编写代理工厂。</p>
<p>  AOP思想主要的应用场景：日志记录、事务处理、安全控制、性能监控、异常处理、缓存控制、动态代理。</p>
<p>  SpringAOP框架，基于AOP编程思维，封装动态代理技术，简化动态代理技术实现的框架。</p>
<img data-src="https://s2.loli.net/2024/02/12/B9VpyvojSPCKz6W.png" alt="Spring基于注解的AOP" style="zoom:50%;" />
<p>注解层：AspectJ：早期的AOP实现的框架，SpringAOP借用了AspectJ中的AOP注解。导入spring-aspects。</p>
<p>实现层：spring-aop：不用直接导，在context 里自带。</p>
<p>  在前面，有一个接口和一个实现该接口的类。以简单日志切入为例子。新建一个切面类，<span style="color:#CC0000;">必须以<code>Aspect</code>结尾，并使用<code>@Aspect</code>注解。</span>当让要使spring管理，要加到容器里，所以需要<code>@Component</code>。要切入，则需要知道切入点。对于一个方法，显然有方法执行前、方法执行后、方法正确执行、方法异常执行，对应的注解是 <code>@Before</code>、<code>@After</code>、<code>@AfterReturning</code>、<code>@AfterThrowing</code>（所在的方法可叫做通知Advice，前置、后置等等），对应的主要参数是切入点表达式<code>execution(public void com.atguigu.aop.AImpl.*())</code>，包含了切入方法的权限修饰符、方法返回值类型，包路径+类名+方法名+参数，有一种声明方法的感觉。在正确执行后，可以通过<code>returning</code>属性指定返回值名，并在切入点方法里声明同样名字的参数。在异常执行时，可以通过<code>throwing</code>属性指定异常变量名，并在方法里声明同样名字的参数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspect</span> &#123;</span><br><span class="line">    <span class="comment">//切入点表达式：方法修饰符 返回值类型 包名路径和类名.方法名(参数)</span></span><br><span class="line">    <span class="meta">@Before(&quot;execution(public void com.atguigu.aop.AImpl.*())&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeAdvice</span><span class="params">(JoinPoint joinPoint)</span>&#123;</span><br><span class="line">        <span class="comment">//joinPoint代表的就是切入的方法。</span></span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getArgs() = &quot;</span> + Arrays.toString(joinPoint.getArgs()));</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getKind() = &quot;</span> + joinPoint.getKind());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getSignature() = &quot;</span> + joinPoint.getSignature());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getSignature().getDeclaringType() = &quot;</span> + joinPoint.getSignature().getDeclaringType());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getSignature().getDeclaringTypeName() = &quot;</span> + joinPoint.getSignature().getDeclaringTypeName());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getSignature().getModifiers() = &quot;</span> + joinPoint.getSignature().getModifiers());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getSignature().getName() = &quot;</span> + joinPoint.getSignature().getName());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getSourceLocation() = &quot;</span> + joinPoint.getSourceLocation());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getStaticPart() = &quot;</span> + joinPoint.getStaticPart());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getTarget() = &quot;</span> + joinPoint.getTarget());</span><br><span class="line">        System.out.println(<span class="string">&quot;joinPoint.getThis() = &quot;</span> + joinPoint.getThis());</span><br><span class="line">        System.out.println(<span class="string">&quot;前置通知执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@After(&quot;execution(public void com.atguigu.aop.AImpl.*())&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterAdvice</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;后置通知执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法正确执行后，正确返回结果，执行该通知。在后置之前。</span></span><br><span class="line">    <span class="comment">//不管有没有异常，前置和后置都会执行。</span></span><br><span class="line">    <span class="comment">//出现异常，AfterReturning不执行</span></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;execution(public void com.atguigu.aop.AImpl.*())&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturning</span><span class="params">(JoinPoint joinPoint,Object result)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;result = &quot;</span> + result);</span><br><span class="line">        System.out.println(<span class="string">&quot;正确执行通知执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//在后置之前，异常发生时</span></span><br><span class="line">    <span class="meta">@AfterThrowing(value = &quot;execution(public void com.atguigu.aop.AImpl.*())&quot;,throwing = &quot;exception&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowing</span><span class="params">(Exception exception)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;exception.getMessage() = &quot;</span> + exception.getMessage());</span><br><span class="line">        System.out.println(<span class="string">&quot;异常通知执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  <code>@Before</code>在方法执行前、<code>@After</code>方法执行结束后、<code>@AfterReturning</code>方法正确执行拿到返回值，在结束前、<code>@AfterThrowing</code>方法异常时，且在在结束前。</p>
<p><strong>说明：</strong></p>
<ul>
<li>
<p>切入点表达式里，权限修饰符和返回值类型可以用<span style="color:#FF0000;">一个</span><code>*</code>表示，也可<span style="color:#FF0000;">单独返回值</span>类型用<code>*</code>表示</p>
</li>
<li>
<p>包路径可固定写，也可将某一层用<code>*</code>表示，也可以用<code>com..</code>表示com下所有层，也可用<code>*..</code>表示所有层</p>
</li>
<li>
<p>类名可用<code>*</code>表示，类名的部分也可用<code>*</code>表示，<code>*..*</code>表示任意包任意类</p>
</li>
<li>
<p>方法名也用类名的规则</p>
</li>
<li>
<p>参数没有用空括号表示，参数是有序的，任意参数用<code>(..)</code>表示，也可组合部分任意</p>
</li>
<li>
<p>切入点表达式重用，写一个空方法，在上面用<code>@Pointcut</code>注解，将切入点表达式作为属性，其他地方调用就是直接将原先的表达式换做方法名+括号。支持跨类调用，例：<code>@Before(&quot;包.类.方法名&quot;)</code>，因此可单独写一个类来写切入点表达式。</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(*  *..AImpl.*())&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointCut</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@After(&quot;pointCut()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterAdvice</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>  <code>JoinPoint</code>接口可以获取方法签名、传入的实参等信息，使用时，需要在切入方法参数里声明。</p>
<p>  还有一个通知，包括了前4种的功能，对应try…catch…finally结构。<code>@Around</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Around(&quot;execution(*  *..AImpl.*())&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">aroundAdvice</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;前置通知执行了&quot;</span>);</span><br><span class="line">        <span class="comment">//执行目标方法</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;正确执行通知执行&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;异常通知执行&quot;</span>);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;后置通知执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>  当有多个切面时（字母顺序），通过<code>@Order</code>注解调整优先级，默认为最大值，越小优先级越大。</p>
<p>  简单了解一下用xml实现aop。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    创建目标类对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.aop.AImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    创建切面类对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;logAspect&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.aop.anno.LogAspect&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    aop配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        共用切入点表达式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pc&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* *..AImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;logAspect&quot;</span> <span class="attr">order</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;beforeAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pc&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;afterAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pc&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;afterReturning&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pc&quot;</span> <span class="attr">returning</span>=<span class="string">&quot;result&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;afterThrowing&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pc&quot;</span> <span class="attr">throwing</span>=<span class="string">&quot;exception&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;aroundAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pc&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="spring声明式事务"><a class="markdownIt-Anchor" href="#spring声明式事务"></a> Spring声明式事务</h3>
<ul>
<li>概念：是一个原子操作，是一个最小的执行单元。</li>
<li>四大特性：
<ul>
<li>A：原子性：表示事务是一个整体，要么都成功，要么都失败</li>
<li>C：一致性：数据要么是事务成功之后的状态，要么是回滚到之前的状态</li>
<li>I：隔离性：多个事务并行时，事务之间互不干扰。A事务只能读取A事务修改之前或修改之后的数据。同<br />
时，B事务所做的操作对A不产生影响</li>
<li>D：持久性：事务提交了，对数据库的数据产生的影响是永久性的</li>
</ul>
</li>
<li>MySQL的四大隔离级别：
<ul>
<li>读未提交：A事务可以读取到B事务已修改但未提交的数据。</li>
<li>读已提交：A事务可以读取到B事务已修改且已提交的数据。未提交的，读取不到。</li>
<li>可重复读（<span style="color:#FF007F;">MySQL的默认隔离级别</span>）：A事务只能读取A事务开始之后的数据，不会被其他事务所影响。</li>
<li>串行化：A事务操作时，其他事务均不可操作。加锁：表锁、行锁、列锁。</li>
</ul>
</li>
<li>JDBC中如何操作事务
<ol>
<li>关闭当前连接的自动提交：<code>connection.setAutocommit（false）</code></li>
<li>提交事务：<code>connection.commit()</code></li>
<li>回滚事务：<code>connection.rollback(）</code></li>
</ol>
</li>
<li>Spring认为事务是一种非核心功能。站在核心功能的角度，事务就属于非核心功能</li>
<li>Spring支持两种事务
<ul>
<li>编程式事务：事务的代码和业务的核心代码，写在一起，事务靠编码实现（耦合度高、代码分散、冗余，不利于维护）</li>
<li>声明式事务：完全利用AOP的思想，前置、返回、异常通知（解决了编程式事务的问题，仅需要一个注解，剩余的工作内容全权交由Spring处理）</li>
</ul>
</li>
</ul>
<h4 id="jdbctemplate使用"><a class="markdownIt-Anchor" href="#jdbctemplate使用"></a> JDBCTemplate使用</h4>
<p>  Spring封装了很多「Template」形式的模板类。例如：RedisTemplate，RestTemplate等等。</p>
<h5 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h5>
<p>  在之前的基础(spring-context、junit-jupiter-api、spring-test)上添加一下依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  创建数据库。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE IF EXISTS `students`;</span><br><span class="line">CREATE TABLE `students` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(50) NOT NULL,</span><br><span class="line">  `gender` varchar(10) NOT NULL,</span><br><span class="line">  `age` int(11) DEFAULT NULL,</span><br><span class="line">  `classes` varchar(50) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of students</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;1&#x27;, &#x27;张三&#x27;, &#x27;男&#x27;, &#x27;20&#x27;, &#x27;高中一班&#x27;);</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;2&#x27;, &#x27;李四&#x27;, &#x27;男&#x27;, &#x27;19&#x27;, &#x27;高中二班&#x27;);</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;3&#x27;, &#x27;王五&#x27;, &#x27;女&#x27;, &#x27;18&#x27;, &#x27;高中一班&#x27;);</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;4&#x27;, &#x27;赵六&#x27;, &#x27;女&#x27;, &#x27;20&#x27;, &#x27;高中三班&#x27;);</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;5&#x27;, &#x27;刘七&#x27;, &#x27;男&#x27;, &#x27;19&#x27;, &#x27;高中二班&#x27;);</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;6&#x27;, &#x27;陈八&#x27;, &#x27;女&#x27;, &#x27;18&#x27;, &#x27;高中一班&#x27;);</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;7&#x27;, &#x27;杨九&#x27;, &#x27;男&#x27;, &#x27;20&#x27;, &#x27;高中三班&#x27;);</span><br><span class="line">INSERT INTO `students` VALUES (&#x27;8&#x27;, &#x27;吴十&#x27;, &#x27;男&#x27;, &#x27;19&#x27;, &#x27;高中二班&#x27;);</span><br></pre></td></tr></table></figure>
<p>  创建学生类、jdbc配置文件、spring配置文件。</p>
<h5 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h5>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringJUnitConfig(locations = &quot;classpath:spring.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcTest</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//        String sql = &quot;insert into students (name,gender,age,classes) values(?,?,?,?)&quot;;</span></span><br><span class="line"><span class="comment">//        Object[] args = &#123;&quot;萧十一&quot;,&quot;男&quot;,&quot;55&quot;,&quot;幼儿园大班&quot;&#125;;</span></span><br><span class="line"><span class="comment">//        int update = jdbcTemplate.update(sql, args);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;update = &quot; + update);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        String sql = &quot;update students set age = ? where id = ?&quot;;</span></span><br><span class="line"><span class="comment">//        int update = jdbcTemplate.update(sql, 40,2);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;update = &quot; + update);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        String sql = &quot;select count(*) from students&quot;;</span></span><br><span class="line"><span class="comment">//        Integer count = jdbcTemplate.queryForObject(sql, Integer.class);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;count = &quot; + count);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        String sql = &quot;select id,name,gender,age,classes from students where id=?&quot;;</span></span><br><span class="line"><span class="comment">//        RowMapper&lt;Student&gt; rowMapper = new BeanPropertyRowMapper&lt;&gt;(Student.class);</span></span><br><span class="line"><span class="comment">//        Student student = jdbcTemplate.queryForObject(sql, rowMapper, 1);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;student = &quot; + student);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,name,gender,age,classes from students where age&gt;?&quot;</span>;</span><br><span class="line">        RowMapper&lt;Student&gt; rowMapper = <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;&gt;(Student.class);</span><br><span class="line">        List&lt;Student&gt; studentList = jdbcTemplate.query(sql, rowMapper, <span class="number">10</span>);</span><br><span class="line">        studentList.forEach(s-&gt; System.out.println(s));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="声明式事务"><a class="markdownIt-Anchor" href="#声明式事务"></a> 声明式事务</h4>
<ul>
<li>
<p>Spring声明式事务对应依赖（只导spring-jdbc即可，它包含了spring-tx。spring-orm没学到）</p>
<ul>
<li>spring-tx：包含声明式事务实现的基本规范（事务管理器规范接口和事务增强等等）</li>
<li>spring-jdbc：包含DataSource方式事务管理器实现类DataSourceTransactionManage</li>
<li>spring-orm：包含其他持久层框架的事务管理器实现类例如：Hibernate/Jpa等</li>
</ul>
</li>
<li>
<p>Spring声明式事务对应事务管理器接口</p>
  <img data-src="https://s2.loli.net/2024/02/19/pXPDKi2FjLfnbIW.png" alt="Spring声明式事务对应事务管理器接口" style="zoom: 67%;" />
</li>
<li>
<p>DataSourceTransactionManage主要方法</p>
<ul>
<li><code>doBegin()</code>：开启事务</li>
<li><code>doSuspend()</code>：挂起事务</li>
<li><code>doResume()</code>：恢复挂起的事务</li>
<li><code>doCommit()</code>：提交事务</li>
<li><code>doRollback()</code>：回滚事务</li>
</ul>
</li>
</ul>
<h4 id="xml配置声明式事务"><a class="markdownIt-Anchor" href="#xml配置声明式事务"></a> xml配置声明式事务</h4>
<p>  xml配置里前面几乎和之前的一样，主要是后几个。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.jdbc.tx&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverclassName&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    事务管理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    开启事务的注解支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDao</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateNameByID</span><span class="params">(String name ,Integer id)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update students set name = ? where id = ?&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> jdbcTemplate.update(sql, name, id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateAgeById</span><span class="params">(Integer age ,Integer id)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update students set age = ? where id = ?&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> jdbcTemplate.update(sql, age, id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*****************************************/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentServices</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentDao studentDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">changeInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        studentDao.updateNameByID(<span class="string">&quot;大一&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;---------&quot;</span>);</span><br><span class="line"><span class="comment">//        int i = 1/0;</span></span><br><span class="line">        studentDao.updateAgeById(<span class="number">180</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="meta">@SpringJUnitConfig(locations = &quot;classpath:spring.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TxTest</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentServices studentServices;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        studentServices.changeInfo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>如果注入的事务管理器id叫transactionManager，那么 <code>tx:annotation-driven</code> 就不用写<code>transaction-manager=&quot;transactionManager&quot;</code>，因为它是默认值</li>
</ul>
<h4 id="配置类配置声明式事务"><a class="markdownIt-Anchor" href="#配置类配置声明式事务"></a> 配置类配置声明式事务</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;com.atguigu.jdbc.tx&quot;&#125;)</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:jdbc.properties&quot;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DruidDataSource <span class="title function_">dataSource</span><span class="params">(<span class="meta">@Value(&quot;$&#123;jdbc.driverClassName&#125;&quot;)</span> String driverClassName,</span></span><br><span class="line"><span class="params">                                      <span class="meta">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span> String url,</span></span><br><span class="line"><span class="params">                                      <span class="meta">@Value(&quot;$&#123;jdbc.username&#125;&quot;)</span> String username,</span></span><br><span class="line"><span class="params">                                      <span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span> String password)</span>&#123;</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        dataSource.setDriverClassName(driverClassName);</span><br><span class="line">        dataSource.setUrl(url);</span><br><span class="line">        dataSource.setUsername(username);</span><br><span class="line">        dataSource.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JdbcTemplate <span class="title function_">jdbcTemplate</span><span class="params">(DataSource dataSource)</span>&#123;</span><br><span class="line">        <span class="type">JdbcTemplate</span> <span class="variable">jdbcTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>(dataSource);</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSourceTransactionManager <span class="title function_">transactionManager</span><span class="params">(DataSource dataSource)</span>&#123;</span><br><span class="line">        <span class="type">DataSourceTransactionManager</span> <span class="variable">dataSourceTransactionManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceTransactionManager</span>(dataSource);</span><br><span class="line">        <span class="keyword">return</span> dataSourceTransactionManager;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>@EnableTransactionManagement</code>注解就是<code>&lt;tx:annotation-driven transaction-manager=&quot;transactionManager&quot;/&gt;</code></li>
<li><code>@EnableTransactionManagement</code>没有进行属性赋值，是因为使用默认值</li>
</ul>
<h4 id="transactional注解"><a class="markdownIt-Anchor" href="#transactional注解"></a> @Transactional注解</h4>
<ul>
<li>
<p>定义在类上，意味着该业务类中的所有方法都有事务</p>
</li>
<li>
<p>局部覆盖全局</p>
</li>
<li>
<p>只读<code>@Transactional(readonly= true)</code></p>
</li>
<li>
<p>超时（超时回滚，释放资源）<code>timeout = -1</code>：永不超时。单位秒</p>
</li>
<li>
<p>事务异常：默认只回滚运行时异常，编译（检查）异常不回滚。例子：<code>rollbackFor = FileNotFoundException.class</code>、<code>noRollbackFor = ArithmeticException.class</code></p>
</li>
<li>
<p>事务隔离级别：<code>isolation = Isolation.DEFAULT</code>，我：一般不写不改</p>
</li>
<li>
<p>事务传播行为：默认<code>propagation = Propagation.REQUIRED</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>REQUIRED</code><br/>默认值</td>
<td>当前方法必须作在事务中<br/>如果当前线程上有已经开启的事务可用，那么就在这个事务中运行<br/>如果当前线程上没有已经开启的事务，那么就自己开启新事务，在新事务中运行<br/>所以当前方法有可能和其他方法共用事务<br/>在共用事务的情况下：当前方法会因为其他方法回滚而受连累</td>
</tr>
<tr>
<td style="text-align:center">REQUIRES_NEW</td>
<td>当前方法必须工作在事务中<br/>不管当前线程上是否有已经开启的事务，都要开启新事务<br/>在新事务中运行<br/>不会和他万法共用事务，避免被其他方法连累</td>
</tr>
</tbody>
</table>
<p><strong><span style="color:#0000FF;">举例</span></strong>：①在StudentServices里有两个有事务的方法，changeName和changeAge，在TopServices里有一个有事务的方法，changeInfo。在测试里调用changeInfo，只要有异常就会都回滚，用的同一个。②将changeName和changeAge的事务的propagation改为<code>REQUIRES_NEW</code>，就会各管各的。</p>
<p><strong><span style="color:#0000FF;">注意：</span></strong><code>REQUIRED</code>和<code>REQUIRES_NEW</code>，在一个<code>REQUIRED</code>事务方法里先调用具有<code>REQUIRED</code>的方法，再调用具有<code>REQUIRES_NEW</code>的方法。当具有<code>REQUIRES_NEW</code>的方法出异常后，会一直等待</p>
<ul>
<li><code>Propagation.NESTED</code>：如果当前存在事务，则在该事务中嵌套一个新事务，如果没有事务，则与<code>Propagation.REQUIRED</code>一样</li>
<li><code>Propagation.SUPPORTS</code>：如果当前存在事务，则加入该事务，否则以非事务方式执行</li>
<li><code>Propagation.NOT_SUPPORTED</code>：以非事务方式执行，如果当前存在事务，挂起该事务</li>
<li><code>Propagation.MANDATORY</code>：必须在一个已有的事务中执行，否则抛出异常</li>
<li><code>Propagation.NEVER</code>：必须在没有事务的情况下执行，否则抛出异常</li>
</ul>
</li>
</ul>
<h4 id="将事务注解放到xml文件"><a class="markdownIt-Anchor" href="#将事务注解放到xml文件"></a> 将事务注解放到xml文件</h4>
<p>  主要利用AOP思想，所以要记得导包。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--    开启组件扫描--&gt;</span><br><span class="line">    &lt;context:component-scan base-<span class="keyword">package</span>=<span class="string">&quot;com.atguigu.jdbc.tx.xml&quot;</span>/&gt;</span><br><span class="line">&lt;!--    导入外部配置--&gt;</span><br><span class="line">    &lt;context:property-placeholder location=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span><br><span class="line">&lt;!--    德鲁伊连接池--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;dataSource&quot;</span> class=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;driverClassName&quot;</span> value=<span class="string">&quot;$&#123;jdbc.driverClassName&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;url&quot;</span> value=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;password&quot;</span> value=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;!--    JDBCTemplate--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;jdbcTemplate&quot;</span> class=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;dataSource&quot;</span> ref=<span class="string">&quot;dataSource&quot;</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;!--    事务管理器--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;transactionManager&quot;</span> class=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;dataSource&quot;</span> ref=<span class="string">&quot;dataSource&quot;</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;!--    配置声明式事务--&gt;</span><br><span class="line">&lt;!--    <span class="number">1.</span> 创建事务增强--&gt;</span><br><span class="line">    &lt;tx:advice id=<span class="string">&quot;txAdvice&quot;</span> transaction-manager=<span class="string">&quot;transactionManager&quot;</span>&gt;</span><br><span class="line">        &lt;tx:attributes&gt;</span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;get*&quot;</span> read-only=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;query*&quot;</span> read-only=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;find*&quot;</span> read-only=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;save*&quot;</span> read-only=<span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;change*&quot;</span> read-only=<span class="string">&quot;false&quot;</span> rollback-<span class="keyword">for</span>=<span class="string">&quot;java.io.FileNotFoundException&quot;</span> no-rollback-<span class="keyword">for</span>=<span class="string">&quot;java.lang.ArithmeticException&quot;</span> propagation=<span class="string">&quot;REQUIRES_NEW&quot;</span>/&gt;</span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;updata*&quot;</span> read-only=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;delete*&quot;</span>/&gt;</span><br><span class="line">&lt;!--            兜底--&gt;</span><br><span class="line">            &lt;tx:method name=<span class="string">&quot;*&quot;</span> /&gt;</span><br><span class="line">        &lt;/tx:attributes&gt;</span><br><span class="line">    &lt;/tx:advice&gt;</span><br><span class="line">&lt;!--    <span class="number">2.</span> 利用AOP将事务增强切入到指定位置--&gt;</span><br><span class="line">    &lt;aop:config&gt;</span><br><span class="line">        &lt;aop:pointcut id=<span class="string">&quot;pc&quot;</span> expression=<span class="string">&quot;execution(* *..*Services.*(..))&quot;</span>/&gt;</span><br><span class="line">        &lt;aop:advisor advice-ref=<span class="string">&quot;txAdvice&quot;</span> pointcut-ref=<span class="string">&quot;pc&quot;</span>/&gt;</span><br><span class="line">    &lt;/aop:config&gt;</span><br></pre></td></tr></table></figure>
<h2 id="springmvc"><a class="markdownIt-Anchor" href="#springmvc"></a> SpringMVC</h2>
<h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3>
<p>  SpringWebMVc是基于ServletAPi构建的原始Web框架，从一开始就包含在SpringFramework中。</p>
<ul>
<li>Spring家族原生产品， 与IOC容器等基础设施无缝对接</li>
<li>表述层各细分领域需要解决的问题全方位覆盖，提供全面解决方案</li>
<li>代码清新简洁，大幅度提升开发效率</li>
<li>为组件化程度高插拔式组件即插即用，想要什么功能配置相应组件即可</li>
<li>性能卓著，尤其适合现代大型，超大型互联网目要求</li>
</ul>
<p>SpringMVC的作用主要覆盖的是表述层，例如：请求映射、数据输入、视图界面、请求分发、表单回显、会话控制、过滤拦截、异步交互、文件上传、文件下载、数据校验、类型转换等等等</p>
<img data-src="https://s2.loli.net/2024/02/24/5WnPtVRpE3esZI4.png" alt="处理请求流程简略版" style="zoom:50%;" />
<ul>
<li><code>DispatcherServlet</code>：SpringMVc提供，需要使用web.xml配置使其生效，它是整个流程处理的核心，所有请求都经过它的处理和分发</li>
<li><code>HandlerMapping</code>：SpringMVC提供，需要进行IOC配置使其加入IOC容器方可生效，它内部缓存handler(controller）方法和handler(controller）访问路径数据，被DispatcherServlet调用，用于查找路径对应的handler(controller）</li>
<li><code>HandlerAdapter</code>：SpringMVC提供，需要进行IOC配置使其加入IOC容器方可生效。它可以处理请求参数和处理响应数据数据，每次DispatcherServlet都是通过handlerAdapter间接调用handler(controller），他是handler(controller）和<code>DispatcherServlet</code>之间的适配器</li>
<li><code>Handler</code>：handler又称处理器，他是controller类内部的方法简称，自已定义，用来接收参数，向后调用业务，最终返回响应结果</li>
<li><code>ViewResovler</code>：SpringMVC提供，需要进行IOC配置使其加入IOC容器方可生效。视图解析器主要作用简化模版视图页面查找的。相对其他的组件不是必须的</li>
</ul>
<h3 id="体验"><a class="markdownIt-Anchor" href="#体验"></a> 体验</h3>
<ol>
<li>
<p>（默认已经是web项目了）导包：</p>
<p>因为spring-webmvc依赖了其他包，所以导它即可。</p>
<p>因为要用servlet，但新的servlet在jakarta里，不在javax。</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.jakartaee-web-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过查看HttpServlet源码，发现</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">METHOD_DELETE</span> <span class="operator">=</span> <span class="string">&quot;DELETE&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">METHOD_HEAD</span> <span class="operator">=</span> <span class="string">&quot;HEAD&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">METHOD_GET</span> <span class="operator">=</span> <span class="string">&quot;GET&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">METHOD_OPTIONS</span> <span class="operator">=</span> <span class="string">&quot;OPTIONS&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">METHOD_POST</span> <span class="operator">=</span> <span class="string">&quot;POST&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">METHOD_PUT</span> <span class="operator">=</span> <span class="string">&quot;PUT&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">METHOD_TRACE</span> <span class="operator">=</span> <span class="string">&quot;TRACE&quot;</span>;</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.51cto.com/jackiehao/6796996#:~:text=%E8%BF%99%E4%BA%9B%E6%98%AFHTTP,%E5%85%B1%E4%BA%AB%EF%BC%89%E8%AF%B7%E6%B1%82%E4%B8%AD%E3%80%82">网络解答</a></p>
</li>
<li>
<p>编写web.xml</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--	1. 注册DispatcherServlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--		让spring创建HandlerMapping等，所以要指定springmvc的配置文件，进行IoC容器的创建--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--		因为DispatcherServlet的组件只有一个，tomcat一启动就创建--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span><span class="comment">&lt;!-- 放到init-param前面就标红--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--		拦截所有请求，除了.jsp--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>编写spring配置文件</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--   开启注解扫描--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.quick&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置HandlerMapping、HandlerAdapter、ViewResolver--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    方案一、自己配--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    方案二、自己不配，默认全配了--&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>编写Controller</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span><span class="comment">//不走页面，直接给前端</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>添加tomcat</p>
<p>必须要用10以上。</p>
<p><span style="color:#FF33FF;">坑点：</span>我没10，下载，改控制台日志编码为GBK，修改部分环境变量。启动，报错。</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jakarta.json.bind.JsonbException: JSON Binding provider org.eclipse.yasson.JsonBindingProvider not found</span><br></pre></td></tr></table></figure>
<p><span style="color:#00FF80;">解决：</span>添加org.eclipse的yasson依赖</p>
</li>
<li>
<p>运行，浏览器访问<a href="http://localhost:8080/hello">localhost:8080/hello</a></p>
</li>
</ol>
<h3 id="requestmapping"><a class="markdownIt-Anchor" href="#requestmapping"></a> @RequestMapping</h3>
<p>  请求映射的路径，将路径和方法存储到HandLerMapping里，便于DispatcherServlet查找。开头的<code>/</code>可省略，SpringMVC自动补全。</p>
<ul>
<li>精确匹配
<ul>
<li>单层路径</li>
<li>多层路径</li>
<li>多个路径（我：相当于别名）</li>
</ul>
</li>
<li>模糊匹配（不影响精确匹配）
<ul>
<li>单层路径：<code>/user/*</code></li>
<li>多层路径：<code>/user/**</code></li>
<li>指定层：<code>/user/*/*</code>不向下兼容</li>
</ul>
</li>
<li>类上写，则表示该类的统一路径前缀</li>
<li>限制请求方式：默认所有请求方式，可通过method属性修改<code>method = RequestMethod.PosT</code>，不允许则405</li>
<li>请求进阶：非常明确一个方法要以什么请求方式请求时。可以使用以下注解<code>GetMapping</code>、<code>PostMapping</code>、<code>PutMapping</code>、<code>DeleteMapping</code>，只能写一个</li>
</ul>
<h3 id="requestparam"><a class="markdownIt-Anchor" href="#requestparam"></a> @RequestParam</h3>
<p>  <code>@ReguestParam(value=参数名 required=是否为必传，defaultValue=不传，默认值是什么）</code>。soutp 直接打印方法的所有参数。（当然你也可以只写参数，不写注解，只要参数名对上就赋值，对自定义对象也同理）</p>
<ul>
<li>前后端参数名不一致时，可以进行指定映射</li>
<li>参数是否必传，默认写上注解就必传了</li>
<li>当不传递时，可以赋予指定默认值</li>
<li>如果必传， 但是前端没传，会报400错误，必要的参数未提供</li>
<li>一名多值，用List接收</li>
</ul>
<h3 id="路径传参pathvariable"><a class="markdownIt-Anchor" href="#路径传参pathvariable"></a> 路径传参@PathVariable</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">showUserByID</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>隐藏数据的key名，保护数据安全</li>
<li>RESTful风格开发</li>
<li>当然，参数名和占位符一致，注解可不指定名字</li>
</ul>
<h3 id="接收json数据requestbody"><a class="markdownIt-Anchor" href="#接收json数据requestbody"></a> 接收JSON数据@RequestBody</h3>
<p>  <code>@RequestBody</code>注解来将JSON数据转换为Java对象，<code>@ReguestBody</code>注解表示当前方法参数的值应该从请求体中获取，并且需要指定value属性来指示请求体应该映射到哪个参数上。避免415错误，做如下操作。</p>
<p>  添加依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.15.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  装配jackson转换器</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 装配HandlerAdapter 装配HandlerMapping 装配jackson转换器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>  使用了上述标签，则不用自己注入<code>HandlerAdapter</code>、<code>HandlerMapping</code>，尤其是<code>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</code></p>
<h3 id="获取cookiecookievalue"><a class="markdownIt-Anchor" href="#获取cookiecookievalue"></a> 获取cookie@CookieValue</h3>
<p>  cookie可以手动创建，也可以通过session触发创建。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/cookie/set&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">setCookie</span><span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;session.getId() = &quot;</span> + session.getId());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;set cookie ok&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/cookie/get&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">getCookie</span><span class="params">(<span class="meta">@CookieValue(&quot;JSESSIONID&quot;)</span> String sessionID)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;sessionID = &quot;</span> + sessionID);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;get cookie ok&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>   通过setCookie方法传入<code>HttpSession</code>，触发创建cookie。通过<code>@CookieValue(&quot;JSESSIONID&quot;)</code> 注解获取cookie里JSESSIONID的值。</p>
<h3 id="获取请求头"><a class="markdownIt-Anchor" href="#获取请求头"></a> 获取请求头</h3>
<p>使用<code>@RequestHeader</code>注解将请求标头绑定到控制器中的方法参数。（我：可以得到一些信息，可以区分用户等）</p>
<h3 id="使用原生api"><a class="markdownIt-Anchor" href="#使用原生api"></a> 使用原生API</h3>
<p>  从前面的获取cookie时，传入的HttpSession就可得到一些感觉。</p>
<table>
<thead>
<tr>
<th style="text-align:center">部分控制器参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>jakarta.servlet.ServletRequest</code><br/><code>jakarta.servlet.ServletResponse</code></td>
<td>请求/响应对象</td>
</tr>
<tr>
<td style="text-align:center"><code>jakarta.servlet.http.HttpSession</code></td>
<td>强制存在会话。因此，这样的参数永远不会为nul1</td>
</tr>
<tr>
<td style="text-align:center"><code>java.io.Inputstream</code><br/><code>java.io.Reader</code></td>
<td>用于访问由ServletAPI公开的原始请求正文</td>
</tr>
<tr>
<td style="text-align:center"><code>java.io.Outputstream</code><br/><code>java.io.Write</code></td>
<td>用于访问由ServletAPI公开的原始响应正文</td>
</tr>
<tr>
<td style="text-align:center"><code>java.util.Map</code><br/><code>org.springframework.ui.Model</code><br/><code>org.sprinaframework.ui.ModelMap</code></td>
<td>共享域对象，并在视图呈现过程中向模板公开</td>
</tr>
<tr>
<td style="text-align:center"><code>Errors</code><br/><code>BindingResult</code></td>
<td>验证和数据绑定中的错误信息获取对象</td>
</tr>
</tbody>
</table>
<h2 id="未解决的问题"><a class="markdownIt-Anchor" href="#未解决的问题"></a> 未解决的问题</h2>
<ul>
<li>从<code>getConnection</code>点进去，我们可以发现返回值上有括号，例如<code>return (con);</code>我不明白括号有什么用。</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>Spring</tag>
        <tag>SpringMVC</tag>
        <tag>Maven</tag>
        <tag>SpringBoot</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL语法的Oracle练习表分享</title>
    <url>/2019/08/27/MySQL%E8%AF%AD%E6%B3%95%E7%9A%84Oracle%E7%BB%83%E4%B9%A0%E8%A1%A8%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<h1 id="系列链接"><a class="markdownIt-Anchor" href="#系列链接"></a> 系列链接</h1>
<p><a href="https://pengxiandyou.github.io/2019/08/22/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%B8%80/">MySQL简单笔记一</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/23/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%BA%8C%E4%B9%8BDDL/">MySQL简单笔记二之DDL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/26/MySQL%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B9%8BDMl%E5%92%8CDQL/">MySQL简单学习笔记三之DMl和DQL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/27/MySQL%E8%AF%AD%E6%B3%95%E7%9A%84Oracle%E7%BB%83%E4%B9%A0%E8%A1%A8%E5%88%86%E4%BA%AB/">MySQL语法的Oracle练习表分享</a><br/></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE EMP</span><br><span class="line">(</span><br><span class="line">EMPNO NUMERIC(4) PRIMARY KEY,</span><br><span class="line">ENAME VARCHAR(10),</span><br><span class="line">JOB VARCHAR(9),</span><br><span class="line">MGR NUMERIC(4),</span><br><span class="line">HIREDATE DATE,</span><br><span class="line">SAL NUMERIC(7,2),</span><br><span class="line">COMM NUMERIC(7,2),</span><br><span class="line">DEPNO NUMERIC(4)</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">CREATE TABLE Dept(</span><br><span class="line">DEPTNO NUMERIC(4),</span><br><span class="line">DNAME VARCHAR(14),</span><br><span class="line">LOC VARCHAR(13)</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">CREATE TABLE Salgrade</span><br><span class="line">(</span><br><span class="line">GRADE NUMERIC,</span><br><span class="line">LOSAL  NUMERIC,</span><br><span class="line">HISAL NUMERIC </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">CREATE TABLE Bonus</span><br><span class="line">(</span><br><span class="line">ENAME VARCHAR(10),</span><br><span class="line">JOB VARCHAR(9),</span><br><span class="line">SAL NUMERIC,</span><br><span class="line">COMM NUMERIC</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">INSERT INTO Dept VALUES (10,&#x27;ACCOUNTING&#x27;,&#x27;NEW YORK&#x27;);</span><br><span class="line">INSERT INTO Dept VALUES (20,&#x27;RESEARCH&#x27;,&#x27;DALLAS&#x27;);</span><br><span class="line">INSERT INTO Dept VALUES (30,&#x27;SALES&#x27;,&#x27;CHICAGO&#x27;);</span><br><span class="line">INSERT INTO Dept VALUES (40,&#x27;OPERATIONS&#x27;,&#x27;BOSTON&#x27;);</span><br><span class="line"> </span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7369,&#x27;SMITH&#x27;,&#x27;CLERK&#x27;,7902,&#x27;1980-12-17&#x27;,800,NULL,20);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7499,&#x27;ALLEN&#x27;,&#x27;SALESMAN&#x27;,7698,&#x27;1981-02-20&#x27;,1600,300,30);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7521,&#x27;WARD&#x27;,&#x27;SALESMAN&#x27;,7698,&#x27;1981-02-22&#x27;,1250,500,30);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7566,&#x27;JONES&#x27;,&#x27;MANAGER&#x27;,7839,&#x27;1981-04-02&#x27;,2975,NULL,20);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7654,&#x27;MARTIN&#x27;,&#x27;SALESMAN&#x27;,7698,&#x27;1981-09-28&#x27;,1250,1400,30);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7698,&#x27;BLAKE&#x27;,&#x27;MANAGER&#x27;,7839,&#x27;1981-05-01&#x27;,2850,NULL,30);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7782,&#x27;CLARK&#x27;,&#x27;MANAGER&#x27;,7839,&#x27;1981-06-09&#x27;,2450,NULL,10);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7839,&#x27;KING&#x27;,&#x27;PRESIDENT&#x27;,NULL,&#x27;1981-11-17&#x27;,5000,NULL,10);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7844,&#x27;TURNER&#x27;,&#x27;SALESMAN&#x27;,7698,&#x27;1981-09-08&#x27;,1500,0,30);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7900,&#x27;JAMES&#x27;,&#x27;CLERK&#x27;,7698,&#x27;1981-12-03&#x27;,950,NULL,30);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7902,&#x27;FORD&#x27;,&#x27;ANALYST&#x27;,7566,&#x27;1981-12-03&#x27;,3000,NULL,20);</span><br><span class="line">INSERT INTO EMP VALUES</span><br><span class="line">(7934,&#x27;MILLER&#x27;,&#x27;CLERK&#x27;,7782,&#x27;1982-01-23&#x27;,1300,NULL,10);</span><br><span class="line"> </span><br><span class="line">INSERT INTO SALGRADE VALUES (1,700,1200);</span><br><span class="line">INSERT INTO SALGRADE VALUES (2,1201,1400);</span><br><span class="line">INSERT INTO SALGRADE VALUES (3,1401,2000);</span><br><span class="line">INSERT INTO SALGRADE VALUES (4,2001,3000);</span><br><span class="line">INSERT INTO SALGRADE VALUES (5,3001,9999);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL简单笔记二之DDL</title>
    <url>/2019/08/23/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%BA%8C%E4%B9%8BDDL/</url>
    <content><![CDATA[<hr/>
<font color=pink size =10>学习要自己思考,举一反三,保持好奇心(比如我在这里这么干会怎么样). </font>
<hr/>
<span id="more"></span>
# 系列链接
[MySQL简单笔记一](https://pengxiandyou.github.io/2019/08/22/MySQL简单笔记一/)<br/>
<p><a href="https://pengxiandyou.github.io/2019/08/23/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%BA%8C%E4%B9%8BDDL/">MySQL简单笔记二之DDL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/26/MySQL%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B9%8BDMl%E5%92%8CDQL/">MySQL简单学习笔记三之DMl和DQL</a><br/></p>
<p><a href="https://pengxiandyou.github.io/2019/08/27/MySQL%E8%AF%AD%E6%B3%95%E7%9A%84Oracle%E7%BB%83%E4%B9%A0%E8%A1%A8%E5%88%86%E4%BA%AB/">MySQL语法的Oracle练习表分享</a><br/></p>
<h1 id="一-数据库"><a class="markdownIt-Anchor" href="#一-数据库"></a> 一 数据库</h1>
<ol>
<li>
<p>创建数据库</p>
<ul>
<li><code>CREATE DATABASE db2;</code></li>
<li>不存在就创建 <code>CREATE DATABAS IF NOT EXISTS db2;</code></li>
</ul>
</li>
<li>
<p>删除数据库</p>
<ul>
<li><code>DROP DATABASE db2;</code></li>
<li>存在就删 <code>DROP DATABASE IF EXISTS db2;</code></li>
</ul>
</li>
</ol>
<h1 id="二-表"><a class="markdownIt-Anchor" href="#二-表"></a> 二 表</h1>
<ol>
<li>
<p>创建表 可以使用``(Tab上面的键)避免关键字冲突 NAME也可以创建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE stu(</span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(10),</span><br><span class="line">age INT</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>删除表 <code>DROP TABLE stu;</code></p>
</li>
<li>
<p>修改表</p>
<ol>
<li>
<p>添加列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE stu ADD(</span><br><span class="line">address VARCHAR(10),</span><br><span class="line">email VARCHAR(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>修改列类型 <code>ALTER TABLE stu MODIFY email VARCHAR(50);</code></p>
</li>
<li>
<p>修改列名 <code>ALTER TABLE stu CHANGE address addr VARCHAR(50);</code></p>
</li>
<li>
<p>删除列 <code>ALTER TABLE stu DROP email;</code></p>
</li>
<li>
<p>修改表名 <code>ALTER TABLE stu RENAME TO student;</code></p>
</li>
</ol>
</li>
</ol>
<h1 id="三-约束"><a class="markdownIt-Anchor" href="#三-约束"></a> 三 约束</h1>
<ol>
<li>
<p>主键约束</p>
<ol>
<li>
<pre class="highlight"><code class="mysql">CREATE TABLE t1(
id INT PRIMARY KEY,
NAME VARCHAR(10)
);
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2. 添加主键 `ALTER TABLE t1 ADD PRIMARY KEY(id);`</span><br><span class="line"></span><br><span class="line">3. 删除主键 `ALTER TABLE t1 DROP PRIMARY KEY;`</span><br><span class="line"></span><br><span class="line">4. 自动增长 </span><br><span class="line"></span><br><span class="line">   ```mysql</span><br><span class="line">   CREATE TABLE t1(</span><br><span class="line">   id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">   NAME VARCHAR(10)</span><br><span class="line">   );</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p>修改让自动增长 <code>ALTER TABLE t1 CHANGE id id INT AUTO_INCREMENT;</code></p>
</li>
<li>
<p>修改不让自动增长 <code>ALTER TABLE t1 CHANGE id id INT;</code></p>
</li>
</ol>
</li>
<li>
<p>非空约束</p>
<ol>
<li>
<pre class="highlight"><code class="mysql">CREATE TABLE t1(
id INT PRIMARY KEY,
NAME VARCHAR(10) NOT NULL
);
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   2. 修改 仿照修改自动增长</span><br><span class="line"></span><br><span class="line">3. 唯一键约束</span><br><span class="line"></span><br><span class="line">   1. ```</span><br><span class="line">      CREATE TABLE t1(</span><br><span class="line">      id INT PRIMARY KEY,</span><br><span class="line">      NAME VARCHAR(10) UNIQUE</span><br><span class="line">      );</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p>删除唯一键 <code>ALTER TABLE t1 DROP INDEX NAME;</code></p>
</li>
<li>
<p>修改表,创建唯一键 索引 <code>ALTER TABLE t1 ADD CONSTRAINT uq_name UNIQUE(NAME);</code></p>
</li>
</ol>
</li>
<li>
<p>外键约束</p>
<ol>
<li>
<pre class="highlight"><code class="">-- 命名 fk_子表名_列名
--      fk_主表名_子表名_列名
CREATE TABLE dep(
did INT PRIMARY KEY,
dname VARCHAR(10)
);
CREATE TABLE emp(
eid INT PRIMARY KEY,
ename VARCHAR(10),
did INT,
CONSTRAINT fk_dep_emp_did FOREIGN KEY(did) REFERENCES dep(did)
);
</code></pre>
</li>
<li>
<p>删除外键 <code>ALTER TABLE emp DROP FOREIGN KEY fk_dep_emp_did;</code></p>
</li>
<li>
<p>添加外键 <code>ALTER TABLE emp ADD CONSTRAINT fk_dep_emp_did FOREIGN KEY(did) REFERENCES dep(did);</code></p>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<p>问：为什么在前面？</p>
<p>答：硬盘坏了，重新搭建后自动生成的。</p>
<p>问：为什么不调到最后？</p>
<p>答：我不想，虽然可以。</p>
<p>问：为什么不删除？</p>
<p>答：可以拿来做测试。</p>
<span id="more"></span>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
<h2 id="计划"><a class="markdownIt-Anchor" href="#计划"></a> 计划</h2>
<ul>
<li>实现长图片、效果图等侧边排列合适内容与文字竖向排列。实现方式：代码块标记或<code>&#123;% ? %&#125;</code>标记，修改渲染模板。可能涉及css。</li>
<li>当评论泛滥时，启用反垃圾 ，<code>AKISMET_KEY</code> <a href="https://akismet.com/developers/">https://akismet.com/developers/</a></li>
</ul>
<h2 id="遗留问题"><a class="markdownIt-Anchor" href="#遗留问题"></a> 遗留问题</h2>
<ul>
<li>
<p>2024年1月10日</p>
<ul>
<li><s>vercel</s>和<s>leancloud</s>无法成功绑定域名，提示重定向次数过多。评论管理地址：<a href="https://waline-server-three-blue.vercel.app/ui">https://waline-server-three-blue.vercel.app/ui</a> <a href="pengxiandyou.avosapps.us">pengxiandyou.avosapps.us</a> 要代理访问，<a href="comms.19980118.xyz"><strong>comms.19980118.xyz</strong></a> <span style="color:#000099;">量子绑定：代理</span></li>
<li>评论邮箱提醒失效，提示密码错误，leancloud唤醒后就这样了</li>
</ul>
</li>
<li>
<p>leancloud保持唤醒</p>
</li>
<li>
<p>评论要开代理才展示</p>
</li>
</ul>
<h2 id="历史"><a class="markdownIt-Anchor" href="#历史"></a> 历史</h2>
<ul>
<li>
<p>之前的就不管了</p>
</li>
<li>
<p>2024年1月10日</p>
<ul>
<li>将域名变更为 <a href="19980118.xyz">19980118.xyz</a></li>
<li>将模板里的pengxiandyou.cf等自定义用到的域名变更为主题模板定义<code>&#123;&#123; them.blogurl &#125;&#125;</code></li>
<li><s>修改主题文件下的<code>_vendors.yml</code>的mermaid版本为<code>10.6.1</code>，同时修改主题配置文件</s></li>
<li><s>leancloud成功绑定域名 <a href="comms.19980118.xyz">comms.19980118.xyz</a> vercel成功绑定 <a href="comm.19980118.xyz">comm.19980118.xyz</a></s> 量子绑定：代理</li>
<li><s>将vercel的环境变量<code>ADMIN_URL</code>，由<code>https://pengxiandyou.avosapps.us</code>改为</s><code>https://comms.19980118.xyz/</code></li>
</ul>
</li>
<li>
<p>2024年1月11日</p>
<ul>
<li>通过ns记录将二级域名<code>comm.19980118.xyz</code>交给vercel进行解析实现</li>
<li>添加自定义标签实现两列显示 <a href="/2020/08/12/%E6%9C%89%E8%B6%A3%E7%9A%84%E4%B8%9C%E8%A5%BF/#hexo%E5%92%8Cnext%E6%96%87%E6%A1%A3">方法</a></li>
<li>发现之前图片加载失败不停重试
<ul>
<li>添加重试次数</li>
<li>添加错误图片</li>
<li>点击图片再次重试</li>
</ul>
</li>
</ul>
</li>
<li>
<p>2024年1月15日</p>
<ul>
<li>添加答题显示功能，当然聪明人不需要</li>
</ul>
</li>
<li>
<p>2024年1月22日</p>
<ul>
<li>
<p>我看上了MC百科的文字黑块显示效果，所以拿来主义。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.uknowtoomuch</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#000</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span> <span class="meta">!important</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.uknowtoomuch</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span> <span class="meta">!important</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.uknowtoomuch</span><span class="selector-pseudo">:hover</span>,<span class="selector-class">.uknowtoomuch</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span>,<span class="selector-class">.uknowtoomuch</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>暂时自己用<code>span</code>标签添加<code>uknowtoomuch</code>类来使用，后期可以改成hexo标签。</p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<div class="hbe hbe-container" name ="QA"  id =QA518QA518 answer="123,1231" data-wpm="您输入的内容与预期不符，请重试。" data-whm="尽管您输入的内容与预期不符，但还是可以阅读。">
<div class="hbe hbe-content">
<div class="hbe hbe-input hbe-input-flip" style="display: flex!important;flex-direction: row!important;">
<input class="hbe hbe-input-field hbe-input-field-flip" type="text" id="mQ627" name = "mQ">
<label class="hbe hbe-input-label hbe-input-label-flip" for="mQ">
<span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="233">233</span>
</label>
<button type="submit" class="primary wl-btn" style="border-left-width: 1px;margin-left: 10px;" onclick='QA(document.getElementById("QA518QA518"));'>确定</button>
</div>
</div>
</div>
<div id=QA518 style="display: none;"><p>asdsfsfdf</p>
</div>
<div class="hbe hbe-container" name ="QA"  id =QA978QA978 answer="123,1231" data-wpm="您输入的内容与预期不符，请重试。" data-whm="尽管您输入的内容与预期不符，但还是可以阅读。">
<div class="hbe hbe-content">
<div class="hbe hbe-input hbe-input-flip" style="display: flex!important;flex-direction: row!important;">
<input class="hbe hbe-input-field hbe-input-field-flip" type="text" id="mQ767" name = "mQ">
<label class="hbe hbe-input-label hbe-input-label-flip" for="mQ">
<span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="你是谁？">你是谁？</span>
</label>
<button type="submit" class="primary wl-btn" style="border-left-width: 1px;margin-left: 10px;" onclick='QA(document.getElementById("QA978QA978"));'>确定</button>
</div>
</div>
</div>
<div id=QA978 style="display: none;"><p>asdsfsfdf</p>
</div>
]]></content>
  </entry>
  <entry>
    <title>jQuery简单笔记</title>
    <url>/2019/10/24/jQuery%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="系列链接"><a class="markdownIt-Anchor" href="#系列链接"></a> 系列链接</h1>
<p><a href="https://pengxiandyou.github.io/2019/08/27/HTML%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">HTML简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/01/CSS%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">CSS简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/JavaScript%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">JavaScript简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/jQuery%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">jQuery简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/%E6%8B%93%E5%B1%95%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">拓展简单笔记</a><br/></p>
<h1 id="jquery"><a class="markdownIt-Anchor" href="#jquery"></a> jQuery</h1>
<p>$(选择器).方法();</p>
<p>jQuery:简写$,工厂函数,将don对象转换jQuery对象</p>
<p>js中操作的对象就是dom对象</p>
<p>选择器: 要操作的元素</p>
<p>方法:参数都是函数,jQuery中的方法都是事件方法</p>
<p>$(document).ready(function(){</p>
<p>});类似onload</p>
<p>各个对象只能调用自己的方法</p>
<p>连缀写法: $(#mydiv).mouseover(function(){</p>
<p>$(this).css(“background”,“red”)</p>
<p>}).mouseout(function(){</p>
<p>$(this).css(“background”,“pink”)</p>
<p>});</p>
<p>css(“属性”,属性值) 为元素设置css样式的值</p>
<p>addClass() 为元素添加类样式</p>
<p>next() 获得元素其后紧邻的同类元素</p>
<p>sho() 显示 “slow”</p>
<p>jQuery对象转dom对象 jQuery对象[0]  jQuery对象.get(0)</p>
<p>$(“h3”).css(“background”,&quot;#369&quot;);</p>
<p>$(“p”).each(function(i item){});</p>
<p>jQuery有很多选择器</p>
<p>*全局选择器</p>
<p>表单事件 <code>focus</code> <code>blur</code></p>
<p>复合事件 <code>hover</code></p>
<p>动画 <code>show()</code> <code>hide()</code> <code>fadeIn()</code> <code>fadeOut()</code></p>
<p>addClass() removeClass() toggleClass()</p>
<p>.val()</p>
<p>元素添加 appendTo() prependTo()</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>为hexo实现两列展示功能</title>
    <url>/2024/01/12/%E4%B8%BAhexo%E5%AE%9E%E7%8E%B0%E4%B8%A4%E5%88%97%E5%B1%95%E7%A4%BA%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2>
<p>  一个是方便观察，另一个就是因为如果图片是长图片的话，还会造成空间浪费。</p>
<h2 id="实现方式"><a class="markdownIt-Anchor" href="#实现方式"></a> 实现方式</h2>
<p>  条条大路通罗马。只要肯探索，方式多种多样。</p>
<h3 id="未选择方式"><a class="markdownIt-Anchor" href="#未选择方式"></a> 未选择方式</h3>
<ol>
<li>直接写html：麻烦，每次都要写，要写的html代码还比较长，还不一定记得住</li>
<li>写脚本
<ul>
<li>Typora脚本：没怎么研究，而且识别和渲染比较麻烦的感觉</li>
<li>其他脚本：识别和匹配比较费脑子</li>
</ul>
</li>
</ol>
<h3 id="hexo-next插件方式"><a class="markdownIt-Anchor" href="#hexo-next插件方式"></a> hexo-next插件方式</h3>
<p>  首先，经过多次配置和翻文件，我对hexo和next文的了解已经比较熟悉了。漂亮话：没有人比我更懂它们👐。</p>
<p>   我们知道在hexo和Tyopra中可以使用借助美人鱼插件用代码块来画图，所以我也设想过这种方式，但是，我翻了翻文件，没有选择这种方式。主要是因为我有现成的例子。很久以前，我发现文章内容过多时，折叠起来就好了，于是就在网络上借鉴起来了。这种方式就是标签插件，hexo和next都有相应的标签。</p>
<p>  最开始，我设想的是实现用三个标签分成两部分的方式，但通过阅读好几个例子，改为将内容用标签包住，内容中间用分割符分开。</p>
<h3 id="要借鉴致敬前要现了解对方"><a class="markdownIt-Anchor" href="#要借鉴致敬前要现了解对方"></a> 要借鉴（致敬）前要现了解对方</h3>
<p>  首先我们观察折叠功能实现的代码。</p>
<div class = "left_right"><div class = "left" style = "max-width: 60%;min-width: auto;"><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="comment">// Usage: &#123;% fold ???? %&#125; Something &#123;% endfold %&#125;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fold</span> (args, content) &#123;</span><br><span class="line">    <span class="keyword">var</span> text = args[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(!text) text = <span class="string">&quot;点击显/隐&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;div&gt;&lt;div class=&quot;fold_hider&quot;&gt;&lt;div class=&quot;close hider_title&quot;&gt;&#x27;</span> </span><br><span class="line">        + text + <span class="string">&#x27;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;fold&quot;&gt;\n&#x27;</span> </span><br><span class="line">        + hexo.<span class="property">render</span>.<span class="title function_">renderSync</span>(&#123;<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">&#x27;markdown&#x27;</span>&#125;) </span><br><span class="line">        + <span class="string">&#x27;\n&lt;/div&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;fold&#x27;</span>, fold, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure>
</div><div class = "right" style = "max-width: auto;min-width: auto;"><p>  首先，可以发现，<code>args</code>就是参数数组，<code>content</code>就是标签之间包括的内容。<code>hexo.render.renderSync({text: content, engine: 'markdown'}</code>从名称可看出，这是一个异步渲染器，传入了标签之间的内容，使用markdown引擎进行渲染。<code>hexo.extend.tag.register('fold', fold, {ends: true});</code>从名称可以看出，这是进行标签注册，注册的标签是<code>fold</code>，使用的是<code>fold</code>函数，同时说明这个标签有结束标记。</p>
</div></div>
<p>  我们再看一个。这个标签我没用过，是我在文件里发现的比较简单的。</p>
<div class = "left_right"><div class = "left" style = "max-width: 80%;min-width: auto;"><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> rUrl = <span class="regexp">/((([A-Za-z]&#123;3,9&#125;:(?:\/\/)?)(?:[-;:&amp;=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&amp;=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&amp;;%@.\w_]*)#?(?:[.\!\/\\w]*))?)/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Fancybox tag</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Syntax:</span></span><br><span class="line"><span class="comment">*   &#123;% fancybox /path/to/image [/path/to/thumbnail] [title] %&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;fancybox&#x27;</span>, <span class="keyword">function</span>(<span class="params">args</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> original = args.<span class="title function_">shift</span>(),</span><br><span class="line">    thumbnail = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (args.<span class="property">length</span> &amp;&amp; rUrl.<span class="title function_">test</span>(args[<span class="number">0</span>]))&#123;</span><br><span class="line">    thumbnail = args.<span class="title function_">shift</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> title = args.<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;a class=&quot;fancybox&quot; href=&quot;&#x27;</span> + original + <span class="string">&#x27;&quot; title=&quot;&#x27;</span> + title + <span class="string">&#x27;&quot;&gt;&#x27;</span> +</span><br><span class="line">    <span class="string">&#x27;&lt;img src=&quot;&#x27;</span> + (thumbnail || original) + <span class="string">&#x27;&quot; alt=&quot;&#x27;</span> + title + <span class="string">&#x27;&quot;&gt;&#x27;</span></span><br><span class="line">    <span class="string">&#x27;&lt;/a&gt;&#x27;</span> +</span><br><span class="line">    (title ? <span class="string">&#x27;&lt;span class=&quot;caption&quot;&gt;&#x27;</span> + title + <span class="string">&#x27;&lt;/span&gt;&#x27;</span> : <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</div><div class = "right" style = "max-width: auto;min-width: auto;"><p>  和前面的折叠相比较，可以发现这个注册了<code>fancybox</code>标签，并传入匿名函数处理事情。同时，可以看到这个标签没有结束标签。我们还可以学到这个：<code>(thumbnail || original)</code>，我认为它运用或运算的一个规律：一真则真，来达到三目运算的感觉。</p>
</div></div> 
<p>  上面的这两个代码显示的方式是我最开始使用的方式，中间因为命名出错的原因没有成功，所以我尝试使用next的方式。我们先学习一下。</p>
<div class = "left_right"><div class = "left" style = "max-width: 75%;min-width: auto;"><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * tabs.js | https://theme-next.js.org/docs/tag-plugins/tabs</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">ctx</span> =&gt;</span> <span class="keyword">function</span>(<span class="params">args, content = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> tabBlock = <span class="regexp">/&lt;!--\s*tab (.*?)\s*--&gt;\n([\w\W\s\S]*?)&lt;!--\s*endtab\s*--&gt;/g</span>;</span><br><span class="line"></span><br><span class="line">  args = args.<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>).<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> tabName = args[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">const</span> tabActive = <span class="title class_">Number</span>(args[<span class="number">1</span>]) || <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> tabId = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> tabNav = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">let</span> tabContent = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!tabName) ctx.<span class="property">log</span>.<span class="title function_">warn</span>(<span class="string">&#x27;Tabs block must have unique name!&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> matches = content.<span class="title function_">matchAll</span>(tabBlock);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> match <span class="keyword">of</span> matches) &#123;</span><br><span class="line">    <span class="keyword">let</span> [caption = <span class="string">&#x27;&#x27;</span>, icon = <span class="string">&#x27;&#x27;</span>] = match[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&#x27;@&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> postContent = match[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    postContent = ctx.<span class="property">render</span>.<span class="title function_">renderSync</span>(&#123; <span class="attr">text</span>: postContent, <span class="attr">engine</span>: <span class="string">&#x27;markdown&#x27;</span> &#125;).<span class="title function_">trim</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> abbr = tabName + <span class="string">&#x27; &#x27;</span> + ++tabId;</span><br><span class="line">    <span class="keyword">const</span> href = abbr.<span class="title function_">toLowerCase</span>().<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>).<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    icon = icon.<span class="title function_">trim</span>();</span><br><span class="line">    <span class="keyword">if</span> (icon.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!icon.<span class="title function_">startsWith</span>(<span class="string">&#x27;fa&#x27;</span>)) icon = <span class="string">&#x27;fa fa-&#x27;</span> + icon;</span><br><span class="line">      icon = <span class="string">`&lt;i class=&quot;<span class="subst">$&#123;icon&#125;</span>&quot;&gt;&lt;/i&gt;`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    caption = icon + caption.<span class="title function_">trim</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> isActive = (tabActive &gt; <span class="number">0</span> &amp;&amp; tabActive === tabId) || (tabActive === <span class="number">0</span> &amp;&amp; tabId === <span class="number">1</span>) ? <span class="string">&#x27; active&#x27;</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    tabNav += <span class="string">`&lt;li class=&quot;tab<span class="subst">$&#123;isActive&#125;</span>&quot;&gt;&lt;a href=&quot;#<span class="subst">$&#123;href&#125;</span>&quot;&gt;<span class="subst">$&#123;caption || abbr&#125;</span>&lt;/a&gt;&lt;/li&gt;`</span>;</span><br><span class="line">    tabContent += <span class="string">`&lt;div class=&quot;tab-pane<span class="subst">$&#123;isActive&#125;</span>&quot; id=&quot;<span class="subst">$&#123;href&#125;</span>&quot;&gt;<span class="subst">$&#123;postContent&#125;</span>&lt;/div&gt;`</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tabNav = <span class="string">`&lt;ul class=&quot;nav-tabs&quot;&gt;<span class="subst">$&#123;tabNav&#125;</span>&lt;/ul&gt;`</span>;</span><br><span class="line">  tabContent = <span class="string">`&lt;div class=&quot;tab-content&quot;&gt;<span class="subst">$&#123;tabContent&#125;</span>&lt;/div&gt;`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;div class=&quot;tabs&quot; id=&quot;<span class="subst">$&#123;tabName.toLowerCase().split(<span class="string">&#x27; &#x27;</span>).join(<span class="string">&#x27;-&#x27;</span>)&#125;</span>&quot;&gt;<span class="subst">$&#123;tabNav + tabContent&#125;</span>&lt;/div&gt;`</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</div><div class = "right" style = "max-width: auto;min-width: auto;"><p>  首先<code>'use strict';</code>表明使用严格模式。<code>module.exports</code>表明这是向外暴露接口。<code>ctx =&gt; function(）</code>这个应该是箭头函数，应该是在<code>ctx</code>里添加一个函数，<code>ctx</code>应该和<code>hexo</code>是同一个全局变量吧，毕竟有这个<code>ctx.render.renderSync（）</code>。<code>tabBlock</code>这个变量可以看出也是在将标签包裹的内容分块取出。<code>let [caption = '', icon = ''] = match[1].split('@');</code>从这个代码里面我们可以学到一种变量和赋值的方式。</p>
<p>  可以看到这个代码里面没有注册，那么在那里注册呢？可以发现在当前文件夹下有一个<code>index.js</code>，在该文件里模仿前面的进行编写。不过里面一个写法：<code>const centerQuote = require('./center-quote')(hexo);</code>，我根据查到的资料，我认为这是执行<code>require</code>返回一个匿名函数，然后这个匿名函数传入<code>hexo</code>进行执行。</p>
</div></div>
<h3 id="实现第一步设计"><a class="markdownIt-Anchor" href="#实现第一步设计"></a> 实现第一步：设计</h3>
<p>  使用标签<code>&#123;% left_right %&#125; </code>进行标记，用<code>&lt;!-- s --&gt;</code>进行分割左右，使用第一个参数作为左边<code>div</code>的宽度。同时设计别名<code>&#123;% lr %&#125; </code>。原本还想设计更多参数用来调整是否上下居中，但是我使用的是弹性盒子布局，不方便弄，我不想🙅。</p>
<p>  html代码设计如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span> = <span class="string">&quot;right_left&quot;</span> <span class="attr">class</span> = <span class="string">&quot;right_left&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span> = <span class="string">&quot;left&quot;</span> <span class="attr">class</span> = <span class="string">&quot;left&quot;</span> <span class="attr">style</span> = <span class="string">&quot;max-width: 50%;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>左<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span> = <span class="string">&quot;right&quot;</span> <span class="attr">class</span> = <span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>右<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="实现第二步编写代码"><a class="markdownIt-Anchor" href="#实现第二步编写代码"></a> 实现第二步：编写代码</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">left_right</span> (args, content) &#123;</span><br><span class="line">    <span class="keyword">const</span> split_symbol = <span class="regexp">/&lt;!--\s*s\s*--&gt;/</span>;</span><br><span class="line">    <span class="keyword">const</span> result = content.<span class="title function_">split</span>(split_symbol);</span><br><span class="line">    <span class="keyword">let</span> left_content = result[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> right_content = result[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">//max-width: 50%;</span></span><br><span class="line">    <span class="keyword">let</span> max_width = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(args[<span class="number">0</span>]) max_width =args[<span class="number">0</span>]+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;div class = &quot;left_right&quot;&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;div class = &quot;left&quot; style = &quot;max-width: &#x27;</span>+(max_width||<span class="string">&quot;50%&quot;</span>)+<span class="string">&#x27;;&quot;&gt;&#x27;</span></span><br><span class="line">    + hexo.<span class="property">render</span>.<span class="title function_">renderSync</span>(&#123;<span class="attr">text</span>: result[<span class="number">0</span>], <span class="attr">engine</span>: <span class="string">&#x27;markdown&#x27;</span>&#125;) </span><br><span class="line">    + <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;div class = &quot;right&quot;&gt;&#x27;</span></span><br><span class="line">    + hexo.<span class="property">render</span>.<span class="title function_">renderSync</span>(&#123;<span class="attr">text</span>: result[<span class="number">1</span>], <span class="attr">engine</span>: <span class="string">&#x27;markdown&#x27;</span>&#125;) </span><br><span class="line">    + <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;left_right&#x27;</span>, left_right, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;lr&#x27;</span>, left_right, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure>
<p>  编写好后，我们将它放到主题文件下的<code>\scripts\filters</code>。至于为什么放到这里，不是<code>tag</code>或者其他，是因为我之前的文章折叠就是放到这里。应该是hexo和next会默认加载。</p>
<h3 id="实现第三步编写css"><a class="markdownIt-Anchor" href="#实现第三步编写css"></a> 实现第三步：编写css</h3>
<p>  css可以写的地方有许多，比如网站下的静态资源文件夹，然后在文章里引入；再比如在默认加载的css文件里编写；再比如在html代码里写。我选的方式当然要简单啦，我不喜欢太麻烦。</p>
<p>  首先根据主题文件的样子新建一个自己的css文件。我已经在<code>source\css\_custom</code>下新建了<code>custom.styl</code>。哈哈，之前看到好的配置，运用拿来主义变成我的了。在<code>custom.styl</code>里编写如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.left_right</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex <span class="meta">!important</span>;//我知道用这种方式提高优先级不好，尤其是泛滥后。</span><br><span class="line">  <span class="attribute">justify-content</span>: start;//最后选择。</span><br><span class="line">  <span class="attribute">overflow</span>: auto;//避免超出父元素</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.left</span>&#123;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">10px</span>;//左右之间不要挨得太近</span><br><span class="line">  //<span class="attribute">max-width</span>: <span class="number">55%</span>;//在模板里设置</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;//聊胜于无吧？自动换行</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.right</span>&#123;</span><br><span class="line">  //<span class="attribute">max-width</span>: <span class="number">40%</span>;</span><br><span class="line">  //<span class="attribute">min-width</span>: auto;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  编写好后，怎么加载呢？简单，观察好几个文件就明白了。在<code>css</code>文件夹下，有一个<code>main.styl</code>，在里面追加：<code>@import &quot;_custom/custom.styl&quot;;@import &quot;_custom/hbe.styl&quot;;</code>。到此时，我们想要的功能就实现了。</p>
<h2 id="我想说"><a class="markdownIt-Anchor" href="#我想说"></a> 我想说</h2>
<p>  从这次功能的实现中可以发现，我对js学习得不够多，好多不是很了解。看来不能仅靠已经学习过的语音来感觉js了，要再学习深一点了。对于css，我看就算了，太多了，就靠互联网和浏览器提示了。</p>
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<ul>
<li><a href="https://theme-next.js.org/docs/tag-plugins/tabs">Tabs | NexT (theme-next.js.org)</a></li>
<li><a href="https://bambrow.com/20200726-hexo-blog-toggles/">Hexo 静态博客添加可折叠内容 | Bambrow’s Blog</a></li>
<li><a href="https://blog.csdn.net/weixin_44058725/article/details/125320206">css flex 布局 space-around 和 space-evenly 之间的区别css flex布局）-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/Mq_sir/article/details/118545778">CSS 弹性盒子布局详解_css space-around-CSDN博客</a></li>
<li><a href="https://www.jb51.net/css/761706.html">div水平布局两边对齐的三种实现方法_CSS布局实例_CSS_网页制作_脚本之家 (jb51.net)</a></li>
<li><a href="https://hexo.io/zh-cn/docs/">hexo文档</a></li>
<li><a href="https://blog.csdn.net/melordljm/article/details/51985157">Hexo高级教程之插件开发</a></li>
<li><a href="https://www.cnblogs.com/LuisYang/p/9356404.html">Hexo 添加自定义的内置标签</a></li>
</ul>
<h2 id="更新"><a class="markdownIt-Anchor" href="#更新"></a> 更新</h2>
<ul>
<li>
<p>2024年1月13日 仅设置左边的最大值不够好，有时候它不争气。所以根据它本身参数的特性，设计最多4个有效参数作为左右的最大、最小宽度。当参数不足时，用默认值或无效值。</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">left_right</span> (args, content) &#123;</span><br><span class="line">    <span class="keyword">const</span> split_symbol = <span class="regexp">/&lt;!--\s*s\s*--&gt;/</span>;</span><br><span class="line">    <span class="keyword">const</span> result = content.<span class="title function_">split</span>(split_symbol);</span><br><span class="line">    <span class="keyword">let</span> left_content = result[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> right_content = result[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">//max-width: 50%;</span></span><br><span class="line">    <span class="keyword">let</span> lmax_width = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(args[<span class="number">0</span>]) lmax_width =args[<span class="number">0</span>]+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> lmin_width = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(args[<span class="number">1</span>]) lmin_width =args[<span class="number">1</span>]+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> rmax_width = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(args[<span class="number">2</span>]) rmax_width =args[<span class="number">1</span>]+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> rmin_width = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(args[<span class="number">3</span>]) rmin_width =args[<span class="number">1</span>]+<span class="string">&quot;%&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;div class = &quot;left_right&quot;&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;div class = &quot;left&quot; style = &quot;max-width: &#x27;</span>+(lmax_width||<span class="string">&quot;50%&quot;</span>)+<span class="string">&#x27;;min-width: &#x27;</span>+(lmin_width||<span class="string">&quot;auto&quot;</span>)+<span class="string">&#x27;;&quot;&gt;&#x27;</span></span><br><span class="line">    + hexo.<span class="property">render</span>.<span class="title function_">renderSync</span>(&#123;<span class="attr">text</span>: result[<span class="number">0</span>], <span class="attr">engine</span>: <span class="string">&#x27;markdown&#x27;</span>&#125;) </span><br><span class="line">    + <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;div class = &quot;right&quot; style = &quot;max-width: &#x27;</span>+(rmax_width||<span class="string">&quot;auto&quot;</span>)+<span class="string">&#x27;;min-width: &#x27;</span>+(rmin_width||<span class="string">&quot;auto&quot;</span>)+<span class="string">&#x27;;&quot;&gt;&#x27;</span></span><br><span class="line">    + hexo.<span class="property">render</span>.<span class="title function_">renderSync</span>(&#123;<span class="attr">text</span>: result[<span class="number">1</span>], <span class="attr">engine</span>: <span class="string">&#x27;markdown&#x27;</span>&#125;) </span><br><span class="line">    + <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>个人简历</title>
    <url>/2024/01/22/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/</url>
    <content><![CDATA[<h2 id="基本信息"><a class="markdownIt-Anchor" href="#基本信息"></a> 基本信息</h2>
<p>姓名：彭喜</p>
<p>性别：男</p>
<p>年龄：26</p>
<p>学历：本科</p>
<p>专业：信息与计算科学</p>
<p>毕业学校：太原科技大学</p>
<h2 id="简单经历"><a class="markdownIt-Anchor" href="#简单经历"></a> 简单经历</h2>
<ul>
<li>2017-09 至 2021-06 太原科技大学学习 舍长</li>
<li>2021-08 至 2023-07 新疆塔城西部计划志愿者</li>
</ul>
<h2 id="能力印证"><a class="markdownIt-Anchor" href="#能力印证"></a> 能力印证</h2>
<div><div class="fold_hider"><div class="close hider_title">大学成绩单</div></div><div class="fold">
<p><img data-src="https://s2.loli.net/2024/01/22/eBfFgYGPsV64rOt.png" alt="水印成绩单" /></p>

</div></div>
<div><div class="fold_hider"><div class="close hider_title">二级office</div></div><div class="fold">
<p><img data-src="https://s2.loli.net/2024/01/22/E54Wls7NUimMAwB.png" alt="水印二级 office 良好" /></p>

</div></div>
<div><div class="fold_hider"><div class="close hider_title">三级网络技术</div></div><div class="fold">
<p><img data-src="https://s2.loli.net/2024/01/22/KwyNSeIg3fkXbup.jpg" alt="水印三级网络技术" /></p>

</div></div>
<div><div class="fold_hider"><div class="close hider_title">全国大学生数学建模竞赛</div></div><div class="fold">
<p><img data-src="https://s2.loli.net/2024/01/22/Y3dLEVitC7xa2eT.jpg" alt="水印全国数学建模竞赛" /></p>

</div></div>
<div><div class="fold_hider"><div class="close hider_title">深圳杯数学建模挑战赛</div></div><div class="fold">
<p><img data-src="https://s2.loli.net/2024/01/22/aZPNTmKpRuk2yhx.jpg" alt="水印深圳杯" /></p>

</div></div>
<div><div class="fold_hider"><div class="close hider_title">英语四级</div></div><div class="fold">
<p><img data-src="https://s2.loli.net/2024/01/23/Fy17lf6JkhtEeS4.png" alt="水印英语4级" /></p>

</div></div>
<p><span title = "当年勇"> 一些“院三好学生”、奖学金证书和 C1D 驾照就不展示了。</span> <span class = "uknowtoomuch" title= "就培训了15天"> 还有咖啡师。</span></p>
<h2 id="能力总结"><a class="markdownIt-Anchor" href="#能力总结"></a> 能力总结</h2>
<ul>
<li>编程能力
<ul>
<li>学习过C和Python</li>
<li>自学过Java、Git、MySQL、<span class ="uknowtoomuch" title ="叛逆">JavaFX</span></li>
<li>用过js、Spring、SpringMVC</li>
<li>帮同学搭建过SpringBoot项目并运行</li>
<li>完善了我的博客</li>
</ul>
</li>
<li>其他能力
<ul>
<li>office熟练，Excel突出</li>
<li>电脑操作熟练</li>
</ul>
</li>
</ul>
<h2 id="西部计划经历简述"><a class="markdownIt-Anchor" href="#西部计划经历简述"></a> 西部计划经历简述</h2>
<p>  我分配到组织人事室，主要完成科室的任务。我们科室有许多任务，如：工青妇、党建、人事、民族团结、办文、办会等，总之我们科室非常繁忙，相当于办公室的办公室。在科室里，我通常撰写报告、总结、函等材料，以及每日考勤和办公室内部的文件专管员。办公室内部的会议也是我们科室负责，开会前，我准备桌椅、调试投影和音响；开会时，    <span title = "用的手机和佳能的5D2">我拍摄照片；作为西部计划志愿者，处理单位的任务，有时也要完成团委的任务。</p>
<p>  在两年的志愿服务期间，有许多印象深刻的事。<strong>一是在单位转正</strong>。那一天非常激动，我转正成为的正式党员，有了选举权和被选举权。<strong>二是“独占”科室</strong>。有好几个时间段，科室就我一个。印象最深的有两个，一个是科室负责人去参加中青班，我处理科室事情一个月。一个是科室负责人身体欠佳，我处理科室事情差不多十天半个月。<strong>三是盛大扩大会</strong>。在志愿服务期间，开了好几次扩大会，我们一起通宵校稿、打印材料和其他会前准备。<strong>四是召开团代会</strong>。团代会为期两天，我作为第三小组组长，负责第三代表团。然而我的组员是代表，我几乎作了所有事情。幸好到最后又找了两个。在这期间，我要布置会场，拍摄照片，联络学生、家长、老师和代表团主持人。</p>
<ul>
<li><a href="https://mp.weixin.qq.com/s/cHVqZlw8lnTepVkvGyVHeQ">塔城市团委联合塔城市消防中队开展“迎七一”主题党日活动</a></li>
<li><a href="https://mp.weixin.qq.com/s/nt4kAhdfJiZY0olqz4XGPw">塔城市团委、塔城市青年志愿者服务队助力“文明实践 爱在塔城”“3•5”学雷锋文明实践志愿服务启动仪式并开展环境保护志愿服务</a></li>
<li><a href="https://mp.weixin.qq.com/s/y6tRkvajXtC02dayaDwGvQ">万名党员进党校 万名党员讲党课 万名党员进万家┋“情景模拟”进课堂 机关党建提质效</a></li>
<li><a href="https://mp.weixin.qq.com/s/sUq_ogXPGV9Sj3cYk6zQfQ">塔城市团委组织召开2022年塔城市大学生西部计划志愿者考核大会</a></li>
</ul>
<h2 id="性格特点"><a class="markdownIt-Anchor" href="#性格特点"></a> 性格特点</h2>
<ul>
<li>内向，喜欢独处。    <span class="uknowtoomuch" title ="">90%的i和10%的e</span></li>
<li>沉着冷静</li>
<li>独立思考</li>
<li>谦虚谨慎</li>
<li>认真负责</li>
<li>不够自信：    <span class ="uknowtoomuch" title= "唉">底气不足、我知道我不知道</span></li>
</ul>
]]></content>
      <categories>
        <category>不分类</category>
      </categories>
  </entry>
  <entry>
    <title>关于我想物尽其用，在SD卡上安装kali、pe，甚至多系统，并体验kali安装过程而导致电脑引导不符合预期的这样一件事。——应该是这样</title>
    <url>/2021/07/13/%E5%85%B3%E4%BA%8E%E6%88%91%E6%83%B3%E7%89%A9%E5%B0%BD%E5%85%B6%E7%94%A8%EF%BC%8C%E5%9C%A8SD%E5%8D%A1%E4%B8%8A%E5%AE%89%E8%A3%85kali%E3%80%81pe%EF%BC%8C%E7%94%9A%E8%87%B3%E5%A4%9A%E7%B3%BB%E7%BB%9F%EF%BC%8C%E5%B9%B6%E4%BD%93%E9%AA%8Ckali%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E8%80%8C%E5%AF%BC%E8%87%B4%E7%94%B5%E8%84%91%E5%BC%95%E5%AF%BC%E4%B8%8D%E7%AC%A6%E5%90%88%E9%A2%84%E6%9C%9F%E7%9A%84%E8%BF%99%E6%A0%B7%E4%B8%80%E4%BB%B6%E4%BA%8B%E3%80%82%E2%80%94%E2%80%94%E5%BA%94%E8%AF%A5%E6%98%AF%E8%BF%99%E6%A0%B7/</url>
    <content><![CDATA[<p>  刚开时想的是，大家肯定和我一样，勤俭持家。于是，在互联网上搜索一些教程和工具，看有没有傻瓜工具一键完成的。结果没有，而且都很麻烦。印象比较深的有两种方式。一种是通过虚拟机安装kali。不知道为什么，我当时就是不想用，还觉得有点不可靠。第二种方式是先安装kali，然后备份，接着用老毛桃操作，再接着分区工具分20G出来，5G给kali还原用，15G拿来做持久化。我就是因为像大白菜、老毛桃等这些工具不干净，才用的微PE的。</p>
<p>  然后因为教程基本就这些，我就想自己尝试。最初想法是先分好区，然后分别安装。结果一格式化就全盘格式化。GG。</p>
<p>  手机上查查，电脑上查查，找到一个工具——YUMI。这个工具好，比较傻瓜。但还是失败了。怎么失败的忘了，反正就是失败了。</p>
<p>  上厕所的时候，我有发现了一个工具。这个工具堪称神器，简直就是我这种人的福音。这个工具就是ventoy。第一次失败是因为分区的问题，当时没有预留空间，在kali安装分区后就失败了。第二次就搞好了。这个工具对我来说，使用那些不用安装的iso真的很方便。</p>
<p>  kali安装过程中为了搞清楚要有哪些分区的照片。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713195307%E5%A4%A7%E8%87%B4%E5%88%86%E5%8C%BA.jpg" alt="大致分区" title="要有什么分区" /></p>
<p>  最后启动成功的画面照片。我当时超高兴。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713195510kali2021%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F.jpg" alt="kali安装成功" title="启动成功" /></p>
<p>  当然啦，为了确认真的成功了还要方法测试。初步测试还是很成功的，只要拔掉插上再测试一遍就可以的。但是出现想不到的画面了，后来也出现的几次应该都是同一个界面，但还是有点区别。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713200025grub%E7%95%8C%E9%9D%A2.jpg" alt="我不喜欢的界面" title="GRUB" /></p>
<p>  找到的教程里有提到在里不停的找，但我没找到。</p>
<p>  但我再次用读卡器插上SD卡后，有可以进到kali的引导界面（应该是）。这个界面里有<code>Windows Boot Manager</code>和	<code>system setup</code>，我当时还感叹，挺智能的，不错。结果后来就感觉不对了。虽然可以通过<code>Windows Boot Manager</code>到达我以前双系统的选择界面（应该是UEFI的引导吧）。而且都可以成功进入。因此就是不停的进入两个PE、win10、kali和插拔。最后在PE的工具里删除了一些UEFI BOIS启动项。因为通过观察，我感觉有多个引导在起作用。如过没猜错，应该是先启动到kali的，再根据选项启动我以前笔记本启动项。至于为什么敢删，是因为我之前机械硬盘坏了，用过PE，再加上观察类别，还有保存呢。删除后，拔掉SD卡也可以正常进入系统了，SD卡里的PE也可以启动。至于kali没关心了，因为以后肯定重新安装。就算要启动也可以恢复启动项来启动。</p>
<p>  本以为皆大欢喜了，笔记本本身安装的PE没用了，重启也没有系统选择界面，直接就进系统了。通过设置里的高级启动，又可以见到选择界面，但是表面上是PE，但进入后仍是win10。反复进SD卡里的PE检查，想着可能引导坏了，尝试过修复引导，添加过启动项，重新安装过PE都没效果（我又想到应该方法，我观察过efi文件的位置，查阅微PE的资料应该可以通过添加启动项试试。）。最后还发现了两个问题。希望第二个问题是自欺欺人。</p>
<p>  BOIS变了，两个选项不能选，还有一些选项没有了，十分简陋，就连更改启动顺序的也不见了。网络上常见的修改也找不到。</p>
<p>  另外一个就是我尝试再安装PE时发现的。我认为应该是UEFI的。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713201149%E5%90%AF%E5%8A%A8%E7%B1%BB%E5%9E%8B%E4%B8%8D%E6%98%AFUEFI.PNG" alt="启动类型" title="我认为应该是UEFI，后来安慰自己是兼容，两种都有" /></p>
<p>  查阅BOIS的相关教程时，生成的信息图。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713203149cmd%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF.PNG" alt="2021-07-13_130614" /><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713203216winr%E7%94%9F%E6%88%90%E7%9A%84%E4%BF%A1%E6%81%AF.PNG" alt="2021-07-13_183519" /></p>
<p>  我试过刷BOIS，但是找的工具不想。而且也不敢强刷，毕竟笔记本就一个，而且囊中羞涩。保持理性。</p>
<p>  在这次过程中下载的工具。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713203659Sd%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E8%BF%87%E7%9A%84%E5%B7%A5%E5%85%B7.PNG" alt="2021-07-13_203646" title="工具" /></p>
<p>  这过程中浏览的历史。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210713203802SD%E5%8D%A1%E6%B5%8F%E8%A7%88%E5%8E%86%E5%8F%B2.PNG" alt="2021-07-13_183150" title="浏览历史" /></p>
<p>  最后的结果就是双系统的PE找不着，启动不了。SD卡里的PE可以用，kali可以通过手段启动。有失有得。</p>
<blockquote>
<p>祸兮福所倚，福兮祸所伏</p>
</blockquote>
<p>  假如我将我的系统盘里的东西（C盘）复制出来，完整保存注册表和环境变量，然后格了（低格还是什么格）我的固态，在里装上我的系统，最后恢复注册表和环境变量。这样是否可以做到和原先一样，所有软件正常运行，环境也是正确的，安装过的软件也可以在卸载管理里找到？</p>
<p>  注册表里包含环境变量。</p>
<p>  我始终觉得解决这件事理论上应该是一个不难的事，一种直觉。第一步，首先是解决开机见到系统选择界面。于是，我用bcdedit复制了一个，同时，我直接打bcdedit命令看到，看到了pe的path。于是去pe里把UEFI启动项里复制的<code>Windows Boot Manager</code>再次修改了，换成了path位置里的efi文件。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210720200755msconfig%E5%92%8Cbcdedit.PNG" alt="2021-07-20_190200" title="两者不一样" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210720200848%E9%AB%98%E7%BA%A7%E7%B3%BB%E7%BB%9F%E9%87%8C%E7%9A%84%E5%90%AF%E5%8A%A8.PNG" alt="2021-07-20_194107" /></p>
<p>  重启，见到了系统选择界面。点击pe，不是进的pe，而是像重新启动，再次进入系统选择界面。very good。有戏。于是我重新进入win10，安装微pe。我发现启动类型变成UEFI了，非常开心。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210720201247UEFI%E5%90%AF%E5%8A%A8.PNG" alt="2021-07-20_194329" /></p>
<p>  重新安装后，启动，进入pe，ok，启动，进入win10，ok，删除复制的win10，启动，进入pe，ok，启动，进入win10，ok。</p>
<p>  由于之前重新买了u盘，因此SD卡的利用就换了，那就是win to go 和kali to go结合在一起。生命不息，折腾不止。最后就只剩文中提到的问题了。</p>
]]></content>
      <categories>
        <category>记录</category>
        <category>这是失败记录吗？</category>
      </categories>
      <tags>
        <tag>T6Ti-X7</tag>
        <tag>kali</tag>
        <tag>PE</tag>
        <tag>bois</tag>
        <tag>u盘</tag>
      </tags>
  </entry>
  <entry>
    <title>为备用手机实现短信转发</title>
    <url>/2024/01/12/%E4%B8%BA%E5%A4%87%E7%94%A8%E6%89%8B%E6%9C%BA%E5%AE%9E%E7%8E%B0%E7%9F%AD%E4%BF%A1%E8%BD%AC%E5%8F%91/</url>
    <content><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2>
<p>  很久很久以前，我买了第一台智能手机——至尊宝☎️，后来我买了人生中第一台红米手机——红米note增强版。不知什么时候，我有了两张手机卡，一张专门用来接收信息。为了不多带手机，我使用了绿芽短信转发🍃（当时应该root了）。虽然可以免费使用，但渐渐的就不符合我的要求了。后来接触到Tasker这款软件，这款软件能力强大。我用它实现短信转发，甚至还能进行一定的交互。后来，在xp框架时代，有一款插件Xposed edge pro，它也可以自动化，但我一般都是放在主力机上用。后来，我遇到一款更优秀的自动软件MacroDroid，我用它也实现了，但手机刷机忘记保存了。最近我又把它实现了。</p>
<h2 id="无root方案"><a class="markdownIt-Anchor" href="#无root方案"></a> 无root方案</h2>
<p>  免root玩机，我了解比较少，我还是喜欢root后做手机的主人。因此简单提一下思路。</p>
<ul>
<li>实现短信应用，将默认短信应用替换为你实现的短信</li>
<li>短信转发软件，比如绿芽。（不知现在还能不能免费使用）</li>
<li>读取短信内容应该用不到root，因此一些自动化软件也可以实现。</li>
</ul>
<h2 id="root方案"><a class="markdownIt-Anchor" href="#root方案"></a> root方案</h2>
<p>  显然，我要使用MacroDroid这款软件。当然“免费”使用这款软件会有一丝丝不稳定，以及一小部分功能不能正常使用。</p>
<h3 id="门槛"><a class="markdownIt-Anchor" href="#门槛"></a> 门槛</h3>
<p>  显然，你要让你的手机有root权限。当然如果没有，也可以试试，毕竟还有无障碍在那摆着。为了更好的使用MacroDroid，你还要达成以下要求：</p>
<ul>
<li>保活：保证MacroDroid能后台运行，不被省电优化，能自动重启</li>
<li>权限给足</li>
<li>开机自启</li>
<li>无障碍不能掉（MacroDroid自身能保持，但有时侯呢）</li>
</ul>
<h3 id="第一步下载"><a class="markdownIt-Anchor" href="#第一步下载"></a> 第一步：下载</h3>
<p>  MacroDroid这个软件肯定要下载，然后我们初步计划是将短信转发到邮箱，因此还要下载一个邮件插件mailtask。虽然MacroDroid这个软件本身有发邮件的功能，但是你是“免费”使用的，所以用不了。</p>
<p>  很明显，你没有看到下载链接。因此你需要自己去下载。</p>
<h3 id="第二步可去步骤屏幕解锁"><a class="markdownIt-Anchor" href="#第二步可去步骤屏幕解锁"></a> 第二步：可去步骤：屏幕解锁</h3>
<p>  屏幕解锁这个功能主要是为了能够实现更多需要屏幕点击或读取的功能。虽然这类自动化软件或插件有屏幕解锁的功能，但一般不一定能成功执行，而且要么要求没有密码或者要求密码只能是文本密码，所以我们自行实现一个。为了实现屏幕解锁，我对屏幕解锁的过程进行分析：</p>
<ol>
<li>屏幕点亮</li>
<li>上滑或其他进入到密码输入界面的步骤</li>
<li>密码输入：文本密码可以尝试使用<code>input</code>命令，图案密码可以使用<code>swipe</code>命令或者使用手势</li>
</ol>
<p>  以我的手机为例，我没有设置密码。我们对我的手机解锁屏幕的流程进行分析：</p>
<div class = "left_right"><div class = "left" style = "max-width: 25%;min-width: 20%;"><pre class="mermaid">graph TD
a[start]-->b("屏幕点亮")-->c{"是否锁屏"}--yes-->d("解锁屏幕")-->e
c--no-->e[end]</pre>
</div><div class = "right" style = "max-width: auto;min-width: auto;"><p>  对屏幕是否已经亮屏，我们不用考虑。因为我们最终都是要亮屏的，因此第一步是点亮屏幕。第二步是判断是否锁屏。第三步是解锁屏幕。</p>
<p><img data-src="https://s2.loli.net/2024/01/13/sxa45iADWcPptuh.png" alt="解锁屏幕" /></p>
<p>  <code>屏幕开</code>是自带的，用来点亮屏幕。等待是因为我后面借助的模拟滑动进行解锁的，当然你可以借助<code>auto</code>类插件来解锁无密码锁屏，自带的不是很好用。条件判断是因为有时候没有锁屏。<code>设备锁定</code>条件是自带的。其中的动作块是我单独抽取出来复用的，这个<code>上滑半屏</code>是动作块的名称，内部是用的界面交互-手势【250毫秒：540，1920-&gt;540，1020】，你自己设置就行了，坐标可以打开手机设置里的开发者选项的指针位置获得，当然你也可以使用shell命令<code>swipe</code>。</p>
</div></div>
<h3 id="第三步可去步骤字符串匹配"><a class="markdownIt-Anchor" href="#第三步可去步骤字符串匹配"></a> 第三步：可去步骤：字符串匹配</h3>
<p>  我计划的功能中有对短信内容的判断，所以要有这个功能。关于字符串匹配的算法有许多，比如著名的KMP算法，也可以使用正则表达式。我比较喜欢正则表达式。</p>
<div class = "left_right"><div class = "left" style = "max-width: 50%;min-width: auto;"><img data-src="https://s2.loli.net/2024/01/13/gjBOHLCqEwSsVTi.png" alt="字符串匹配" style="zoom:50%;" />
</div><div class = "right" style = "max-width: auto;min-width: auto;"><p>  这个比较简单就没有流程图了。当然，有经验的人看到这张图片时，会脑淤血，因为看起来像是脱裤子放屁。其实是这样的，它没有单个动作是用来判断并赋值的。这个<code>源串</code>是用来被匹配的，长度比较长。<code>子串</code>相当于关键字，是用来匹配的。可以看到，图中<code>字串</code>的默认值有竖线，这是用来分割的，方便多匹配。条件是用的变量-包括，启用正则表达式匹配和不区分大小写。记得将结果返回。</p>
</div></div>
<h3 id="第四步可去步骤一维数组包含"><a class="markdownIt-Anchor" href="#第四步可去步骤一维数组包含"></a> 第四步：可去步骤：一维数组包含</h3>
<p>  我设想的功能里需对短信的发送者号码进行判断。我的电话号码不是有序的，所以采用遍历所有的方式。</p>
<div class = "left_right"><div class = "left" style = "max-width: 50%;min-width: auto;"><img data-src="https://s2.loli.net/2024/01/14/DTb1e6Qjmfa9Ed2.png" alt="一维数组包含" style="zoom:50%;" />
</div><div class = "right" style = "max-width: auto;min-width: auto;"><p>  如果用其他循环涉及次数或条件判断，不太方便。使用迭代比较方便，不过不清楚对数组的修改会不会出问题。不管，我们现在只是读。同样，用<code>关键字</code>和<code>迭代值</code>进行比较，然后根据分支设置输出结果。</p>
</div></div>
<h3 id="第五步可去步骤附加信息"><a class="markdownIt-Anchor" href="#第五步可去步骤附加信息"></a> 第五步：可去步骤：附加信息</h3>
<p>  我的手机我要尽可能了解，所以要将手机的信息进行更新。</p>
<div class = "left_right"><div class = "left" style = "max-width: 50%;min-width: auto;"><img data-src="https://s2.loli.net/2024/01/14/elGIfbMX28AhvWd.png" alt="定时更新" style="zoom:50%;" />
</div><div class = "right" style = "max-width: auto;min-width: auto;"><p>  这是一个宏，名称是定时更新。触发器使用固定时间间隔，间隔时间的2小时9分。动作目前就一个，是对一个全局变量<code>全局_附加内容</code>进行设置。内容如下：是个html表格</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>附加信息<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>更新时间： <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;year&#125;年&#123;month_digit&#125;月&#123;dayofmonth&#125;日 &#123;hour&#125;:&#123;minute&#125;:&#123;second&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>当前应用：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>名称：&#123;fg_app_name&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span>包名：&#123;fg_app_package&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>当前亮度：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;current_brightness&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>当前音量：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;vol_music&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>当前电量： <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;battery&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>当前温度：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;battery_temp&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>是否充电：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;power&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>连接类型：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;cell_connection_type&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span> 基站信号强度：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;cell_signal_strength&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>ip、ipv6<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;ip&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span>&#123;ip6&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>WiFi：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;ssid&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>WiFi强度：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;wifi_strength&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>位置：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;last_loc_latlong&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span>&#123;last_loc_link&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>设备运行时间：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;uptime&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>可用运存：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;ram_available&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>可用内存：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;storage_internal_free&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
</div></div>
<h3 id="第六步必要步骤邮件发送"><a class="markdownIt-Anchor" href="#第六步必要步骤邮件发送"></a> 第六步：必要步骤：邮件发送</h3>
<p>  MacroDroid本身就有邮件发送功能，一个是gmail，另一个是SMTP。但是，我们是<code>免费</code>使用的，所以要借助插件MailTask。安卓低版本还可以使用SendsilentMail。</p>
<p>  我们使用MailTask，当然，下载、权限设置和保活交给你。</p>
<p>  要进行邮件发送，需要一个邮箱，我使用QQ邮箱。进入网页版QQ邮箱-设置-账号-开启<strong>POP3/IMAP/SMTP/</strong>-获取授权码，然后在Mailtask里配置SMTP。</p>
<img data-src="https://s2.loli.net/2024/01/14/5iZXKkxyt3LIUQu.png" alt="MailTask配置" style="zoom:50%;" />
<p>  其实到这里，简单的邮件转发就已经可以轻轻松松实现了。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/FM57lNLDBdHR2zO.png" alt="短信转发宏" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/VIOxFtLHNlUYs6y.png" alt="邮件发送" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/BzjQvYZ2EULH6co.png" alt="邮件转发配置" style="zoom:33%;" /></div></div></div>
<h3 id="第七步功能设计"><a class="markdownIt-Anchor" href="#第七步功能设计"></a> 第七步：功能设计</h3>
<p>  单单一个短信转发，对我来说是不够的。</p>
<ul>
<li>短信转发
<ul>
<li>重要转发
<ul>
<li>转发到邮件</li>
<li>（暂未实现）转发到qq、微信、钉钉等社交软件</li>
<li>（不打算，有点多花钱）转发到短信</li>
</ul>
</li>
<li>不重要转发
<ul>
<li>转发到邮件</li>
<li>（暂未实现）转发到qq、微信、钉钉等社交软件</li>
<li>（不打算，有点多花钱）转发到短信</li>
</ul>
</li>
</ul>
</li>
<li>短信指令
<ul>
<li>中文指令</li>
<li>非中文指令：默认shell</li>
</ul>
</li>
<li>短信已读</li>
</ul>
<h3 id="第八步流程设计"><a class="markdownIt-Anchor" href="#第八步流程设计"></a> 第八步：流程设计</h3>
<pre class="mermaid">graph LR
start(start) --> a{是否是短信命令} --yes-->cc{号码判断} --可执行--> c[指令取出] --> d[指令识别] --> e[指令执行]-->eed[短信已读]-->en(end)
cc --不可执行-->eed
a --no-->f{短信重要性判断} --yes-->g[邮件发送]-->eed
f --no-->h{短信数量} --=10-->gg[邮件发送]-->ii[相关变量重置]-->eed
h --!=10--> i[短信追加] --> j[计数增加]-->h</pre>
<h3 id="第九步变量设计"><a class="markdownIt-Anchor" href="#第九步变量设计"></a> 第九步：变量设计</h3>
<p>  本来想一边讲搭建一边讲需要的变量，但我害怕你搞混。</p>
<ul>
<li>
<p>全局变量设计</p>
<table>
<thead>
<tr>
<th style="text-align:center">变量名</th>
<th style="text-align:center">类型</th>
<th style="text-align:center">默认值or建议值</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">全局_附加内容</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">无</td>
<td style="text-align:center">每次发送时附加的内容，值为第五步的html代码</td>
</tr>
<tr>
<td style="text-align:center">全局_可执行号码</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">无</td>
<td style="text-align:center">可以执行短信命令的号码集合</td>
</tr>
<tr>
<td style="text-align:center">全局_重要号码</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">无</td>
<td style="text-align:center">重要短信号码集合</td>
</tr>
<tr>
<td style="text-align:center">全局_重要号码关键字</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">验证码|校验码|授权码|密码|账单|余额|随机码|取件码|出库码|取货码|提货码|代码|激活码|姓名|姓先生|身份证号|考生|考试|电力|退款|还款|菜鸟驿站|取件|快递</td>
<td style="text-align:center">当短信内容里有这些关键字时，该短信为重要短信</td>
</tr>
<tr>
<td style="text-align:center">全局_主人号码</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">无</td>
<td style="text-align:center">主人的号码，未使用留以后扩展</td>
</tr>
</tbody>
</table>
<p>注意，全局变量尽量不修改。你可以将短信转发宏看作是一个个进程，而这些全局变量相当于临界资源。当然你要修改也可以，不过要使得每次宏运行修改变量的概率非常低。</p>
</li>
<li>
<p>局部变量设计</p>
<table>
<thead>
<tr>
<th style="text-align:center">变量名</th>
<th style="text-align:center">类型</th>
<th style="text-align:center">默认值</th>
<th style="text-align:center">是否保持不变</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">不重要短信串</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">无</td>
<td style="text-align:center">否</td>
<td style="text-align:center">不重要短信的集合</td>
</tr>
<tr>
<td style="text-align:center">不重要短信计数</td>
<td style="text-align:center">整数</td>
<td style="text-align:center">0</td>
<td style="text-align:center">否</td>
<td style="text-align:center">对不重要短信进行计数</td>
</tr>
<tr>
<td style="text-align:center">短信分割线</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center"><code>&lt;br/&gt;&lt;hr/&gt;&lt;br/&gt;</code></td>
<td style="text-align:center">是</td>
<td style="text-align:center">不重要短信追加时添加分割线</td>
</tr>
<tr>
<td style="text-align:center">短信内容是否包含关键字</td>
<td style="text-align:center">布尔</td>
<td style="text-align:center">False</td>
<td style="text-align:center">否</td>
<td style="text-align:center">判断短信重要性的一部分</td>
</tr>
<tr>
<td style="text-align:center">发送者号码是否重要</td>
<td style="text-align:center">布尔</td>
<td style="text-align:center">False</td>
<td style="text-align:center">否</td>
<td style="text-align:center">判断短信重要性的一部分</td>
</tr>
<tr>
<td style="text-align:center">附加发送者短信</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">无</td>
<td style="text-align:center">否</td>
<td style="text-align:center">给短信添加发送者信息</td>
</tr>
<tr>
<td style="text-align:center">是否是可执行号码</td>
<td style="text-align:center">布尔</td>
<td style="text-align:center">False</td>
<td style="text-align:center">否</td>
<td style="text-align:center">判断指令短信的一部分</td>
</tr>
<tr>
<td style="text-align:center">是否为指令短信</td>
<td style="text-align:center">布尔</td>
<td style="text-align:center">False</td>
<td style="text-align:center">否</td>
<td style="text-align:center">判断指令短信的一部分</td>
</tr>
<tr>
<td style="text-align:center">是否为中文指令</td>
<td style="text-align:center">布尔</td>
<td style="text-align:center">False</td>
<td style="text-align:center">否</td>
<td style="text-align:center">用来指令短信分类</td>
</tr>
<tr>
<td style="text-align:center">输入指令头</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center"><code>execm</code></td>
<td style="text-align:center">是</td>
<td style="text-align:center">指令有输入参数标记</td>
</tr>
<tr>
<td style="text-align:center">无输入指令头</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center"><code>execs</code></td>
<td style="text-align:center">是</td>
<td style="text-align:center">指令没有输入参数标记</td>
</tr>
<tr>
<td style="text-align:center">邮件接收者</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center">邮箱</td>
<td style="text-align:center">是</td>
<td style="text-align:center">接收转发的邮箱</td>
</tr>
<tr>
<td style="text-align:center">指令标记</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center"><code>exec</code></td>
<td style="text-align:center">是</td>
<td style="text-align:center">有该标记的短信为指令短信</td>
</tr>
<tr>
<td style="text-align:center">指令分隔符</td>
<td style="text-align:center">字符串</td>
<td style="text-align:center"><code>\</code></td>
<td style="text-align:center">是</td>
<td style="text-align:center">用分割指令和参数</td>
</tr>
<tr>
<td style="text-align:center">指令条数组</td>
<td style="text-align:center">数组</td>
<td style="text-align:center">无</td>
<td style="text-align:center">否</td>
<td style="text-align:center">指令短信中的每行指令</td>
</tr>
<tr>
<td style="text-align:center">指令条</td>
<td style="text-align:center">数组</td>
<td style="text-align:center">无</td>
<td style="text-align:center">否</td>
<td style="text-align:center">每行指令用分割符分割后得到的数组</td>
</tr>
<tr>
<td style="text-align:center">中文指令级</td>
<td style="text-align:center">数组</td>
<td style="text-align:center">无</td>
<td style="text-align:center">是</td>
<td style="text-align:center">你有说明中文指令就追加什么</td>
</tr>
</tbody>
</table>
<p>这个保持不变的意思是宏不能修改它，只有你可以修改，或者是发送命令让它修改。每个变量有什么用，什么类型都列清楚了，你可以仔细观看。</p>
</li>
</ul>
<h3 id="第十步成品看图"><a class="markdownIt-Anchor" href="#第十步成品看图"></a> 第十步：成品：看图</h3>
<p>  附加发送者短信变量设置为：<code>发送者名称：&#123;sms_name&#125;&lt;br/&gt;发送者号码：&#123;sms_number&#125;&lt;br/&gt;时间：&#123;year&#125;-&#123;month_digit&#125;-&#123;dayofmonth&#125; &#123;hour&#125;:&#123;minute&#125;:&#123;second&#125;&lt;br/&gt;内容：&#123;sms_message&#125;</code>，文件没写时间，自己添加。重要短信邮件转发内容设置为：<code>&#123;lv=附加发送者短信&#125;&lt;br/&gt;&lt;br/&gt;&#123;v=全局_附加内容&#125;</code>，非重要短信邮件转发内容设置为：<code>&#123;lv=不重要短信串&#125;&#123;lv=短信分割线&#125;(&#123;lv=不重要短信计数&#125;)&#123;lv=附加发送者短信&#125;</code>。</p>
<p>  短信已读功能在各个手机表现一样，看自己手机情况设置。这里的原理是短信到来时显示通知，通知有标记已读的按钮，可以点击实现已读。但是MacroDroid似乎读不到通知按钮的文字。</p>
<p>  实现短信已读的最好方式就是修改短信数据库，用sqllite就行。但是我手机版本高，修改不成功。</p>
<p>  我这里的屏幕解锁涉及屏幕分辨率，大家根据自己的手机自己调整。</p>
<p><img data-src="https://s2.loli.net/2024/01/15/KfHLlse6tMEn1qy.png" alt="短信转发宏截屏" /></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/qYus85WXiN1VRUj.jpg" alt="1判断指令短信" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/zU3wPDWdCjxVQyE.jpg" alt="2判读执行号码" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/zI19Rorkf8Zt4qA.jpg" alt="3指令短信条件" style="zoom:33%;" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/7mDNdf3G5kntKPQ.jpg" alt="4指令条数组" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/Me53LawYhNF2vJG.jpg" alt="5指令拆分" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/pTY1gQwrybHqVWh.jpg" alt="6指令中文判断" style="zoom:33%;" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/n4a1SOK3vktbzE5.jpg" alt="7shell脚本" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/bR8a4CGqyvFx3sj.jpg" alt="8命令短信转发" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/nKDZWLU3b9A6jF5.jpg" alt="9判断重要号码" style="zoom:33%;" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/xcYXG61am7DWzv3.jpg" alt="11判断重要关键字" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/dtbgCVlZ7FfKcLP.jpg" alt="12重要短信条件" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/MV4tWpnENhjySH5.jpg" alt="13重要短信转发" style="zoom:33%;" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/lGPotqfQRypWDTL.jpg" alt="14非重要短信转发" style="zoom:33%;" /></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/01/15/ifXWNEnF8mkIuMa.jpg" alt="15短信已读" style="zoom:33%;" /></div></div></div>
<h3 id="导出"><a class="markdownIt-Anchor" href="#导出"></a> 导出</h3>
<p>  我用的宏导出来了，但是有可能需要补充动作块，补充全局变量，修改部分值。复制后粘贴到文件里，命名后缀<code>.macro</code></p>
<div class="hbe hbe-container" name ="QA"  id =QA312QA312 answer="5,五,5个,五个" data-wpm="您输入的内容与预期不符，请重试。" data-whm="尽管您输入的内容与预期不符，但还是可以阅读。">
<div class="hbe hbe-content">
<div class="hbe hbe-input hbe-input-flip" style="display: flex!important;flex-direction: row!important;">
<input class="hbe hbe-input-field hbe-input-field-flip" type="text" id="mQ286" name = "mQ">
<label class="hbe hbe-input-label hbe-input-label-flip" for="mQ">
<span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入本文最终的短信转发宏中“如果”的个数解锁内容。">请输入本文最终的短信转发宏中“如果”的个数解锁内容。</span>
</label>
<button type="submit" class="primary wl-btn" style="border-left-width: 1px;margin-left: 10px;" onclick='QA(document.getElementById("QA312QA312"));'>确定</button>
</div>
</div>
</div>
<div id=QA312 style="display: none;"><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;disabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;exportedActionBlocks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;isInputExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isOutputExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isTestMode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;disabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;exportedActionBlocks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;forceEvenIfNotEnabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlock&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isBeingImported&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isClonedInstance&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isExtra&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isFavourite&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;lastEditedTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">1704941962516</span><span class="punctuation">,</span> <span class="attr">&quot;localVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;子串&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;验证码|授权码|code|验证码&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;源串&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code25验证码35授权码88&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;匹配结果&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_GUID&quot;</span><span class="punctuation">:</span> <span class="number">-5536193167288693000</span><span class="punctuation">,</span> <span class="attr">&quot;m_actionList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-9046249293458778000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=子串&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;源串&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code25验证码35授权码88&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8840312658536790000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;匹配结果&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7530913373200241000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;cancelPrevious&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_backgroundColor&quot;</span><span class="punctuation">:</span> <span class="number">-14606047</span><span class="punctuation">,</span> <span class="attr">&quot;m_displayIcon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_duration&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_horizontalPosition&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_imageName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launcher_no_border&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_imagePackageName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.arlosoft.macrodroid&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_imageResourceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launcher_no_border&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_messageText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;匹配&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_position&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_textColor&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_tintIcon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;maintainSpaces&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;useTextOnly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7300299722515066000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ToastAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8956888298027064000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ElseAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;cancelPrevious&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_backgroundColor&quot;</span><span class="punctuation">:</span> <span class="number">-14606047</span><span class="punctuation">,</span> <span class="attr">&quot;m_displayIcon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_duration&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_horizontalPosition&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_imageName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launcher_no_border&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_imagePackageName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.arlosoft.macrodroid&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_imageResourceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launcher_no_border&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_messageText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不匹配&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_position&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_textColor&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_tintIcon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;maintainSpaces&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;useTextOnly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7862503410463948000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ToastAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;匹配结果&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-9017735428511865000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5233551833807687000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndIfAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;未分类&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_descriptionOpen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_excludeLog&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_headingColor&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;字符串匹配&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_triggerList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;isInputExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isOutputExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isTestMode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;disabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;exportedActionBlocks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;forceEvenIfNotEnabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlock&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isBeingImported&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isClonedInstance&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isExtra&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isFavourite&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;lastEditedTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">1704805128353</span><span class="punctuation">,</span> <span class="attr">&quot;localVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;textValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;parentKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;0&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;StringValue&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DictionaryEntry&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;textValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abc&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;parentKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;1&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;StringValue&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DictionaryEntry&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;textValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1a2v&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;parentKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;2&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;StringValue&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DictionaryEntry&quot;</span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;源数组&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;关键字&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;12&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否包含关键字&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_GUID&quot;</span><span class="punctuation">:</span> <span class="number">-7257274351441456000</span><span class="punctuation">,</span> <span class="attr">&quot;m_actionList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;源数组&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_fixedOptionCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_option&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8848855769057710000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IterateDictionaryAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8451034540660343000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;comparisonType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;ignoreCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;option&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;value1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;iterator_value&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;value2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=关键字&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-4658158072136790000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CompareValueConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否包含关键字&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8605176906399983000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8560671674146215000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndIfAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5820083889709677000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndLoopAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;未分类&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_descriptionOpen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_excludeLog&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_headingColor&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;一维数组包含&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_triggerList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;isInputExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isOutputExpanded&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isTestMode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;disabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;exportedActionBlocks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;forceEvenIfNotEnabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlock&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;isBeingImported&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isClonedInstance&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isExtra&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isFavourite&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;lastEditedTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">1704797120481</span><span class="punctuation">,</span> <span class="attr">&quot;localVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;给谁&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxxxxxxxx@qq.com&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;抄送&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;隐密抄送&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主题&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中文测试&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;内容&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test，&lt;br&gt;，23 &#123;lv=附件&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;附件&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_GUID&quot;</span><span class="punctuation">:</span> <span class="number">-8573632407905576000</span><span class="punctuation">,</span> <span class="attr">&quot;m_actionList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;arrayHandlingOption&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;blockActions&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_plugin&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;mActivityClassName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.balda.mailtask.ui.FireSendMail&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;mConfiguration&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;mAlternatives&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;mIsBackwardsCompatibilityEnabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;mIsBlacklisted&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;mIsBuggy&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;mIsDisruptsConnectivity&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;mIsDrainsBattery&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;mIsRequiresConnectivity&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;mPackageName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.balda.mailtask&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;mReceiverClassName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.balda.mailtask.receivers.FireReceiver&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;mRegistryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.balda.mailtask:com.balda.mailtask.ui.FireSendMail&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;mType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SETTING&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;mVersionCode&quot;</span><span class="punctuation">:</span> <span class="number">88</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_pluginInstanceData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;mBlurb&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Send email from xxxxxxxxxxx@qq.com to %给谁&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;mRegistryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.balda.mailtask:com.balda.mailtask.ui.FireSendMail&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;mSerializedBundle&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="number">-84</span><span class="punctuation">,</span> <span class="number">-19</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">12</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">31</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">85</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">17</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">55</span><span class="punctuation">,</span> <span class="number">49</span><span class="punctuation">,</span> <span class="number">53</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">54</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">54</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">64</span><span class="punctuation">,</span> <span class="number">113</span><span class="punctuation">,</span> <span class="number">113</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">27</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">66</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">13</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">-23</span><span class="punctuation">,</span> <span class="number">-102</span><span class="punctuation">,</span> <span class="number">-112</span><span class="punctuation">,</span> <span class="number">-27</span><span class="punctuation">,</span> <span class="number">-81</span><span class="punctuation">,</span> <span class="number">-122</span><span class="punctuation">,</span> <span class="number">-26</span><span class="punctuation">,</span> <span class="number">-118</span><span class="punctuation">,</span> <span class="number">-124</span><span class="punctuation">,</span> <span class="number">-23</span><span class="punctuation">,</span> <span class="number">-128</span><span class="punctuation">,</span> <span class="number">-127</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">26</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">7</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">-26</span><span class="punctuation">,</span> <span class="number">-118</span><span class="punctuation">,</span> <span class="number">-124</span><span class="punctuation">,</span> <span class="number">-23</span><span class="punctuation">,</span> <span class="number">-128</span><span class="punctuation">,</span> <span class="number">-127</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">33</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">72</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">77</span><span class="punctuation">,</span> <span class="number">76</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">17</span><span class="punctuation">,</span> <span class="number">106</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">118</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">103</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">66</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">-51</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">-128</span><span class="punctuation">,</span> <span class="number">-43</span><span class="punctuation">,</span> <span class="number">-100</span><span class="punctuation">,</span> <span class="number">-6</span><span class="punctuation">,</span> <span class="number">-18</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">118</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">117</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">112</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">28</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">77</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">113</span><span class="punctuation">,</span> <span class="number">113</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">28</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">7</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">-27</span><span class="punctuation">,</span> <span class="number">-122</span><span class="punctuation">,</span> <span class="number">-123</span><span class="punctuation">,</span> <span class="number">-27</span><span class="punctuation">,</span> <span class="number">-82</span><span class="punctuation">,</span> <span class="number">-71</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">36</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">68</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">7</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">-25</span><span class="punctuation">,</span> <span class="number">-69</span><span class="punctuation">,</span> <span class="number">-103</span><span class="punctuation">,</span> <span class="number">-24</span><span class="punctuation">,</span> <span class="number">-80</span><span class="punctuation">,</span> <span class="number">-127</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">41</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">70</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">76</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">72</span><span class="punctuation">,</span> <span class="number">77</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">58</span><span class="punctuation">,</span> <span class="number">47</span><span class="punctuation">,</span> <span class="number">47</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">103</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">117</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">47</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">117</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">47</span><span class="punctuation">,</span> <span class="number">112</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">121</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">51</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">50</span><span class="punctuation">,</span> <span class="number">70</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">-23</span><span class="punctuation">,</span> <span class="number">-103</span><span class="punctuation">,</span> <span class="number">-124</span><span class="punctuation">,</span> <span class="number">-28</span><span class="punctuation">,</span> <span class="number">-69</span><span class="punctuation">,</span> <span class="number">-74</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">38</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">72</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">71</span><span class="punctuation">,</span> <span class="number">72</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">89</span><span class="punctuation">,</span> <span class="number">113</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">126</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">41</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">86</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">68</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">17</span><span class="punctuation">,</span> <span class="number">106</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">118</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">103</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">103</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">18</span><span class="punctuation">,</span> <span class="number">-30</span><span class="punctuation">,</span> <span class="number">-96</span><span class="punctuation">,</span> <span class="number">-92</span><span class="punctuation">,</span> <span class="number">-9</span><span class="punctuation">,</span> <span class="number">-127</span><span class="punctuation">,</span> <span class="number">-121</span><span class="punctuation">,</span> <span class="number">56</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">118</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">117</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">16</span><span class="punctuation">,</span> <span class="number">106</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">118</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">103</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">117</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">-122</span><span class="punctuation">,</span> <span class="number">-84</span><span class="punctuation">,</span> <span class="number">-107</span><span class="punctuation">,</span> <span class="number">29</span><span class="punctuation">,</span> <span class="number">11</span><span class="punctuation">,</span> <span class="number">-108</span><span class="punctuation">,</span> <span class="number">-32</span><span class="punctuation">,</span> <span class="number">-117</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">112</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">34</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">113</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">126</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">19</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">42</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">68</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">70</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">77</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">113</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">126</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">7</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">85</span><span class="punctuation">,</span> <span class="number">66</span><span class="punctuation">,</span> <span class="number">74</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">7</span><span class="punctuation">,</span> <span class="number">37</span><span class="punctuation">,</span> <span class="number">-28</span><span class="punctuation">,</span> <span class="number">-72</span><span class="punctuation">,</span> <span class="number">-69</span><span class="punctuation">,</span> <span class="number">-23</span><span class="punctuation">,</span> <span class="number">-94</span><span class="punctuation">,</span> <span class="number">-104</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">57</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">103</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">104</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">110</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">86</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">66</span><span class="punctuation">,</span> <span class="number">76</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">,</span> <span class="number">76</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">75</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">89</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">68</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">,</span> <span class="number">85</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">85</span><span class="punctuation">,</span> <span class="number">66</span><span class="punctuation">,</span> <span class="number">74</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">70</span><span class="punctuation">,</span> <span class="number">73</span><span class="punctuation">,</span> <span class="number">76</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">95</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">65</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">72</span><span class="punctuation">,</span> <span class="number">77</span><span class="punctuation">,</span> <span class="number">69</span><span class="punctuation">,</span> <span class="number">78</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">66</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">67</span><span class="punctuation">,</span> <span class="number">32</span><span class="punctuation">,</span> <span class="number">99</span><span class="punctuation">,</span> <span class="number">111</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">98</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">109</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">105</span><span class="punctuation">,</span> <span class="number">108</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">115</span><span class="punctuation">,</span> <span class="number">107</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">101</span><span class="punctuation">,</span> <span class="number">120</span><span class="punctuation">,</span> <span class="number">116</span><span class="punctuation">,</span> <span class="number">114</span><span class="punctuation">,</span> <span class="number">97</span><span class="punctuation">,</span> <span class="number">46</span><span class="punctuation">,</span> <span class="number">83</span><span class="punctuation">,</span> <span class="number">77</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">,</span> <span class="number">119</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;mType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SETTING&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_variableMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5190620161472342000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LocalePluginAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;未分类&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_descriptionOpen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_excludeLog&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_headingColor&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送邮件mailtask&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_triggerList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;forceEvenIfNotEnabledTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlock&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isBeingImported&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isClonedInstance&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isExtra&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isFavourite&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;lastEditedTimestamp&quot;</span><span class="punctuation">:</span> <span class="number">1705172830852</span><span class="punctuation">,</span> <span class="attr">&quot;localVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;邮件接收者&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxxxxxxxx@qq.com&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;附加发送者短信&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送者号码是否重要&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信内容是否包含关键字&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令标记&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;exec&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令分割符&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\\&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否为指令短信&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信串&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信分割线&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无输入指令头&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;execs&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;输入指令头&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;execm&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条数组&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中文指令集&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否为中文指令&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否是可执行号码&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_GUID&quot;</span><span class="punctuation">:</span> <span class="number">-5329546518234248000</span><span class="punctuation">,</span> <span class="attr">&quot;m_actionList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-5536193167288693000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;字符串匹配&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;子串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=指令标记&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;源串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;sms_message&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;匹配结果&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否为指令短信&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-4833910477727838000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;判断是否为指令短信&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-5536193167288693000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;字符串匹配&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;子串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;sms_number&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;源串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;v=全局_可执行号码&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;匹配结果&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否是可执行号码&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7328360522928207000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信号码是否可执行&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6089816614380744000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令短信代码段，格式：execs或m\\功能\\输入&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_childConstraints&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_otherValueToCompare&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否为指令短信&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5079423697589202000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_otherValueToCompare&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否是可执行号码&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7230994532863608000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_option&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7026845108833014000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LogicConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_option&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span> <span class="attr">&quot;m_text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;sms_message&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_textManipulation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SplitManipulation&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;\\n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;0&quot;</span> <span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条数组&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7235570925026366000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TextManipulationAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;拆分为指令条数组&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条数组&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_fixedOptionCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_option&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8073279560617630000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IterateDictionaryAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_option&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span> <span class="attr">&quot;m_text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;iterator_value&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_textManipulation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SplitManipulation&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;&#123;lv=指令分割符&#125;&quot;</span><span class="punctuation">,</span> <span class="string">&quot;0&quot;</span> <span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;varDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-4773984684786054000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TextManipulationAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条拆分为数组&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7930097662074029000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;0&quot;</span> <span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_otherValueToCompare&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=无输入指令头&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5798312705984921000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-7257274351441456000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;一维数组包含&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;源数组&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;源数组&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中文指令集&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;关键字&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=指令条[1]&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;是否包含关键字&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否为中文指令&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6045175892137476000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;判断是否为中文指令&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6368351491393155000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中文指令&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_otherValueToCompare&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;是否为中文指令&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;workingOtherVarToCompare&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7441095254249290000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-4614662675234850000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EmptyAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7822687180267180000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ElseAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;非中文指令，adb shell&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;blockNextAction&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_nonRoot&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_script&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=指令条[1]&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;timeoutSeconds&quot;</span><span class="punctuation">:</span> <span class="number">600</span><span class="punctuation">,</span> <span class="attr">&quot;useHelper&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8825660648189414000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ShellScriptAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7008432966259587000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndIfAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6655597950023365000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ElseIfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;0&quot;</span> <span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_otherValueToCompare&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=输入指令头&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;指令条&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6217879482775378000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8660065844006563000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EmptyAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8174128169615601000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndIfAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6953300528749259000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndLoopAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-8573632407905576000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送邮件mailtask&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;给谁&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=邮件接收者&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;主题&quot;</span><span class="punctuation">:</span> <span class="string">&quot;命令短信转发&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;内容&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;sms_message&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6906191873418650000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;表明收到指令并执行了宏&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7573581641088925000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ElseAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;非指令短信代码段&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newStringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送者名称：&#123;sms_name&#125;&lt;br&gt;发送者号码：&#123;sms_number&#125;&lt;br&gt;内容：&#123;sms_message&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;附加发送者短信&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7700970024336643000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;给短信添加发送者信息&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-5536193167288693000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;字符串匹配&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;子串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;sms_number&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;源串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;v=全局_重要号码&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;匹配结果&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送者号码是否重要&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-9022646809174659000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;判断发送者号码是否重要&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-5536193167288693000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;字符串匹配&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;子串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;v=全局_重要内容关键字&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;源串&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;sms_message&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;匹配结果&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信内容是否包含关键字&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7835154944568871000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;判断短信内容是否包含关键字&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7109438691925108000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信重要代码段&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_childConstraints&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送者号码是否重要&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7620102650963953000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信内容是否包含关键字&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8862132488025402000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_option&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-4653442558677074000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LogicConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-8573632407905576000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送邮件mailtask&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;给谁&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=邮件接收者&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;主题&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信转发&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;内容&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=附加发送者短信&#125;&lt;br&gt;&lt;br&gt;&#123;v=全局_附加内容&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7517625001536310000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5039491284673452000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ElseAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信不重要代码段&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-9174881526798998000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newStringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=不重要短信串&#125;&#123;lv=短信分割线&#125;(&#123;lv=不重要短信计数&#125;)&#123;lv=附加发送者短信&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信串&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5472276001856870000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;追加不重要短信&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;childrenCollapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dontLogIfConditionIsFalse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7876053076124838000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IfConditionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;转发不重要短信&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;checkCase&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryType&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intCompareVariable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intGreaterThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intLessThan&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intNotEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringComparisonType&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringEqual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7842346954791186000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MacroDroidVariableConstraint&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionBlockId&quot;</span><span class="punctuation">:</span> <span class="number">-8573632407905576000</span><span class="punctuation">,</span> <span class="attr">&quot;actionBlockName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发送邮件mailtask&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;continueActionsWithoutWaiting&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;inputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;inputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;给谁&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=邮件接收者&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;主题&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信转发&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;内容&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;lv=不重要短信串&#125;&#123;lv=短信分割线&#125;&#123;v=全局_附加内容&#125;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputDictionaryMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;outputVarsMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8595284186655486000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ActionBlockAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信计数&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6900618697363031000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;booleanDictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;createVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;dictionaryOrArrayType&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanInvert&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_darkMode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_doubleRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_falseLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_intExpression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMax&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intRandomMin&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueDecrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_intValueIncrement&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newBooleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_newDoubleValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newIntValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_newStringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_trueLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_userPrompt&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptEmptyAtStart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptShowCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_userPromptStopAfterCancel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_variable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;dictionary&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;isArray&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;variableType&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;isActionBlockWorkingVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isLocalVar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_booleanValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_decimalValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_intValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不重要短信串&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_stringValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;supportsInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;supportsOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7558252519711917000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SetVariableAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-6377918382805940000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndIfAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-8711102864211860000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndIfAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-7646654004755200000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EndIfAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;actionsOption&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;applicationName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;信息&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;excludesApps&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;matchOption&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;matchText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;packageName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.android.mms&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-9137561640821614000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NotificationInteractionAction&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信已读&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;未分类&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_descriptionOpen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_excludeLog&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_headingColor&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;短信转发&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_triggerList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;enableRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;isExcludeContact&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_exactMatch&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_excludes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_groupIdList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;1&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_groupNameList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;Business Card in ColorOS&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_option&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span> <span class="attr">&quot;m_smsContent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_smsFromList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_smsNumberExclude&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;subscriptionId&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="attr">&quot;m_SIGUID&quot;</span><span class="punctuation">:</span> <span class="number">-5380787543583754000</span><span class="punctuation">,</span> <span class="attr">&quot;m_classType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IncomingSMSTrigger&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;m_constraintList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="attr">&quot;m_isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;m_isOrCondition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</div>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>短信转发</tag>
        <tag>tasker</tag>
        <tag>macrodroid</tag>
      </tags>
  </entry>
  <entry>
    <title>关于我想编译JDK但强迫症和知识不允许这件事</title>
    <url>/2021/03/03/%E5%85%B3%E4%BA%8E%E6%88%91%E6%83%B3%E7%BC%96%E8%AF%91JDK%E4%BD%86%E5%BC%BA%E8%BF%AB%E7%97%87%E5%92%8C%E7%9F%A5%E8%AF%86%E4%B8%8D%E5%85%81%E8%AE%B8%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
    <content><![CDATA[<h1 id="你好"><a class="markdownIt-Anchor" href="#你好"></a> 你好</h1>
<p>  很久以前看过程序羊（自己去B站找）用mac编译过JDK。我是windows，不方便，虽然可以用虚拟机安装一个ubuntu（我挺喜欢kali的，但是我没学，虽然知道一些攻击，因为不是很想像以前一样当脚本小子），但我就想在windows上搞，并且不想安装那些软件——用一次就卸载。我就想用我电脑现有的完成，所以一直拖。</p>
<p>  算上这次我一共编译过两次工具，第一次是在PVZ里面。作者提供了一个外挂的源代码，要我们自己编译。还有就是这一次。首先去lua的官网下载源代码，不想编译就多看看下载其他的。</p>
<p>  首先是解压，由于是在windows上，所以可以尝试多次解压出来。我用7z试过。不过我还是在Cmder里用<code>tar -zxvf lua-5.3.4.tar.gz -C lua</code>，lua这个文件夹要存在。解压后终端进入到src文件夹下，执行<code>mingw32-make.exe mingw</code>。其中<code>mingw32-make.exe</code>是因为mingw的<code>make</code>是这个，<code>mingw</code>在官方的直到文档里提到过，自己看。</p>
<blockquote>
<P>
     Do "<kbd>make</kbd>" and see if your platform is listed.
 The platforms currently supported are:
</P>
<p class="display" >
   <font color=red>aix bsd c89 freebsd generic linux macosx mingw posix solaris</font>
</p>
<p>
 If your platform is listed, just do "<kbd>make xxx</kbd>", where xxx
 is your platform name.
</p><p>
 If your platform is not listed, try the closest one or posix, generic,
 c89, in this order.
</p><p>
</p>
</blockquote>
<p>  测试也简单，在src文件下，进入终端输入<code>lua</code>，执行<code>print &quot;hello world&quot;</code>，没问题还可以建一个lua文件<code>echo print &quot;Hello World&quot; &gt;&gt; test.lua</code>，然后执行<code>dofile(&quot;test.lua&quot;)</code>。还可以添加环境变量，这样在哪里都可以执行了，比如我在<code>D:\桌面\github--page</code>下，我可以在lua里执行<code>dofile(&quot;../编程/lua/lua-5.3.4/src/test.lua&quot;)</code>，再比如我在桌面，我可以<code>dofile(&quot;./编程/lua/lua-5.3.4/src/test.lua&quot;)</code>。</p>
<p>  完事。但是编译JDk可不简单。假期末尾其实还简单了解了netcat，这东西好玩，功能挺强大的，东西不是很多，虽然又忘的差不多了。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li><a href="https://www.cnblogs.com/Allen-rg/p/11454911.html">win10 ‘make’ 不是内部或外部命令</a></li>
<li><a href="https://blog.csdn.net/weixin_38391755/article/details/80380786">Makefile教程（绝对经典，所有问题看这一篇足够了）</a>(太长了，没看多少)</li>
<li><a href="https://blog.csdn.net/quicmous/article/details/102987619">lua 源代码初次编译</a></li>
</ol>
]]></content>
      <categories>
        <category>这算教程吧</category>
      </categories>
      <tags>
        <tag>lua</tag>
        <tag>mingw</tag>
      </tags>
  </entry>
  <entry>
    <title>关于我懒到极致不想太麻烦地切换java版本这件事</title>
    <url>/2021/03/15/%E5%85%B3%E4%BA%8E%E6%88%91%E6%87%92%E5%88%B0%E6%9E%81%E8%87%B4%E4%B8%8D%E6%83%B3%E5%A4%AA%E9%BA%BB%E7%83%A6%E5%9C%B0%E5%88%87%E6%8D%A2java%E7%89%88%E6%9C%AC%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
    <content><![CDATA[<p>  首先自己寻找JDK并安装，我不提供。然后一一安装。 至于安装在哪里，就看你的喜欢和你的管理方式。高版本的安装其实很方便。<br />
  <img data-src="https://i.loli.net/2021/03/15/BHMiKtEybpuDGWd.png" alt="我的java安装路径.PNG" /></p>
<p>  对于环境变量，先去<code>Path</code>把带<code>java</code>字眼的路径删掉。当然你也可先备份再删，也可以不删，只不过后续需要把添加的java相关路径放在前面。</p>
<p>  继续环境变量。对于<code>CLASSPATH</code>，有些ide需要，比如eclipse。它们之间比较玄学，所以还是保留者，没有就添上。由于要变更版本，所以要相对引用。不过不需担心，管它找不到找得到。</p>
<p>  由于高版本的JDK目录结构变了，以及由于Applet几乎不使用了，没有单独安装JRE了。所以可以参考我的设计方式，反正只要能到达手动切换也比较简单即可。</p>
<p>  我的设计如图。<code>HOME</code>是给<code>CLASSPATH</code>用的。每安装一个版本都要如图创建	<code>JDKxx_HOME</code>和<code>JDKxx_JDK_JRE</code>。当然你也可以创建一个bat（vbs或许更好吧），在安装时故意设计好安装路径，然后根据文件夹的名称来创建这两个变量。我就不需要了，我只简单搞了一个一键切换版本的。</p>
<p>  <img data-src="https://i.loli.net/2021/03/15/vHTSFszO4AYZLXr.png" alt="我java版本切换切换.PNG" /></p>
<p>  双版本之间切换</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:: 变量延迟 虽然感觉此处不需要</span><br><span class="line"><span class="built_in">setlocal</span> ENABLEDELAYEDEXPANSION</span><br><span class="line"></span><br><span class="line">:: 管理员权限</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;<span class="built_in">cmd</span>.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br><span class="line"></span><br><span class="line">::换成utf-<span class="number">8</span></span><br><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line"></span><br><span class="line">:: 预设环境变量</span><br><span class="line"><span class="built_in">set</span> jdk8_home=<span class="variable">%JDK8_HOME%</span></span><br><span class="line"><span class="built_in">set</span> jdk8_java=<span class="variable">%JDK8_JDK_JRE%</span></span><br><span class="line"><span class="built_in">set</span> jdk11_home=<span class="variable">%JDK11_HOME%</span></span><br><span class="line"><span class="built_in">set</span> jdk11_java=<span class="variable">%JDK11_JDK_JRE%</span></span><br><span class="line"></span><br><span class="line">:: 当前</span><br><span class="line"><span class="built_in">set</span> current_home=<span class="variable">%JAVA_HOME%</span></span><br><span class="line"><span class="built_in">set</span> current_java=<span class="variable">%JAVA%</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> jdk8_home=<span class="variable">%jdk8_home%</span></span><br><span class="line"><span class="built_in">echo</span> jdk8_java=<span class="variable">%jdk8_java%</span></span><br><span class="line"><span class="built_in">echo</span> jdk11_home=<span class="variable">%jdk11_home%</span></span><br><span class="line"><span class="built_in">echo</span> jdk11_java=<span class="variable">%jdk11_java%</span></span><br><span class="line"><span class="built_in">echo</span> current_home=<span class="variable">%current_home%</span></span><br><span class="line"><span class="built_in">echo</span> current_java=<span class="variable">%current_java%</span></span><br><span class="line"></span><br><span class="line">::交换，会换成绝对路径，要相对引用的话，可以用<span class="variable">%%转</span>义一个%，不过名字要改成环境变量的名字。</span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%current_java%</span>&quot; <span class="keyword">equ</span> &quot;<span class="variable">%jdk8_java%</span>&quot;  (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">11</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%jdk11_home%</span></span><br><span class="line">	SETX /M JAVA <span class="variable">%jdk11_java%</span></span><br><span class="line">	) <span class="keyword">else</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">8</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%jdk8_home%</span></span><br><span class="line">	SETX /M JAVA <span class="variable">%jdk8_java%</span></span><br><span class="line">	)</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem pause</span></span><br></pre></td></tr></table></figure>
<p>  多个版本之间切换，输入型的。（傻逼了，直接根据输入进行拼接就可以了，那还要判断呀）</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:: 变量延迟 虽然感觉此处不需要</span><br><span class="line"><span class="built_in">setlocal</span> ENABLEDELAYEDEXPANSION</span><br><span class="line"></span><br><span class="line">:: 管理员权限</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;<span class="built_in">cmd</span>.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br><span class="line"></span><br><span class="line">::换成utf-<span class="number">8</span></span><br><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line"></span><br><span class="line">::记住   <span class="built_in">set</span> /a 执行数学计算</span><br><span class="line">::		<span class="built_in">set</span> /p 提示用户输入</span><br><span class="line"><span class="built_in">set</span> /p aim=&quot;你想要的java版本：&quot;</span><br><span class="line"></span><br><span class="line">:: 当前</span><br><span class="line"><span class="built_in">set</span> current_home=<span class="variable">%JAVA_HOME%</span></span><br><span class="line"><span class="built_in">set</span> current_java=<span class="variable">%JAVA%</span></span><br><span class="line"><span class="built_in">echo</span> current_home=<span class="variable">%JAVA_HOME%</span></span><br><span class="line"><span class="built_in">echo</span> current_java=<span class="variable">%JAVA%</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::本想设计成map的方式的</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">8</span>  (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">8</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK8_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK8_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	) </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">9</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">9</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK9_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK9_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">10</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">10</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK10_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK10_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">11</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">11</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK11_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK11_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">12</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">12</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK12_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK12_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">13</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">10</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK13_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK13_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">14</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">10</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK14_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK14_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%aim%</span> <span class="keyword">equ</span> <span class="number">15</span> (</span><br><span class="line">	<span class="built_in">echo</span> 换成<span class="number">10</span></span><br><span class="line">	SETX /M JAVA_HOME <span class="variable">%%J</span>DK15_HOME<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	SETX /M JAVA <span class="variable">%%J</span>DK15_JDK_JRE<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>	<span class="keyword">goto</span> end</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:end</span><br><span class="line"><span class="comment">rem pause</span></span><br></pre></td></tr></table></figure>
<p>  以后切换版本就只须点击bat（我后来觉得vbs好一些）即可，真是方便呐。如果使用频繁还可创建快捷方式，利用<code>win+R</code>来快速切换，哈，究极方便。</p>
]]></content>
      <categories>
        <category>这算教程吧</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>bat</tag>
      </tags>
  </entry>
  <entry>
    <title>关于拼写纠正的一点发现</title>
    <url>/2020/03/30/%E5%85%B3%E4%BA%8E%E6%8B%BC%E5%86%99%E7%BA%A0%E6%AD%A3%E7%9A%84%E4%B8%80%E7%82%B9%E5%8F%91%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="发现"><a class="markdownIt-Anchor" href="#发现"></a> 发现</h1>
<p>​	在对着课件仔细更改一点小错误后，测试了几遍，效果不错。当我进行效果统计时，通过下面代码，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python  </span></span><br><span class="line"><span class="comment">#! -*- coding:utf-8 -*-  </span></span><br><span class="line"><span class="comment">#====#====#====#====  </span></span><br><span class="line"><span class="comment">#!@Author : px</span></span><br><span class="line"><span class="comment">#!@time   : 2020/3/28 22:04</span></span><br><span class="line"><span class="comment">#!@File   : test比较</span></span><br><span class="line"><span class="comment">#====#====#====#====  </span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        fp=<span class="built_in">open</span>(filename)</span><br><span class="line">        text=fp.read()</span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        <span class="built_in">print</span>(filename,<span class="string">&quot;文件打开失败&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="comment">#print(text)</span></span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line">A = re.findall(<span class="string">r&#x27;\w+&#x27;</span>, read_file(<span class="string">&#x27;batch0.tab.txt&#x27;</span>).lower())</span><br><span class="line"><span class="comment">#print(A)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(A))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="number">4206</span>*<span class="number">2</span>)</span><br><span class="line">j=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A:</span><br><span class="line">    <span class="built_in">print</span>(i,j)</span><br><span class="line">    j+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(A))</span><br></pre></td></tr></table></figure>
<p>​	我用的<a href="https://gitee.com/pengxiandyou/pengxiandyou/raw/master/src/resources/textfile/txt/batch0.tab.txt">测试文件</a>是两个竖排的单词组，理论上应该是偶数才对，而且通过在线字数统计得出结果也可推断出问题了。</p>
<p><img data-src="https://i.loli.net/2020/03/30/B4YcnNIFeO1JDlQ.png" alt="情况1明偶却奇.PNG" /></p>
<p>​	通过对相似单词检查奇偶性，发现<img data-src="https://i.loli.net/2020/03/30/ND1WmEITfQxh42H.png" alt="情况1问题位置.PNG" />。</p>
<p>​	对比<a href="https://gitee.com/pengxiandyou/pengxiandyou/raw/master/src/resources/textfile/txt/batch0.tab.txt">原文</a>，发现<img data-src="https://i.loli.net/2020/03/30/zDiC89jUcmxykAb.png" alt="情况1问题出处.PNG" />。</p>
<p>​</p>
<p>这说明对于含有 <font color=red size=5>’</font> 的单词，代码并没有识别成一个。通过<code>\w’\w</code>对<a href="https://gitee.com/pengxiandyou/pengxiandyou/raw/master/src/resources/textfile/txt/big.txt">语料库</a>和<a href="https://gitee.com/pengxiandyou/pengxiandyou/raw/master/src/resources/textfile/txt/batch0.tab.txt">测试文件</a>的查找，也发现文本里有许多这种单词。对<code>A</code>（代码里的A）使用<code>\w'\w</code>，也可说明代码没有把这种单词识别为一个单词。通过<code>A = re.findall(r'\w+', read_file('batch0.tab.txt').lower())</code>更说明没有把这种单词识别为一个单词。</p>
<h1 id="修改"><a class="markdownIt-Anchor" href="#修改"></a> 修改</h1>
<p>​	方案一： 使用<code>A = re.findall(r'\w+\'?\w+', read_file('batch0.tab.txt').lower())</code></p>
<p><img data-src="https://i.loli.net/2020/03/30/6xwmvfqk4UbozTM.png" alt="情况1问题解决.PNG" /></p>
<h1 id="新问题"><a class="markdownIt-Anchor" href="#新问题"></a> 新问题</h1>
<p>​	由于更改了规则，语言模型里有类似<code>can't</code>的单词，所以在字母替换时要注意<code>'</code>，所以将<code>alphabeta='qwertyuiopasdfghjklzxcvbnm'</code>更改为<code>alphabeta='qwertyuiopasdfghjklzxcvbnm\'</code></p>
<h1 id="统计方式"><a class="markdownIt-Anchor" href="#统计方式"></a> 统计方式</h1>
<ol>
<li><a href="https://gitee.com/pengxiandyou/pengxiandyou/raw/master/src/resources/textfile/txt/batch0.tab.txt">文本</a>里有两列，一列错误，一列期望结果。 （我觉得慢）</li>
<li><a href="http://norvig.com/spell-testset1.txt">文本</a>好几行，一行第一个错误，其余期望结果。（我还可以接受）</li>
<li>使用<a href="http://norvig.com/spell-correct.html">原作者</a>的方式，把原作者的的部分代码放入我的代码里修修补补。 （我还可以接受）</li>
</ol>
<h1 id="又发现新问题"><a class="markdownIt-Anchor" href="#又发现新问题"></a> 又发现新问题</h1>
<p>有的单词通过<code>-</code>连接成一个单词，可以通过<code>A = re.findall(r'\w+-?\w+', read_file('batch0.tab.txt').lower())</code>。</p>
<p>其实对于<code>-</code>，<code>'</code>应可以不考虑，因为这样的单词比较少。当然也可以改进，用<code>A = re.findall(r'\w+\'?-?\w+', read_file('batch0.tab.txt').lower())</code>.</p>
<p>或许还有其他类型的单词，但道理差不多。</p>
<h1 id="新知识"><a class="markdownIt-Anchor" href="#新知识"></a> 新知识</h1>
<ol>
<li>python lambda：<a href="https://www.baidu.com/s?wd=python+lambda">①</a>  <a href="https://www.runoob.com/python/python-functions.html">②</a>  <a href="https://blog.csdn.net/Torres_10/article/details/87919964">③</a></li>
<li>python from import <a href="https://www.baidu.com/s?wd=python+from+import">①</a>  <a href="https://blog.csdn.net/qq_30815237/article/details/93203934">②</a></li>
<li>python if for <a href="https://www.baidu.com/s?&amp;wd=python+if+for">①</a>  <a href="https://blog.csdn.net/qq_21997625/article/details/85695876">②</a>  <a href="https://www.cnblogs.com/huchong/p/9328687.html">③</a></li>
<li>python set <a href="https://www.baidu.com/s?&amp;wd=python+set">①</a>  <a href="http://c.biancheng.net/view/4402.html">②</a>  <a href="https://www.cnblogs.com/cyx-12/p/9234285.html">③</a></li>
</ol>
<h1 id="一些感悟"><a class="markdownIt-Anchor" href="#一些感悟"></a> 一些感悟</h1>
<ol>
<li>python 突然感觉挺有趣，挺好玩的。</li>
<li>这一次知识点感觉好多，好累啊。</li>
<li>如果以后做报表这类的或许会打算用python自动化。</li>
</ol>
<h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1>
<p>虽然我的博客没人看，但后期大概率会通过一些手段（由于是静态页面，所以这个手段拦不住一些有心人，当然我也愿意给他看）把一些地方（比如代码）隐藏掉，时间过了再显示。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python  </span></span><br><span class="line"><span class="comment">#! -*- coding:utf-8 -*-  </span></span><br><span class="line"><span class="comment">#====#====#====#====  </span></span><br><span class="line"><span class="comment">#!@Author : px</span></span><br><span class="line"><span class="comment">#!@time   : 2020/3/26 16:08</span></span><br><span class="line"><span class="comment">#!@File   : 3-26-1</span></span><br><span class="line"><span class="comment">#====#====#====#===</span></span><br><span class="line"><span class="comment">#拼写纠正</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        fp=<span class="built_in">open</span>(filename)</span><br><span class="line">        text=fp.read()</span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        <span class="built_in">print</span>(filename,<span class="string">&quot;文件打开失败&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="comment">#print(text)</span></span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"><span class="comment">#分词</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">words</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="comment">#1</span></span><br><span class="line">    <span class="comment">#A=re.findall(&#x27;[a-z]+&#x27;,text.lower())</span></span><br><span class="line">    <span class="comment">#2</span></span><br><span class="line">    A = re.findall(<span class="string">r&#x27;\w+\&#x27;?\w+&#x27;</span>, text.lower())</span><br><span class="line">    <span class="comment">#print(A)</span></span><br><span class="line">    <span class="keyword">return</span> A</span><br><span class="line"><span class="comment">#统计词频 语言模型训练</span></span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">features</span>):</span><br><span class="line">    <span class="comment">#初始化模型 得到默认字典 value=1</span></span><br><span class="line">    model=collections.defaultdict(<span class="keyword">lambda</span> :<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> features:</span><br><span class="line">        model[f]= model[f]+<span class="number">1</span></span><br><span class="line">    <span class="comment">#print(&quot;model: &quot;,model)</span></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line">A=words(read_file(<span class="string">&quot;big.txt&quot;</span>))</span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line"><span class="comment">#添加的</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">WORDS=Counter(A)</span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line">NWORDS=train(A)</span><br><span class="line"><span class="comment">#print(len(A))</span></span><br><span class="line">P=<span class="built_in">sum</span>(NWORDS.values())</span><br><span class="line"><span class="comment">#print(NWORDS[&quot;the&quot;],NWORDS[&quot;they&quot;],NWORDS[&quot;that&quot;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#判读单词是否在字典，错误则纠正</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">known</span>(<span class="params">words</span>):<span class="comment">#不在则返回空</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">set</span>(w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w <span class="keyword">in</span> NWORDS))</span><br><span class="line"></span><br><span class="line">alphabeta=<span class="string">&#x27;qwertyuiopasdfghjklzxcvbnm\&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#编辑距离为的可能单词</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edist1</span>(<span class="params">word</span>):</span><br><span class="line">    n=<span class="built_in">len</span>(word)</span><br><span class="line">    s1=[word[<span class="number">0</span>:i]+word[i+<span class="number">1</span>:] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    <span class="comment">#print(s1)#删除单词中的字母</span></span><br><span class="line">    s2=[word[<span class="number">0</span>:i]+word[i]+word[i+<span class="number">2</span>:] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>)]</span><br><span class="line">    <span class="comment">#print(s2)# 单词字母错位</span></span><br><span class="line">    s3=[word[<span class="number">0</span>:i]+c+word[i+<span class="number">1</span>:] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n) <span class="keyword">for</span> c <span class="keyword">in</span> alphabeta]</span><br><span class="line">    <span class="comment">#print(s3,len(s3))#字母替换</span></span><br><span class="line">    s4=[word[<span class="number">0</span>:i]+c+word[i:] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n) <span class="keyword">for</span> c <span class="keyword">in</span> alphabeta]</span><br><span class="line">    <span class="comment">#print(s4,len(s4))#字母插入</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">set</span>(s1+s2+s3+s4))</span><br><span class="line"><span class="comment">#编辑距离为2，递归</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edist2</span>(<span class="params">word</span>):</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">set</span>(e2 <span class="keyword">for</span> e1 <span class="keyword">in</span> edist1(word) <span class="keyword">for</span> e2 <span class="keyword">in</span> edist1(e1)))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">known_edist2</span>(<span class="params">word</span>):</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">set</span>(e2 <span class="keyword">for</span> e1 <span class="keyword">in</span> edist1(word) <span class="keyword">for</span> e2 <span class="keyword">in</span> edist1(e1) <span class="keyword">if</span> e2 <span class="keyword">in</span> NWORDS))</span><br><span class="line"><span class="comment">#选择最大可能的单词</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">correct</span>(<span class="params">word</span>):</span><br><span class="line">    <span class="comment">#短路运算 candidates 列表</span></span><br><span class="line">    candidates=known([word]) <span class="keyword">or</span> known(edist1(word)) <span class="keyword">or</span> known(edist2(word)) <span class="keyword">or</span> [word]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(candidates,key=<span class="keyword">lambda</span> w:NWORDS[w])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count</span>():</span><br><span class="line">    batch0=read_file(<span class="string">&#x27;batch0.tab.txt&#x27;</span>)</span><br><span class="line">    batch0words=words(batch0)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(batch0words),batch0words[<span class="number">0</span>],batch0words[<span class="number">1</span>])</span><br><span class="line">    con=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(batch0words)//<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">if</span> (correct(batch0words[<span class="number">2</span>*i]) == batch0words[<span class="number">2</span>*i+<span class="number">1</span>]):</span><br><span class="line">            con+=<span class="number">1</span></span><br><span class="line">            <span class="comment">#print(&quot;con&quot;,con)</span></span><br><span class="line">        <span class="comment">#print(&quot;i&quot;,i)</span></span><br><span class="line">    <span class="built_in">print</span>(con/(<span class="built_in">len</span>(batch0words)*<span class="number">0.5</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file_lines</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        fp=<span class="built_in">open</span>(filename)</span><br><span class="line">        text=fp.readlines()</span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        <span class="built_in">print</span>(filename,<span class="string">&quot;文件打开失败&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="comment">#print(text)</span></span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count2</span>():</span><br><span class="line">    con=<span class="number">0</span></span><br><span class="line">    words_line=read_file_lines(<span class="string">&quot;3.txt&quot;</span>)<span class="comment">#一排一排的记录</span></span><br><span class="line">    <span class="comment">#print(len(words_line),words_line[0],words_line[1])</span></span><br><span class="line">    <span class="keyword">for</span> linewords <span class="keyword">in</span> words_line:<span class="comment">#取一排</span></span><br><span class="line">        B=words(linewords)<span class="comment">#一排转换为单词列表</span></span><br><span class="line">        <span class="keyword">if</span> correct(B[<span class="number">0</span>]) <span class="keyword">in</span> B:</span><br><span class="line">            con+=<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(con/<span class="built_in">len</span>(words_line))</span><br><span class="line"></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"><span class="comment">#添加的</span></span><br><span class="line"><span class="comment">#将unit_test删除了</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">spelltest</span>(<span class="params">tests, verbose=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&quot;Run correction(wrong) on all (right, wrong) pairs; report results.&quot;</span></span><br><span class="line">    <span class="keyword">import</span> time</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    good, unknown = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    n = <span class="built_in">len</span>(tests)</span><br><span class="line">    <span class="keyword">for</span> right, wrong <span class="keyword">in</span> tests:</span><br><span class="line">        w = correct(wrong)</span><br><span class="line">        good += (w == right)</span><br><span class="line">        <span class="keyword">if</span> w != right:</span><br><span class="line">            unknown += (right <span class="keyword">not</span> <span class="keyword">in</span> WORDS)</span><br><span class="line">            <span class="keyword">if</span> verbose:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;correction(&#123;&#125;) =&gt; &#123;&#125; (&#123;&#125;); expected &#123;&#125; (&#123;&#125;)&#x27;</span></span><br><span class="line">                      .<span class="built_in">format</span>(wrong, w, WORDS[w], right, WORDS[right]))</span><br><span class="line">    dt = time.perf_counter() - start</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:.0%&#125; of &#123;&#125; correct (&#123;:.0%&#125; unknown) at &#123;:.0f&#125; words per second &#x27;</span></span><br><span class="line">          .<span class="built_in">format</span>(good / n, n, unknown / n, n / dt))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Testset</span>(<span class="params">lines</span>):</span><br><span class="line">    <span class="string">&quot;Parse &#x27;right: wrong1 wrong2&#x27; lines into [(&#x27;right&#x27;, &#x27;wrong1&#x27;), (&#x27;right&#x27;, &#x27;wrong2&#x27;)] pairs.&quot;</span></span><br><span class="line">    <span class="keyword">return</span> [(right, wrong)</span><br><span class="line">            <span class="keyword">for</span> (right, wrongs) <span class="keyword">in</span> (line.split(<span class="string">&#x27;:&#x27;</span>) <span class="keyword">for</span> line <span class="keyword">in</span> lines)</span><br><span class="line">            <span class="keyword">for</span> wrong <span class="keyword">in</span> wrongs.split()]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(unit_tests())</span></span><br><span class="line"><span class="comment"># spelltest(Testset(open(&#x27;spell-testset1.txt&#x27;)))  # Development set</span></span><br><span class="line"><span class="comment"># spelltest(Testset(open(&#x27;spell-testset2.txt&#x27;)))  # Final test set</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        wrd=<span class="built_in">input</span>(<span class="string">&quot;输入单词&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;edist1: &quot;</span>,known(edist1(wrd)))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;known_edist2: &quot;</span>,known_edist2(wrd))</span><br><span class="line">        <span class="built_in">print</span>(correct(wrd))</span><br><span class="line">        <span class="comment">#print()</span></span><br><span class="line">   <span class="comment"># print(unit_tests())#我删除了</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># spelltest(Testset(open(&#x27;spell-testset1.txt&#x27;)))  # Development set</span></span><br><span class="line">    <span class="comment"># spelltest(Testset(open(&#x27;spell-testset2.txt&#x27;)))</span></span><br><span class="line">    <span class="comment"># wrd = input(&quot;输入单词&quot;)</span></span><br><span class="line">    <span class="comment"># print(&quot;edist1: &quot;,known(edist1(wrd)))</span></span><br><span class="line">    <span class="comment"># print(&quot;known_edist2: &quot;,known_edist2(wrd))</span></span><br><span class="line">    <span class="comment"># print(correct(wrd))</span></span><br><span class="line">    <span class="comment"># #count()</span></span><br><span class="line">    <span class="comment"># count2()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>算法分析与设计</category>
      </categories>
      <tags>
        <tag>算法分析与设计</tag>
      </tags>
  </entry>
  <entry>
    <title>在Typora里使用mermaid画图</title>
    <url>/2020/10/04/%E5%9C%A8Typora%E9%87%8C%E4%BD%BF%E7%94%A8mermaid%E7%94%BB%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="mermaid之graph"><a class="markdownIt-Anchor" href="#mermaid之graph"></a> mermaid之graph</h1>
<h2 id="初始操作"><a class="markdownIt-Anchor" href="#初始操作"></a> 初始操作</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">​~~~mermaid</span><br><span class="line">graph 方向;</span><br><span class="line">代码</span><br><span class="line">由于相关特性以及不想改文件，把此处的‘~’换成‘`’</span><br></pre></td></tr></table></figure>
<p><code>~</code>换<code>`</code></p>
<h2 id="方向"><a class="markdownIt-Anchor" href="#方向"></a> 方向</h2>
<ul>
<li>TB-从上到下</li>
<li>TD-自顶向下/从上至下相同</li>
<li>BT-从下到上</li>
<li>RL-从右到左</li>
<li>LR-从左到右</li>
</ul>
<h2 id="id结点形状"><a class="markdownIt-Anchor" href="#id结点形状"></a> id[结点]形状</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">id0</span><br><span class="line">id[矩形]</span><br><span class="line">id1(圆角)</span><br><span class="line">id2([操场体育场形])</span><br><span class="line">id4[[羽毛球场形]]</span><br><span class="line">%% 我Tyopa圆柱是黑的</span><br><span class="line">id5[(圆柱)]</span><br><span class="line">id3((园))</span><br><span class="line">id6&gt;丝带形]</span><br><span class="line">id7&#123;菱形&#125;</span><br><span class="line">id8&#123;&#123;六角&#125;&#125;</span><br><span class="line">id9[/平行四边形/]</span><br><span class="line">id10[\平行四边形\]</span><br><span class="line">id11[/上梯形\]</span><br><span class="line">id12[\下梯形/]</span><br><span class="line">%%不像正方形</span><br><span class="line">id13[[正方形]]</span><br><span class="line">%%不支持</span><br><span class="line">id14[&#123;棱柱体&#125;]</span><br><span class="line">id15(&#123;圆弧&#125;)</span><br><span class="line">id16&#123;(圆弧)&#125;</span><br></pre></td></tr></table></figure>
<pre class="mermaid">graph TD;
    id0
id[矩形]
id1(圆角)
id2([操场体育场形])
id4[[羽毛球场形]]
%% 我Tyopa圆柱是黑的
id5[(圆柱)]
id3((园))
id6>丝带形]
id7{菱形}
id8
id9[/平行四边形/]
id10[\平行四边形\]
id11[/上梯形\]
id12[\下梯形/]
id13[[正方形]]</pre>
<h2 id="连线"><a class="markdownIt-Anchor" href="#连线"></a> 连线</h2>
<p>实线<code>---</code></p>
<pre class="mermaid">graph LR;
A---B</pre>
<p>实线箭头<code>--&gt;</code></p>
<pre class="mermaid">graph LR;
A-->B</pre>
<p>虚线<code>-.-</code></p>
<pre class="mermaid">graph LR;
A-.-B</pre>
<p>虚线箭头<code>-.-&gt;</code></p>
<pre class="mermaid">graph LR;
A-.->B</pre>
<p>粗线<code>===</code></p>
<pre class="mermaid">graph LR;
A===B</pre>
<p>粗线箭头<code>==&gt;</code></p>
<pre class="mermaid">graph LR;
A==>B</pre>
<h2 id="线上文字"><a class="markdownIt-Anchor" href="#线上文字"></a> 线上文字</h2>
<p><code>--文字---</code>、<code>--文字--&gt;</code>、<code>---|文字|</code>、<code>--&gt;|文字|</code></p>
<pre class="mermaid">graph LR;
A --连--- B --连--> C ---|连| D -->|连| E</pre>
<p><code>-.文字.-</code>、<code>-.文字.-&gt;</code>、<code>-.-|文字|</code>、<code>-.-&gt;|文字|</code></p>
<pre class="mermaid">graph LR;
A-.连.-B-.连.->C-.-|连|D-.->|连|E</pre>
<p><code>==文字===</code>、<code>==文字==&gt;</code>、同理</p>
<pre class="mermaid">graph LR;
A==连===B==连==>C</pre>
<h2 id="子图"><a class="markdownIt-Anchor" href="#子图"></a> 子图</h2>
<pre class="mermaid">graph TB
    c1-->a2
    %% 如图可以改显示的东西
    subgraph one [1]
    a1-->a2
    end
    subgraph two
    b1-->b2
    end
    subgraph three
    c1-->c2
    end</pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    c1--&gt;a2</span><br><span class="line">    %% 如图可以改显示的东西--专有id</span><br><span class="line">    subgraph one [1]</span><br><span class="line">    a1--&gt;a2</span><br><span class="line">    end</span><br><span class="line">    subgraph two</span><br><span class="line">    b1--&gt;b2</span><br><span class="line">    end</span><br><span class="line">    subgraph three</span><br><span class="line">    c1--&gt;c2</span><br><span class="line">    end</span><br></pre></td></tr></table></figure>
<h2 id="flowchart"><a class="markdownIt-Anchor" href="#flowchart"></a> flowchart</h2>
<p>如果把<code>graph</code>换成<code>flowchart</code>，则有其他的连接和子图之间的连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flowchart TD;</span><br><span class="line">a--ob</span><br><span class="line">b--xa</span><br><span class="line">c o--o b</span><br><span class="line">b &lt;--&gt; c</span><br><span class="line">c x--x e</span><br><span class="line">a --&gt; e</span><br></pre></td></tr></table></figure>
<pre class="mermaid">flowchart TD;
a--ob
b--xa
c o--o b
b <--> c
c x--x e
a --> e</pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flowchart TB</span><br><span class="line">    c1--&gt;a2</span><br><span class="line">    subgraph one</span><br><span class="line">    a1--&gt;a2</span><br><span class="line">    end</span><br><span class="line">    subgraph two</span><br><span class="line">    b1--&gt;b2</span><br><span class="line">    end</span><br><span class="line">    subgraph three</span><br><span class="line">    c1--&gt;c2</span><br><span class="line">    end</span><br><span class="line">    one --&gt; two</span><br><span class="line">    three --&gt; two</span><br><span class="line">    two --&gt; c2</span><br></pre></td></tr></table></figure>
<pre class="mermaid">flowchart TB
    c1-->a2
    subgraph one
    a1-->a2
    end
    subgraph two
    b1-->b2
    end
    subgraph three
    c1-->c2
    end
    one --> two
    three --> two
    two --> c2</pre>
<h2 id="样式和类"><a class="markdownIt-Anchor" href="#样式和类"></a> 样式和类</h2>
<p>线的样式<code>linkStyle 3 stroke:#ff3,stroke-width:4px,color:red;</code>会应用于第4个连接。</p>
<pre class="mermaid">graph LR;
A-->B
linkStyle 0 stroke:#ff3,stroke-width:4px,color:red;</pre>
<p>节点的样式<code>style id2 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5</code>。</p>
<pre class="mermaid">graph LR
    id1(Start)-->id2(Stop)
    style id1 fill:#f9f,stroke:#333,stroke-width:4px
    style id2 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5</pre>
<p>类定义<code>classDef className fill:#f9f,stroke:#333,stroke-width:4px;</code>。</p>
<p>类附加<code>class nodeId1,nodeId2 className;</code>。</p>
<p>附加还可以用<code>:::</code>来。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A:::someclass --&gt; B</span><br><span class="line">    classDef someclass fill:#f96;</span><br></pre></td></tr></table></figure>
<pre class="mermaid">graph LR
    A:::someclass --> B
    classDef someclass fill:#f96;</pre>
<p>默认类<code>classDef default fill:#f9f,stroke:#333,stroke-width:4px;</code>，它将被分配给所有没有特定类定义的节点。</p>
<p>外部预定义的CSS类在Typora不起作用，但变成网页应该可以。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .cssClass &gt; rect&#123;</span><br><span class="line">        fill:#FF0000;</span><br><span class="line">        stroke:#FFFF00;</span><br><span class="line">        stroke-width:4px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">------------------</span><br><span class="line">graph LR;</span><br><span class="line">    A--&gt;B[AAA&lt;span&gt;BBB&lt;/span&gt;];</span><br><span class="line">    B--&gt;D;</span><br><span class="line">    class A cssClass;</span><br></pre></td></tr></table></figure>
<style>
    .cssClass > rect{
        fill:#FF0000;
        stroke:#FFFF00;
        stroke-width:4px;
    }
</style>
<pre class="mermaid">graph LR;
    A-->B[AAA<span>BBB</span>];
    B-->D;
    class A cssClass;</pre>
<p>需要学好多css的感觉。</p>
<h2 id="转义"><a class="markdownIt-Anchor" href="#转义"></a> 转义</h2>
<pre class="mermaid">graph LR
id1["(233)"]
id2["#quot;"]-->id3["#9829;"]</pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id1[&quot;(233)&quot;]</span><br><span class="line">id2[&quot;#quot;&quot;]--&gt;id3[&quot;#9829;&quot;]</span><br></pre></td></tr></table></figure>
<p>需要查找关于html的转义。</p>
<h2 id="click"><a class="markdownIt-Anchor" href="#click"></a> click</h2>
<p>在Tyopa中不起作用，还不显示，要变成网页</p>
<script>
     var callback = function(){
      console.log('A callback was triggered');
  }
</script>
<pre class="mermaid">graph LR;
    A-->B;
    click A callback "Tooltip for a callback"
    click B "http://www.github.com" "This is a tooltip for a link" _blank</pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  var callback = function()&#123;</span><br><span class="line">      alert(&#x27;A callback was triggered&#x27;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">----------------</span><br><span class="line">graph LR;</span><br><span class="line">    A--&gt;B;</span><br><span class="line">    click A callback &quot;Tooltip for a callback&quot;</span><br><span class="line">    click B &quot;http://www.github.com&quot; &quot;This is a tooltip for a link&quot;</span><br></pre></td></tr></table></figure>
<p>默认情况下，链接在同一浏览器选项卡/窗口中打开。它可以通过添加链接目标的点击定义来改变这种（<code>_self</code>，<code>_blank</code>，<code>_parent</code>和<code>_top</code>支持）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR;</span><br><span class="line">    A--&gt;B;</span><br><span class="line">    B--&gt;C;</span><br><span class="line">    click A &quot;http://www.github.com&quot; _blank</span><br><span class="line">    click B &quot;http://www.github.com&quot; &quot;Open this in a new tab&quot; _blank</span><br></pre></td></tr></table></figure>
<pre class="mermaid">graph LR;
    A-->B;
    B-->C;
    click A "http://www.github.com" _blank
    click B "http://www.github.com" "Open this in a new tab" _blank</pre>
<h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    A &amp; B--&gt; C &amp; D</span><br></pre></td></tr></table></figure>
<pre class="mermaid">graph TB
    A & B--> C & D</pre>
<p>注释。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    A &amp; B--&gt; C &amp; D</span><br><span class="line">    %% 如此使用真方便</span><br></pre></td></tr></table></figure>
<p>关于空格和分号，尽量标准吧。</p>
<p>关于icon，Typora不会显示，在博客里用可能会需要引入一些东西。不过一般应该都引入了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C--&gt;|3|F[&quot;fa:fa-car Car&quot;]</span><br></pre></td></tr></table></figure>
<pre class="mermaid">graph LR;
C-->|3|F["fa:fa-car Car"]</pre>
<h1 id="其他图"><a class="markdownIt-Anchor" href="#其他图"></a> 其他图</h1>
<p>以后再整理，暂时用不上。</p>
]]></content>
      <categories>
        <category>这算教程吧</category>
        <category>Typora</category>
        <category>mermaid</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>mermaid</tag>
      </tags>
  </entry>
  <entry>
    <title>回形数组的自我解答</title>
    <url>/2021/01/15/%E5%9B%9E%E5%BD%A2%E6%95%B0%E7%BB%84%E7%9A%84%E8%87%AA%E6%88%91%E8%A7%A3%E7%AD%94/</url>
    <content><![CDATA[<h1 id="前期想法"><a class="markdownIt-Anchor" href="#前期想法"></a> 前期想法</h1>
<p>  由于当时老师刚讲完杨辉三角，而我做杨辉三角是不用数组进行存储的，而是用组合数直接算，直接打印，想算多少算多少。因此我的初步想法是直接打印，与此对应的思路是两个<code>for</code>，通过判断对<code>i</code>和<code>j</code>进行操作，以进行旋转。此时还是正着走的。</p>
<p>  因为暂时想不出，就使用纸张进行画图。最先发现的是奇偶的最后的拐弯不一样。于是又算出最后一个数的坐标。阿巴阿巴阿巴（省略一大段）。</p>
<h1 id="最终想法"><a class="markdownIt-Anchor" href="#最终想法"></a> 最终想法</h1>
<p>  一言以蔽之，倒着走，算出拐弯，算出步数以及操作方式和操作对象。</p>
<p>  虽然中间思考很久，但我不想叨逼叨这些碎碎念。</p>
<p><img data-src="https://i.loli.net/2021/01/15/RQKNgyZ1qh9b8mL.png" alt="回旋数组的解题思路以例4.png" /></p>
<h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1>
<p>  这是用<code>Sublime</code>写的，不想打开idea。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java.util.<span class="type">Scanner</span> <span class="variable">scancer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Scanner(System.in);</span><br><span class="line">	<span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> scancer.nextInt();<span class="comment">//要大于1</span></span><br><span class="line">	<span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> size * size;</span><br><span class="line">	<span class="type">int</span> i,j;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	旋转数矩阵</span></span><br><span class="line"><span class="comment">	思路：根据矩阵大小算出最后一个数并算出它的位置，</span></span><br><span class="line"><span class="comment">	通过观察发现，倒着旋转，奇数和偶数的矩阵里最后的旋转不同（即不是i，就是j）。</span></span><br><span class="line"><span class="comment">	通过矩阵大小，算出拐弯次数。</span></span><br><span class="line"><span class="comment">	倒着看，算出每走（size=4为例，1，1，2，2，3，3，3（4跳出成3））拐弯。</span></span><br><span class="line"><span class="comment">	倒着看，每次拐弯后对i，j的操作不同，两两一组，根据第几次循环判断对i还是j操作，根据每两次（根据次数算出第几组，根据组确定操作是+还是-）</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="type">int</span>[][] mat = <span class="keyword">new</span> <span class="title class_">int</span>[size][size];</span><br><span class="line">	<span class="comment">/*分奇偶情况*/</span></span><br><span class="line">	<span class="keyword">if</span> (size % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="comment">/*顺着数，最后一个数*/</span></span><br><span class="line">		j = (i=size/<span class="number">2</span>) - <span class="number">1</span>;</span><br><span class="line">		mat[i][j] = num;</span><br><span class="line">		<span class="comment">/*控制循环次数，也可理解为共拐几次弯。例：size=4，共拐2*size-1次弯*/</span></span><br><span class="line">		label:<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l &lt; <span class="number">2</span>*size ; l++ ) &#123;</span><br><span class="line">			<span class="comment">/*第几组，和 走多少步后拐弯*/</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> (<span class="type">int</span>)java.lang.Math.ceil((<span class="type">float</span>)l/(<span class="type">float</span>)<span class="number">2</span>);<span class="comment">//注意如果不强转的话，最后一行只有一个。因为1/2=0，而我不能要0，要从1开始。</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m &lt; temp;m++ ) &#123;</span><br><span class="line">				<span class="keyword">if</span>(l % <span class="number">2</span> == <span class="number">1</span>)&#123;<span class="comment">//j 更改1为0可实现顺时针旋转</span></span><br><span class="line">					<span class="keyword">if</span> (temp % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">						<span class="comment">/*右移*/</span></span><br><span class="line">						j+=<span class="number">1</span>;</span><br><span class="line">					&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">						<span class="comment">/*左移*/</span></span><br><span class="line">						j-=<span class="number">1</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;<span class="comment">//i</span></span><br><span class="line">					<span class="keyword">if</span> (temp % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">						<span class="comment">/*上移*/</span></span><br><span class="line">						i-=<span class="number">1</span>;</span><br><span class="line">					&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">						<span class="comment">/*下移*/</span></span><br><span class="line">						i+=<span class="number">1</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">				mat[i][j] = (num-=<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">if</span> (<span class="number">1</span> == num) &#123;</span><br><span class="line">					<span class="comment">/*这里就是最后一组的第一个的最后要少走一步（即最后一次拐弯后，最后一步）*/</span></span><br><span class="line">					<span class="keyword">break</span> label;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		i = j = size / <span class="number">2</span>;</span><br><span class="line">		mat[i][j] = num;</span><br><span class="line">	label:<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l &lt; <span class="number">2</span>*size ; l++ ) &#123;</span><br><span class="line">			<span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> (<span class="type">int</span>)java.lang.Math.ceil((<span class="type">float</span>)l/(<span class="type">float</span>)<span class="number">2</span>);</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m &lt; temp;m++ ) &#123;</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">if</span>(l % <span class="number">2</span> == <span class="number">1</span>)&#123;<span class="comment">//j</span></span><br><span class="line">					<span class="keyword">if</span> (temp % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">						j-=<span class="number">1</span>;</span><br><span class="line">					&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">						j+=<span class="number">1</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;<span class="comment">//i</span></span><br><span class="line">					<span class="keyword">if</span> (temp % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">						i+=<span class="number">1</span>;</span><br><span class="line">					&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">						i-=<span class="number">1</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				mat[i][j] = (num-=<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">if</span> (<span class="number">1</span> == num) &#123;</span><br><span class="line">					<span class="keyword">break</span> label;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l &lt;mat.length ; l++ ) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m &lt; mat[l].length; m++ ) &#123;<span class="comment">//这里也可以顺时针旋转</span></span><br><span class="line">			System.out.print(mat[l][m]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br></pre></td></tr></table></figure>
<h1 id="思考"><a class="markdownIt-Anchor" href="#思考"></a> 思考</h1>
<p>  对于当时弹幕里的对角线，我暂时没想出。对于我这个代码，感觉可以奇偶合并在一起。我的想法是，构造一个函数对操作对象和操作方式进行映射。</p>
]]></content>
      <categories>
        <category>练习</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据技能竞赛可能用到命令集合v1.0</title>
    <url>/2020/07/22/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E8%83%BD%E7%AB%9E%E8%B5%9B%E5%8F%AF%E8%83%BD%E7%94%A8%E5%88%B0%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88v1-0/</url>
    <content><![CDATA[<h1 id="解压"><a class="markdownIt-Anchor" href="#解压"></a> 解压</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u251-linux-x64.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure>
<h1 id="配环境变量"><a class="markdownIt-Anchor" href="#配环境变量"></a> 配环境变量</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<h1 id="防火墙"><a class="markdownIt-Anchor" href="#防火墙"></a> 防火墙</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动： systemctl start firewalld</span><br><span class="line">关闭： systemctl stop firewalld</span><br><span class="line">查看状态： systemctl status firewalld</span><br><span class="line">开机禁用  ： systemctl disable firewalld</span><br><span class="line">开机启用  ： systemctl enable firewalld</span><br></pre></td></tr></table></figure>
<h1 id="主机名"><a class="markdownIt-Anchor" href="#主机名"></a> 主机名</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname px02</span><br></pre></td></tr></table></figure>
<h1 id="分发"><a class="markdownIt-Anchor" href="#分发"></a> 分发</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r hadoop/ px03:/usr/local/hadoop-2.9.2/etc/</span><br></pre></td></tr></table></figure>
<h1 id="ssh"><a class="markdownIt-Anchor" href="#ssh"></a> ssh</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id 地址</span><br></pre></td></tr></table></figure>
<h1 id="时间同步"><a class="markdownIt-Anchor" href="#时间同步"></a> 时间同步</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date 查看时间</span><br><span class="line">tzselect 选择时间</span><br><span class="line">date -s 00:00 修改时间</span><br><span class="line">ntpdate master同步</span><br></pre></td></tr></table></figure>
<h1 id="zookeeper"><a class="markdownIt-Anchor" href="#zookeeper"></a> zookeeper</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动zkServer.sh start</span><br><span class="line">状态zkServer.sh status</span><br></pre></td></tr></table></figure>
<h1 id="hadoop"><a class="markdownIt-Anchor" href="#hadoop"></a> hadoop</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动</span><br><span class="line">	master格式化 hadoop namenode -format</span><br><span class="line">	start-all.sh</span><br><span class="line">查看</span><br><span class="line">	master:50070</span><br><span class="line">	master:18088</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop-daemon.sh start namenode</span><br><span class="line">hadoop-daemon.sh start datanode</span><br><span class="line">hadoop-daemon.sh start secondarynamenode</span><br></pre></td></tr></table></figure>
<h2 id="wordcount案例"><a class="markdownIt-Anchor" href="#wordcount案例"></a> wordcount案例</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -put &#x27;文件&#x27; 目录</span><br><span class="line">hadoop jar $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.2.jar wordcount /input/wordcount.txt /output</span><br><span class="line">hadoop fs -cat /output/part-r-00000</span><br></pre></td></tr></table></figure>
<h2 id="计算pi案例"><a class="markdownIt-Anchor" href="#计算pi案例"></a> 计算PI案例</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop jar $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.2.jar pi 5 5</span><br></pre></td></tr></table></figure>
<h1 id="hdfs"><a class="markdownIt-Anchor" href="#hdfs"></a> HDFS</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可记做hadoop fs -shell命令</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 帮助</span><br><span class="line">hadoop fs -help 命令</span><br><span class="line"># 查看</span><br><span class="line">hadoop fs -ls 目录</span><br><span class="line"># 创建目录</span><br><span class="line">hadoop fs -mkdir 目录</span><br><span class="line"># 查看文件</span><br><span class="line">hadoop fs -cat 文件</span><br><span class="line"># 追加</span><br><span class="line">hadoop fs -appendToFile 源文件 目标文件</span><br><span class="line"># 从本地（不是windows）剪切粘贴到HDFS</span><br><span class="line">hadoop fs -moveFromLocal 文件 目录</span><br><span class="line"># 从本机拷贝 等同于 -put</span><br><span class="line">hadoop fs -copyFromLocal 文件 目录</span><br><span class="line"># 拷贝回本地 等同于 -get </span><br><span class="line">hadoop fs -copyToLocal 文件 目录</span><br><span class="line"># HDFS中拷贝到另一个路径</span><br><span class="line">hadoop fs -cp 文件 目录</span><br><span class="line"># 移动 -mv</span><br></pre></td></tr></table></figure>
<h1 id="hive"><a class="markdownIt-Anchor" href="#hive"></a> hive</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动</span><br><span class="line">	slave1下</span><br><span class="line">		hive --service metastore</span><br><span class="line">	master下</span><br><span class="line">		hive</span><br><span class="line">		测试show databases;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">库、表等可在web页面查看</span><br></pre></td></tr></table></figure>
<h2 id="创建库表"><a class="markdownIt-Anchor" href="#创建库表"></a> 创建库表</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line">create database test;</span><br><span class="line"># 创建管理表or内部表</span><br><span class="line">create table st(id int,name string)</span><br><span class="line">row format delimited fields terminated by &#x27;\t&#x27;;</span><br><span class="line"># 创建外部表</span><br><span class="line"> create external table dept(deptno int,dname string,loc int)</span><br><span class="line"> row format delimited fields terminated by &#x27;\t&#x27;;</span><br></pre></td></tr></table></figure>
<h2 id="load导数据"><a class="markdownIt-Anchor" href="#load导数据"></a> load导数据</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 导入数据 也可以自己建</span><br><span class="line">load data local inpath &#x27;文件&#x27; into table 表名;</span><br></pre></td></tr></table></figure>
<h2 id="desc表"><a class="markdownIt-Anchor" href="#desc表"></a> desc表</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看表格式化数据 可看类型</span><br><span class="line">desc formatted dept;</span><br></pre></td></tr></table></figure>
<h2 id="分区表"><a class="markdownIt-Anchor" href="#分区表"></a> 分区表</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建分区表 单的</span><br><span class="line">create table dept_partition(dno int,dname string,loc string)</span><br><span class="line">partitioned by(month string)</span><br><span class="line">row format delimited fields terminated by &#x27;\t&#x27;;</span><br><span class="line">	# 加载数据</span><br><span class="line">	load data local inpath &#x27;/opt/dept.txt&#x27; into table dept_partition partition(month=&#x27;202006&#x27;);</span><br><span class="line">	# 查询</span><br><span class="line">	select * from dept_partition;</span><br><span class="line">	select * from dept_partition where month=202006;</span><br><span class="line">	# 增加分区表 可以跟多个partition，空格隔开 感觉本质是文件夹 </span><br><span class="line">	alter table dept_partition add partition(month=&#x27;202004&#x27;);</span><br><span class="line">	# 删除</span><br><span class="line">	add换drop，多个partition用逗号隔开</span><br><span class="line"># 创建多分区</span><br><span class="line">by(month string,day string) 举一反三</span><br></pre></td></tr></table></figure>
<h2 id="表修改"><a class="markdownIt-Anchor" href="#表修改"></a> 表修改</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 重命名表</span><br><span class="line">alter table st rename to st01;</span><br><span class="line"># 增加、修改、替换列信息</span><br><span class="line">	# 增加、替换</span><br><span class="line">	 alter table st01 add|replace columns(age int);</span><br><span class="line">	# 更新</span><br><span class="line">	alter table st01 change age sex string;</span><br><span class="line"># 删除表</span><br><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure>
<h2 id="插入数据"><a class="markdownIt-Anchor" href="#插入数据"></a> 插入数据</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 通过查询语句插入数据</span><br><span class="line">	# 创建表</span><br><span class="line">	create table st(</span><br><span class="line">    &gt; id int,name string)</span><br><span class="line">    &gt; partitioned by(month string)</span><br><span class="line">    &gt; row format delimited fields terminated by &#x27;\t&#x27;;</span><br><span class="line">    # 插入基本的数据</span><br><span class="line">	insert into table st partition(month=&#x27;202006&#x27;)values(3,&#x27;zs&#x27;),(2,&#x27;ww&#x27;);</span><br><span class="line">	# 查询单张表插入</span><br><span class="line">	insert overwrite table st partition(month=&#x27;202007&#x27;)</span><br><span class="line">    &gt; select id,name from st;</span><br><span class="line">    # 查询多张插入</span><br><span class="line">    from student</span><br><span class="line">    &gt; insert overwrite table student partition(month=&#x27;201707&#x27;)</span><br><span class="line">    &gt; select id, name where month=&#x27;201709&#x27;</span><br><span class="line">    &gt; insert overwrite table student partition(month=&#x27;201706&#x27;)</span><br><span class="line">    &gt; select id, name where month=&#x27;201709&#x27;;</span><br><span class="line"># 查询语句中创建表并加入数据</span><br><span class="line">create table st03</span><br><span class="line">&gt; as select id,name from st; </span><br></pre></td></tr></table></figure>
<h2 id="insert导出"><a class="markdownIt-Anchor" href="#insert导出"></a> insert导出</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># insert导出 导出目录，目录里有文件 去掉local可导到HDFS</span><br><span class="line">	# 未格式化</span><br><span class="line">	insert overwrite local directory &#x27;/opt/st&#x27; select * from st05;</span><br><span class="line">	# 格式化</span><br><span class="line">	insert overwrite local directory &#x27;/opt/st&#x27; row format delimited fields terminated by &#x27;\t&#x27; select * from st05;</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set 变量名=值</span><br><span class="line">$&#123;hiveconf:变量名&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set hive.exec.mode.local.auto=true;</span><br></pre></td></tr></table></figure>
<h1 id="定时任务"><a class="markdownIt-Anchor" href="#定时任务"></a> 定时任务</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e #写一个定时任务</span><br><span class="line">键入i，进入编辑模式</span><br><span class="line">输入内容：</span><br><span class="line"># 每十分钟执行一次</span><br><span class="line">*/10 * * * * usr/sbin/ntpdate master</span><br><span class="line"># 早8到晚5，每半小时执行一次</span><br><span class="line">*/30 5-17 * * * usr/sbin/ntpdate master</span><br><span class="line">查看定时任务</span><br><span class="line">crontab -l</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>假期学习记录和总结</title>
    <url>/2019/08/21/%E5%81%87%E6%9C%9F%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E5%92%8C%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<hr />
<center> <font color=red size=50>知识点为我所了解,不保证完全正确</font> </center>
<hr/>
<h1 id="一"><a class="markdownIt-Anchor" href="#一"></a> 一</h1>
<p>  考试结束后,闲的无聊,不想打游戏,于是开始写代码.写了个 <a href="https://github.com/pengxiandyou/RockPaperScissors-BC-201908">剪刀石头布</a> 的小游戏.虽然没做到我想要的结果,但还不错.</p>
<p>  在这个小游戏制作过程中,我复习了上次Java实践的一些知识点,不知道东西就百度和问群友.这就是所谓的<font color= pink >面向百度编程</font>.有空我会上传到我的 <s><a href="https://github.com/pengxiandyou">Github</a></s> (已上传)或者<a href="https://gitee.com/pengxiandyou">码云</a>上</p>
<p>  在这之前我还为我的红警写了一个简单的文件删除工具.</p>
<p>知识点</p>
<ol>
<li>
<p>重写<code>JPanel</code>使之可以带背景图片,再次改写使之可以为后面切换背景做铺垫</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span>  </span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">paintComponent</span><span class="params">(Graphics g)</span> &#123;  </span><br><span class="line">	 <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;src\\rock_paper_scissors\\背景.jpg&quot;</span>); </span><br><span class="line">	<span class="type">Image</span> <span class="variable">img</span> <span class="operator">=</span> icon.getImage();  </span><br><span class="line">	g.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, icon.getIconWidth(), icon.getIconHeight(), 	icon.getImageObserver());  </span><br><span class="line">&#125;&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>了解了一点画布概念</p>
</li>
<li>
<p>获取当前时间<code>System.currentTimeMillis()</code></p>
</li>
<li>
<p>每隔多少时间执行一次</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Timer timer=<span class="keyword">new</span> <span class="title class_">Timer</span>(<span class="literal">false</span>);</span><br><span class="line">timer.schedule(<span class="keyword">new</span> <span class="title class_">TimerTask</span>() &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">代码;</span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="number">0</span>, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>JFrame</code>设置大小时要注意包含边框</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;窗口边框上&quot;</span>+jf.getInsets().top);<span class="comment">//上</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口边框下&quot;</span>+jf.getInsets().bottom);<span class="comment">//下</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口边框左&quot;</span>+jf.getInsets().left);<span class="comment">//左</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口边框右&quot;</span>+jf.getInsets().right);<span class="comment">//右</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;内容面板宽度&quot;</span>+jf.getContentPane().getSize().width);<span class="comment">//宽 jf.getContentPane()好像可以不加</span></span><br><span class="line">System.out.println(<span class="string">&quot;内容面板的高度&quot;</span>+jf.getContentPane().getSize().height);<span class="comment">//高</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>浏览器打开指定链接</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Desktop</span> <span class="variable">desktop</span> <span class="operator">=</span> Desktop.getDesktop(); </span><br><span class="line">desktop.browse(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;https://space.bilibili.com/20837528&quot;</span>));</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>文件选择器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">JFrame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFrame</span>();</span><br><span class="line"><span class="comment">// 创建一个默认打开用户文件夹的问价选择器</span></span><br><span class="line"><span class="type">JFileChooser</span> <span class="variable">chooser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFileChooser</span>();</span><br><span class="line"><span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> chooser.showOpenDialog(frame);</span><br><span class="line"></span><br><span class="line"><span class="comment">//若选择了文件，则打印选择了什么文件</span></span><br><span class="line"><span class="keyword">if</span> (flag == JFileChooser.APPROVE_OPTION) &#123;</span><br><span class="line">	System.out.println(<span class="string">&quot;用户选择了文件：&quot;</span> + chooser.getSelectedFile());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>对于路径这些,打包要注意.<code>jar</code>包里读文件没学会实在太难了</p>
</li>
<li>
<p>通过<code>File</code>获取当前路径</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">directory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;.&quot;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    System.out.println(directory.getCanonicalPath()); </span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>一些监听器,一些小知识点</p>
</li>
<li>
<p>这个真不能保证对,主要我没学透,而且有好多不同的图.个人感觉这张是比较对的</p>
<p><img data-src="https://i.loli.net/2019/08/21/eFmJnQzKLHZfh8N.png" alt="JFream.png" /></p>
</li>
</ol>
<h1 id="二"><a class="markdownIt-Anchor" href="#二"></a> 二</h1>
<p>​	  假期中还学了一些其他的.<code>JFrame</code>和<code>JPanel</code>的进一步了解.学习了Git和Github,并注册了Github账号,而且在Github上搭建静态博客.学习了MarkDown语法.学习了Java的一些小知识点(好像没记住).进一步学习了集合和IO流.简单学习了数据库.进一步学习JDBC.模仿使用了Test.使用了c3p0.使用了beanutils.使用了dbutils.进一步学习了MySQL.进一步学习了HTML.学习lCSS.学习JavaScript.进一步学习了JavaWeb.进一步学习了socket编程.简单了解了设计模式.了解JAVA新特性,即拉姆达表达式和函数式接口.学习了计算机二级的MS Office.学习了idea和eclipse的一些快捷键.</p>
<p>​	  有空我会把 <a href="https://pengxiandyou.github.io/2019/08/22/MySQL%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0%E4%B8%80/">MySQL的笔记</a>, <a href="https://pengxiandyou.github.io/2019/08/27/HTML%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">HTML的笔记</a> ,<a href="https://pengxiandyou.github.io/2019/10/01/CSS%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">CSS的笔记</a>, <a href="https://pengxiandyou.github.io/2019/10/24/JavaScript%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">JavaScript的笔记</a>写成博客</p>
<center> <font color=pink>最后祝您生活愉快</font> </center>]]></content>
      <categories>
        <category>记录</category>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>记录</tag>
        <tag>学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据技能竞赛搭建流程大致计划v2.1</title>
    <url>/2020/07/23/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E8%83%BD%E7%AB%9E%E8%B5%9B%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B%E5%A4%A7%E8%87%B4%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h1 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h1>
<ol>
<li>
<p>根据选拔赛说明，极大概率没有连接验证的题。</p>
</li>
<li>
<p>关于yum源题：更新本地源，这一题有可能卡住。</p>
</li>
<li>
<p>当某一题卡住或有点慢，后面的题也可以做，验证是多点几次。</p>
</li>
<li>
<p>一些命令里的文件或目录，我写全了，可视情况修改。</p>
</li>
<li>
<p>可提前建好上传。xftp里在/usr/下建的文件夹为java hive hadoop zookeeper。</p>
</li>
<li>
<p>hadoop等复制配置文件时，<font color=red>注意不要少复制或者多复杂或者粘帖时覆盖了部分单词</font></p>
</li>
<li>
<p>环境变量为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TZ=&#x27;Asia/Shanghai&#x27;; export TZ</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_171</span><br><span class="line">export HADOOP_HOME=/usr/hadoop/hadoop-2.7.3</span><br><span class="line">export HIVE_HOME=/usr/hive/apache-hive-2.1.1-bin</span><br><span class="line">export ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.10</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin:$ZOOKEEPER_HOME/bin</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>提前mysql安装（slave23），文档里有一句安装epel源：<code>yum -y install epel-release</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 可用weget。文档里是8.noarch.rpm</span><br><span class="line">yum -y install http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"># 文档里用rpm -ivh mysql57-community-release-el7-10.noarch.rpm。我们用了yum，应该不用了。</span><br><span class="line"># 安装</span><br><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="一-更新本地源"><a class="markdownIt-Anchor" href="#一-更新本地源"></a> 一 、更新本地源</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">由于这一块不熟，命令视情况运行。</span><br><span class="line">发信号给 yum 进程：pkill -9 yum</span><br><span class="line">进入 yum 源配置文件：cd /etc/yum.repos.d</span><br><span class="line">如果需要，把CentOS-Base.repo备份一下，把下载的或已有的repo重名为CentOS-Base.repo。</span><br><span class="line">可能会用到的命令</span><br><span class="line">	curl -o /etc/yum.repos.d/CentOS-Base.repo 地址（http://等）</span><br><span class="line">	或</span><br><span class="line">	wget -O /etc/yum.repos.d/CentOS-Base.repo 地址（http://等）</span><br><span class="line">（不一定执行）删除所有文件：rm -rf	*</span><br><span class="line">下载 yum 源：wget http://10.10.31.2:8000/bigdata/repofile/bigdata.repo</span><br><span class="line">清除YUM 缓存：yum clean all</span><br><span class="line">更新元数据 ：yum makecache</span><br></pre></td></tr></table></figure>
<h1 id="二-防火墙"><a class="markdownIt-Anchor" href="#二-防火墙"></a> 二、防火墙</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure>
<h1 id="三-映射"><a class="markdownIt-Anchor" href="#三-映射"></a> 三、映射</h1>
<ol>
<li>
<p>修改主机名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname master</span><br><span class="line">hostnamectl set-hostname slave1</span><br><span class="line">hostnamectl set-hostname slave2</span><br><span class="line">hostnamectl set-hostname slave3</span><br><span class="line">bash</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>映射</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">172. master</span><br><span class="line">172. slave1</span><br><span class="line">172. slave2</span><br><span class="line">172. slave3</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="四-时区更改"><a class="markdownIt-Anchor" href="#四-时区更改"></a> 四、时区更改</h1>
<h2 id="说明-2"><a class="markdownIt-Anchor" href="#说明-2"></a> 说明</h2>
<p>预设的<code>TZ='Asia/Shanghai'; export TZ</code>会视情况加入到环境变量配置文件（/etc/profile）中。</p>
<p>时区可能不一定更改。</p>
<h2 id="命令"><a class="markdownIt-Anchor" href="#命令"></a> 命令</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date 查看时间</span><br><span class="line">tzselect </span><br><span class="line">5911</span><br><span class="line">在命令行里执行TZ=&#x27;Asia/Shanghai&#x27;; export TZ也可以</span><br><span class="line">此时就可以把环境变量配好发送生效</span><br></pre></td></tr></table></figure>
<h1 id="五-ntp"><a class="markdownIt-Anchor" href="#五-ntp"></a> 五、ntp</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三台或四台下载安装ntp</span><br><span class="line">yum install -y ntp</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">master修改/etc/ntp.conf</span><br><span class="line">vim /etc/ntp.conf</span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br><span class="line">（最好做如此操作）如果要屏蔽默认服务器，在server 0~n前加上#</span><br><span class="line">层级为10指stratum 10</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在master执行下面之一应该即可</span><br><span class="line">重启服务</span><br><span class="line">systemctl restart ntpd.service</span><br><span class="line">启动</span><br><span class="line">systemctl start ntpd</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">同步</span><br><span class="line">ntpdate master</span><br></pre></td></tr></table></figure>
<h1 id="六-定时任务"><a class="markdownIt-Anchor" href="#六-定时任务"></a> 六、定时任务</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e #写一个定时任务</span><br><span class="line">键入i，进入编辑模式</span><br><span class="line">输入内容：</span><br><span class="line"># https://tool.lu/crontab/</span><br><span class="line"># 每十分钟执行一次</span><br><span class="line">*/10 * * * * usr/sbin/ntpdate master</span><br><span class="line"># 早8到晚5，每半小时执行一次</span><br><span class="line">*/30 8-17 * * * usr/sbin/ntpdate master</span><br><span class="line">查看定时任务</span><br><span class="line">crontab -l</span><br></pre></td></tr></table></figure>
<h1 id="七-ssh"><a class="markdownIt-Anchor" href="#七-ssh"></a> 七、ssh</h1>
<h2 id="说明-3"><a class="markdownIt-Anchor" href="#说明-3"></a> 说明</h2>
<p>有可能题目要求我们不使用简单的，故把两种方式都写出。当然也可以先试一试简单的，尽量根据题目来，尽管官方教学视频是rsa。不过，官方的复制方法不一样。</p>
<p>对于authorized_keys的权限，要修改的话，用 <code>chmod 600 authorized_keys</code>。</p>
<p>其中命令里的<code>~</code>和<code>/root</code>，如果出问题，可尝试互换，并步意味着两者等价。具体等更新。</p>
<h2 id="dsa"><a class="markdownIt-Anchor" href="#dsa"></a> dsa</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">生成公钥文件</span><br><span class="line">ssh-keygen -t dsa -P &#x27;&#x27; -f ~/.ssh/id_dsa</span><br><span class="line">质疑上述命令</span><br><span class="line">可尝试ssh-keygen -t dsa</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">内容添加至授权文件</span><br><span class="line">cat /root/.ssh/id_dsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br><span class="line">或</span><br><span class="line">cp /root/.ssh/id_dsa.pub  /root/.ssh/authorized_keys</span><br><span class="line">这时可尝试连接 ssh master</span><br><span class="line">退出用exit</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">其他结点</span><br><span class="line">在具体结点（slave123）下执行相应的命令</span><br><span class="line">scp master:~/.ssh/id_dsa.pub ~/.ssh/master_dsa.pub</span><br><span class="line">或下面这个也行，应该。如要用，还是用上面的。-r表示递归复制</span><br><span class="line">scp master:/root/.ssh/id_dsa.pub /root/.ssh/master_dsa.pub</span><br><span class="line"></span><br><span class="line">cat /root/.ssh/master_dsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br><span class="line">或</span><br><span class="line">cp /root/.ssh/master_dsa.pub  /root/.ssh/authorized_keys</span><br><span class="line">这时可尝试连接ssh slave123</span><br><span class="line">退出用exit</span><br><span class="line"># 配置好后可以不进行连接，先验证。不通过再进行下面的连接测试等。</span><br><span class="line"># 注：此时在slave1连接slave1并退出后，要在master连接slave1，其他结点同理。这是根据文档意思得出的。可能和jobtracker有关。</span><br></pre></td></tr></table></figure>
<h2 id="rsa"><a class="markdownIt-Anchor" href="#rsa"></a> rsa</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id master</span><br><span class="line">ssh-copy-id slave1</span><br><span class="line">ssh-copy-id slave2</span><br><span class="line">ssh-copy-id slave3</span><br><span class="line">此方式要输密码</span><br></pre></td></tr></table></figure>
<p>虽然上述命令已经搞定了，但还是可以在复制的时候使用类似dsa的方式。猜测dsa也可以用<code>ssh-copy-id</code>的方式（未验证）。</p>
<h1 id="八-jdk"><a class="markdownIt-Anchor" href="#八-jdk"></a> 八、jdk</h1>
<h2 id="说明-4"><a class="markdownIt-Anchor" href="#说明-4"></a> 说明</h2>
<p>此时可以创建文件夹了，hive、hadoop、java、zookeeper。</p>
<p>可以提前在windows上先建好usr文件夹，再在usr文件夹下建4个文件夹，最后在xftp里右键上传覆盖至usr所在的根目录。我已经在本地建好了。</p>
<p>可以分别配或者解压配好后分发。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/soft/jdk-8u171-linux-x64.tar.gz -C /usr/java/</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r /usr/java/ slave1:/usr/</span><br><span class="line">scp -r /usr/java/ slave2:/usr/</span><br><span class="line">scp -r /usr/java/ slave3:/usr/</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># TZ=&#x27;Asia/Shanghai&#x27;; export TZ</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_171</span><br><span class="line">export HADOOP_HOME=/usr/hadoop/hadoop-2.7.3</span><br><span class="line">export HIVE_HOME=/usr/hive/apache-hive-2.1.1-bin</span><br><span class="line">export ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.10</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin:$ZOOKEEPER_HOME/bin</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<h1 id="九-zookeeper"><a class="markdownIt-Anchor" href="#九-zookeeper"></a> 九、zookeeper</h1>
<p>这个到时候题目可能会要求先搭<a href="#hadoop">hadoop</a>，或者并行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/soft/zookeeper-3.4.10.tar.gz -C /usr/zookeeper/</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">拷贝zookeeper-3.4.10/conf/zoo_sample.cfg</span><br><span class="line">cp /usr/zookeeper/zookeeper-3.4.10/conf/zoo_sample.cfg /usr/zookeeper/zookeeper-3.4.10/conf/zoo.cfg</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置zoo.cfg</span><br><span class="line">vim /usr/zookeeper/zookeeper-3.4.10/conf/zoo.cfg</span><br><span class="line">修改dataDir=/usr/zookeeper/zookeeper-3.4.10/zkdata</span><br><span class="line">他未添加dataLogDir=/usr/zookeeper/zookeeper-3.4.10/zkdatalog</span><br><span class="line"># 如果动态添加，到时视情况添上slave3或者修改slave2为slave3</span><br><span class="line">    server.1=master:2888:3888</span><br><span class="line">    server.2=slave1:2888:3888</span><br><span class="line">    server.3=slave2:2888:3888</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建文件夹</span><br><span class="line">mkdir -p /usr/zookeeper/zookeeper-3.4.10/zkdata</span><br><span class="line">mkdir -p /usr/zookeeper/zookeeper-3.4.10/zkdatalog</span><br><span class="line">创建myid</span><br><span class="line">vim /usr/zookeeper/zookeeper-3.4.10/zkdata/myid</span><br><span class="line">写1 修改23</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r /usr/zookeeper slave1:/usr/</span><br><span class="line">scp -r /usr/zookeeper slave2:/usr/</span><br><span class="line">scp -r /usr/zookeeper slave3:/usr/</span><br><span class="line">分发后修改myid</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动zkServer.sh start</span><br><span class="line">状态zkServer.sh status</span><br><span class="line">注意要都启动再看状态，否则会看到Connection refused (Connection refused) 误以为配错了</span><br><span class="line">启动顺序 master slave1 slave2 ，slave1会是leader</span><br></pre></td></tr></table></figure>
<h2 id="日志"><a class="markdownIt-Anchor" href="#日志"></a> 日志</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dataDir=/usr/zookeeper/zookeeper-3.4.10/zkdata</span><br><span class="line">dataLogDir=/usr/zookeeper/zookeeper-3.4.10/zkdatalog</span><br></pre></td></tr></table></figure>
<h1 id="十-a-namehadoophadoopa"><a class="markdownIt-Anchor" href="#十-a-namehadoophadoopa"></a> 十、<a name="hadoop">hadoop</a></h1>
<p>如果官方给出的配置较少，跟随官方。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/soft/hadoop-2.7.3.tar.gz -C /usr/hadoop/</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/hadoop//usr/hadoop/hadoop-2.7.3/etc/hadoop</span><br></pre></td></tr></table></figure>
<h2 id="hadoop-envsh"><a class="markdownIt-Anchor" href="#hadoop-envsh"></a> <a href="http://hadoop-env.sh">hadoop-env.sh</a></h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim hadoop-env.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /usr/hadoop/hadoop-2.7.3/etc/hadoop/hadoop-env.sh</span><br><span class="line">修改export JAVA_HOME=/usr/java/jdk1.8.0_171</span><br></pre></td></tr></table></figure>
<h2 id="core-sitexml"><a class="markdownIt-Anchor" href="#core-sitexml"></a> core-site.xml</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim core-site.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://master:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/usr/hadoop/hadoop-2.7.3/hdfs/tmp&lt;/value&gt;</span><br><span class="line">        &lt;!--他们直接在tmp下，没有hdfs--&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;io.file.buffer.size&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;131072&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.checkpoint.period&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;60&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.checkpoint.size&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;67108864&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h2 id="hdfs-sitexml"><a class="markdownIt-Anchor" href="#hdfs-sitexml"></a> hdfs-site.xml</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim  hdfs-site.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">                &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;2&lt;/value&gt;</span><br><span class="line">                &lt;!--研究院写的3--&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;file:/usr/hadoop/hadoop-2.7.3/hdfs/name&lt;/value&gt;</span><br><span class="line">                &lt;final&gt;true&lt;/final&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">          &lt;property&gt;</span><br><span class="line">                &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;file:/usr/hadoop/hadoop-2.7.3/hdfs/data&lt;/value&gt;</span><br><span class="line">                &lt;final&gt;true&lt;/final&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">          &lt;property&gt;</span><br><span class="line">                &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;master:9001&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">          &lt;property&gt;</span><br><span class="line">                &lt;name&gt;dfs.webhdfs.enabled&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">         &lt;/property&gt;</span><br><span class="line">          &lt;property&gt;</span><br><span class="line">                &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">         &lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h2 id="slaves"><a class="markdownIt-Anchor" href="#slaves"></a> slaves</h2>
<p>由于动态添加，这里到时候会可能会删除slave2，添加上slave3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim slaves</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure>
<h2 id="master"><a class="markdownIt-Anchor" href="#master"></a> master</h2>
<p>这个应该没有</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim master</span><br><span class="line">master</span><br></pre></td></tr></table></figure>
<h2 id="yarn-envsh"><a class="markdownIt-Anchor" href="#yarn-envsh"></a> <a href="http://yarn-env.sh">yarn-env.sh</a> 文档无</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim yarn-env.sh</span><br><span class="line">改export JAVA_HOME=/usr/java/jdk1.8.0_171/</span><br></pre></td></tr></table></figure>
<h2 id="yarn-sitexml"><a class="markdownIt-Anchor" href="#yarn-sitexml"></a> yarn-site.xml</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim yarn-site.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.address&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;master:18040&lt;/value&gt;</span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;master:18030&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;master:18088&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;master:18025&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;master:18141&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.nodemanager.auxservices.mapreduce.shuffle.class&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt; </span><br><span class="line">	&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h2 id="mapred-sitexml"><a class="markdownIt-Anchor" href="#mapred-sitexml"></a> mapred-site.xml</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp mapred-site.xml.template  mapred-site.xml</span><br><span class="line">vim mapred-site.xml</span><br><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;mapreduce.framework.name&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;yarn&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h2 id="分发"><a class="markdownIt-Anchor" href="#分发"></a> 分发</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r /usr/hadoop slave1:/usr/</span><br><span class="line">scp -r /usr/hadoop slave2:/usr/</span><br><span class="line">scp -r /usr/hadoop slave3:/usr/</span><br></pre></td></tr></table></figure>
<h2 id="启动和查看"><a class="markdownIt-Anchor" href="#启动和查看"></a> 启动和查看</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动</span><br><span class="line">	master格式化 hadoop namenode -format</span><br><span class="line">	start-all.sh</span><br><span class="line">查看</span><br><span class="line">	master:50070</span><br><span class="line">	master:18088</span><br></pre></td></tr></table></figure>
<h2 id="日志-2"><a class="markdownIt-Anchor" href="#日志-2"></a> 日志</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;HADOOP_HOME&#125;/logs</span><br></pre></td></tr></table></figure>
<h2 id="案例"><a class="markdownIt-Anchor" href="#案例"></a> 案例</h2>
<ul>
<li>
<p>wordcount</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 如果/input不存在，最后用-mkdir -p 创建一下。单引号应该可以去掉。</span><br><span class="line">hadoop fs -put &#x27;wordcount.txt&#x27; /input</span><br><span class="line">hadoop jar $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount /input/wordcount.txt /output</span><br><span class="line">hadoop fs -cat /output/part-r-00000</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>pi</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop jar $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi 5 5</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="十一-动态添加和删除"><a class="markdownIt-Anchor" href="#十一-动态添加和删除"></a> 十一、动态添加和删除</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地源、防火墙、时区（date可看）、hosts、ssh、同步时间</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">环境变量、jdk、hadoop</span><br></pre></td></tr></table></figure>
<h2 id="说明-5"><a class="markdownIt-Anchor" href="#说明-5"></a> 说明</h2>
<p>命令里<code>sbin/</code>可视情况删除或添加（我都删了）。</p>
<p>dfs.replication如果配得大话，应该适当减小。</p>
<p>虽然可以通过停止集群来添加结点，但尽量不要，毕竟题目要动态。</p>
<h2 id="添加"><a class="markdownIt-Anchor" href="#添加"></a> 添加</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">每台slaves添加slave3（有教程只修改了master的slaves，我测试时发现可行）</span><br><span class="line">vim /usr/hadoop//usr/hadoop/hadoop-2.7.3/etc/hadoop/slaves</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slave3下</span><br><span class="line">hadoop-daemon.sh start datanode</span><br><span class="line">yarn-daemon.sh start nodemanager</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">master下（namenode）</span><br><span class="line">刷新（看web会有三台）：hdfs dfsadmin -refreshNodes</span><br><span class="line">均衡block:start-balancer.sh</span><br><span class="line">查看存活的节点：hdfs dfsadmin -report</span><br><span class="line">也可在web页面查看</span><br></pre></td></tr></table></figure>
<h2 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h2>
<h3 id="临时删除-可不看"><a class="markdownIt-Anchor" href="#临时删除-可不看"></a> 临时删除-可不看</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop-daemon.sh stop datanode </span><br><span class="line">hadoop-daemon.sh stop tasktracker</span><br></pre></td></tr></table></figure>
<h3 id="hdfs-sitexml-2"><a class="markdownIt-Anchor" href="#hdfs-sitexml-2"></a> hdfs-site.xml</h3>
<p>如果删除验证不通过，可以配全，当就要编写datanode-allow.list了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /usr/hadoop/hadoop-2.7.3/etc/hadoop/hdfs-site.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.hosts.exclude&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/usr/hadoop/hadoop-2.7.3/etc/hadoop/excludes&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;!--还可以添加下面，大部分教程没有。不加的话，slaves里默认都是允许的。加了的话，要仿excludes--&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.hosts&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/usr/hadoop/hadoop-2.7.3/etc/hadoop/datanode-allow.list&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h3 id="excludes"><a class="markdownIt-Anchor" href="#excludes"></a> excludes</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /usr/hadoop/hadoop-2.7.3/etc/hadoop/excludes</span><br><span class="line">写要删除的结点 slave2 有可能要求加回slave2删除slave3</span><br></pre></td></tr></table></figure>
<h3 id="执行一些命令"><a class="markdownIt-Anchor" href="#执行一些命令"></a> 执行一些命令</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">master下</span><br><span class="line">刷新所有datanode：hdfs dfsadmin -refreshNodes</span><br><span class="line"># 有的教程此处跳至均衡了</span><br><span class="line">查看存活结点：hdfs dfsadmin -report</span><br><span class="line">状态：Decommission In Progress（退役）</span><br><span class="line">	执行完毕后：Decommission Status：Decommissioned</span><br><span class="line">	可在web（masterIP:50070）看</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可能需要等待一会，直到web页面显示dead</span><br><span class="line">在删除的结点上</span><br><span class="line">hadoop-daemon.sh stop datanode</span><br><span class="line">yarn-daemon.sh stop nodemanager </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">master下</span><br><span class="line">start-balancer.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">去掉slaves里的slave，excludes里也可以去掉slave3</span><br><span class="line">#下面是官方ppt有但没有口头说</span><br><span class="line">从namenode的excludes、slaves、hosts（我觉得不需要）去掉删除的主机名</span><br><span class="line">所有datanode上执行hadoop-pull.sh（没有这个）</span><br></pre></td></tr></table></figure>
<h1 id="十二-hive"><a class="markdownIt-Anchor" href="#十二-hive"></a> 十二、hive</h1>
<h2 id="说明-6"><a class="markdownIt-Anchor" href="#说明-6"></a> 说明</h2>
<ol>
<li>为了节约时间，可提前在slaves2和slave3（看情况）安装mysql。</li>
<li>如果题目要求，可把10改成8，文档是8。</li>
<li>master作为client，slave1作为 hive server，slave2或3安装mysql server。</li>
<li>hive-env.sh里如果要配三个，是HADOOP_HOME、hive的conf目录、hive的lib目录。</li>
</ol>
<h2 id="slave2或slave3"><a class="markdownIt-Anchor" href="#slave2或slave3"></a> slave2或slave3</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">(/etc/yum.repos.d会有相应文件)</span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line">grep &quot;password&quot; /var/log/mysqld.log # 有不需要密码的进入方式，暂不使用</span><br><span class="line">复制密码进入mysql，mysql -uroot -p</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=6;</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">可以重进一下</span><br><span class="line"># 下面两个用其中一个，我第二个一直让我输入</span><br><span class="line">    # update user set host=&#x27;%&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">    # grant all privileges on *. * to &#x27;root&#x27;@&#x27;%  with grant option;</span><br><span class="line"># 刷新权限，这个似乎有争议</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">上传connectior-java-5.1.5包到slave1:/usr/local/apache-hive-2.3.7-bin/lib，比赛时应该会在某个地方，文档说slave2：/lib下</span><br><span class="line">scp /lib/mysql-connectior-java-5.1.5-bin.jar slave1:/usr/hive/apache-hive-2.1.1-bin/lib</span><br></pre></td></tr></table></figure>
<h2 id="slave1"><a class="markdownIt-Anchor" href="#slave1"></a> slave1</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">传-解压或解压-传，自行决定</span><br><span class="line">master下：</span><br><span class="line">tar -zxvf /opt/soft/apache-hive-2.1.1-bin.tar.gz -C /usr/hive/</span><br><span class="line">scp -r /usr/hive slave1:/usr/</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/hive/apache-hive-2.1.1-bin/conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slave1的hive的conf下</span><br><span class="line">cp /usr/hive/apache-hive-2.1.1-bin/conf/hive-env.sh.template /usr/hive/apache-hive-2.1.1-bin/conf/hive-env.sh</span><br><span class="line">或</span><br><span class="line">cp hive-env.sh.template hive-env.sh</span><br><span class="line">vim hive-env.sh</span><br><span class="line">或</span><br><span class="line">vim /usr/hive/apache-hive-2.1.1-bin/conf/hive-env.sh</span><br><span class="line">修改HADOOP_HOME=/usr/hadoop/hadoop-2.7.3</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slave1的hive的conf下</span><br><span class="line">vim hive-site.xml</span><br><span class="line">或</span><br><span class="line">vim /usr/hive/apache-hive-2.1.1-bin/conf/hive-site.xml</span><br><span class="line">添加</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/user/hive_remote/warehouse&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;jdbc:mysql://slave2:3306/hive?createDatabaseIfNotExist=true&amp;amp;useSSL=false&amp;amp;characterEncoding=UTF-8&lt;/value&gt;</span><br><span class="line">        &lt;!--文档里没使用，但官方视频使用了&amp;amp;useSSL=false又加上&amp;amp;characterEncoding=UTF-8--&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">        &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">        &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;root&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">        &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;123456&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hive.metastore.schema.verification&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">        &lt;name&gt;datanucleus.schema.autoCreateAll&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">     &lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h2 id="master-2"><a class="markdownIt-Anchor" href="#master-2"></a> master</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/hive/apache-hive-2.1.1-bin/lib/jline-2.12.jar /usr/hadoop/hadoop-2.7.3/share/hadoop/yarn/lib/</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/hive/apache-hive-2.1.1-bin/conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim hive-env.sh</span><br><span class="line">修改HADOOP_HOME=/usr/local/hadoop-2.7.3</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim hive-site.xml</span><br><span class="line">添加</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/user/hive_remote/warehouse&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hive.metastore.local&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hive.metastore.uris&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;thrift://slave1:9083&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">     &lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h2 id="启动"><a class="markdownIt-Anchor" href="#启动"></a> 启动</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slave1下</span><br><span class="line">		hive --service metastore</span><br><span class="line">master下</span><br><span class="line">		hive</span><br><span class="line">		测试show databases;</span><br><span class="line"># 报Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span><br><span class="line">有可能&lt;name&gt;hive.metastore.uris&lt;/name&gt;值写错了</span><br><span class="line"># 报 Could not create ServerSocket on address 0.0.0.0/0.0.0.0:9083.</span><br><span class="line">可尝试把runjar杀掉</span><br></pre></td></tr></table></figure>
<h2 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; set hive.exec.mode.local.auto=true;</span><br></pre></td></tr></table></figure>
<h2 id="日志-3"><a class="markdownIt-Anchor" href="#日志-3"></a> 日志</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /tmp/root/hive.log</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>尽可能使adb命令支持中文</title>
    <url>/2024/01/03/%E5%B0%BD%E5%8F%AF%E8%83%BD%E4%BD%BFadb%E5%91%BD%E4%BB%A4%E6%94%AF%E6%8C%81%E4%B8%AD%E6%96%87/</url>
    <content><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2>
<p>由于我为了成功给手机刷机，所以会安装不同的手机驱动。这导致我的手机并不能直接连接usb后在文件管理器中使用。只能领辟蹊径。而我在文件传输过程（手机to电脑、电脑to手机）中我用的方式有：</p>
<ul>
<li>usb连接，文件管理器拖拽</li>
<li>蓝牙连接（小文件、不能usb、wifi连不上等特殊场景，速度慢）</li>
<li>FTP（我电脑有比较好用的软件，手机又方便开ftp服务器，速度较快）</li>
<li>scp命令（不方便，主要原因是windows 和手机的用户名和ip不方便输入，手机要安装终端，速度快）</li>
<li>网络工具（微信、qq、QQ邮箱、临时存储等互联网工具）</li>
<li>adb命令（我最喜欢，速度快，操作简单）</li>
</ul>
<p>虽然adb命令传文件方便，但这是对手机路径熟悉、对各个app的存储路径有了解的情况下，才成立。</p>
<p>使用adb命令传文件需要手机打开调试（我一直开着）、电脑有adb环境，这时usb连接，输入adb命令就可以了。</p>
<p>经常使用后，会发现，adb命令对中文支持不是很友好。</p>
<h2 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h2>
<p>目标：使用<code>adb pull</code>和<code>adb push</code>时，能保证中文正常显示。</p>
<h3 id="治标不治本方式"><a class="markdownIt-Anchor" href="#治标不治本方式"></a> 治标不治本方式</h3>
<p>既然adb不支持中文，那么我们可以将中文转换为英文。</p>
<ol>
<li>构建中英文对照标；</li>
<li>分别在电脑端和手机端编写程序对目标进行转换，电脑端可以写好多种，不过我觉得bat脚本比较好，手机端写shell；</li>
<li>传输后，再进行转换；</li>
<li>可以对命令进行包装，这样就少一点步骤了。</li>
</ol>
<p>这种方式是不是很好笑。虽然挺有趣的，但感觉不太好。</p>
<h3 id="有效方式"><a class="markdownIt-Anchor" href="#有效方式"></a> 有效方式</h3>
<p>对于大佬而言，对源码进行修改编译打包就好了。但对我们而言，虽然能完成当，要耗费一些时间。</p>
<p>我们应该知道，我们有奇思妙想，前人也有奇思妙想；我们有困难，前人同样有困难。所以我们可以站在巨人的肩膀上。如果心理有些过不去，可以简单实现一个轮子，再去使用大佬的轮子。</p>
<h2 id="安装支持中文的adb"><a class="markdownIt-Anchor" href="#安装支持中文的adb"></a> 安装支持中文的adb</h2>
<h3 id="第一步"><a class="markdownIt-Anchor" href="#第一步"></a> 第一步</h3>
<p>这一步的目标是找到大佬修改好的adb。如果你在百度搜索，大概率是会找到要积分的地方（我没说是csdn）。所以你可以在github或gtiee等地方搜索。</p>
<p>不要告诉我，你不知道搜索内容。直接搜索“adb 中文”。</p>
<h3 id="第二步"><a class="markdownIt-Anchor" href="#第二步"></a> 第二步</h3>
<p>这一步的目标是下载。下载的方式多种多样，总有你会的吧。只要它能到你电脑就行了。你可以使用很多下载工具。</p>
<p>比如，我找的地址是这个https://github.com/Wonfee/adb，由于他没有release ，所以我使用git工具用<code>git clone</code>。</p>
<p>按理说，此时你已经可以在此文件夹下使用了</p>
<h3 id="第三步"><a class="markdownIt-Anchor" href="#第三步"></a> 第三步</h3>
<p>为了方便使用，可以配置环境变量，相信你会（不会，百度）。配置好后就可以丝滑使用了。</p>
<p>如果你想要保留你之前的和此次下载的adb，也可以。方法如下：</p>
<ol>
<li>
<p>在PATH里相对引用一个变量，不如就叫&quot;ADB&quot;吧。（观察现有的，你就知道怎么引用了）</p>
</li>
<li>
<p>通过改变&quot;ADB&quot;变量的值就可以使用不同版本的adb了。（相信你知道这个值就是adb的路径）</p>
</li>
<li>
<p>为了简化改值操作，我们可以编写脚本。</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">:: 变量延迟 虽然感觉此处不需要</span><br><span class="line">setlocal ENABLEDELAYEDEXPANSION</span><br><span class="line"></span><br><span class="line">:: 管理员权限</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">1 mshta vbscript:CreateObject(<span class="string">&quot;Shell.Application&quot;</span>).ShellExecute(<span class="string">&quot;cmd.exe&quot;</span>,<span class="string">&quot;/c %~s0 ::&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;runas&quot;</span>,1)(window.close)&amp;&amp;<span class="built_in">exit</span></span></span><br><span class="line">cd /d &quot;%~dp0&quot;</span><br><span class="line"></span><br><span class="line">::换成utf-8</span><br><span class="line">chcp 65001</span><br><span class="line"></span><br><span class="line">::预设变量 可以直接制定，也可以将值存在环境变量中。我下面这样写是因为下面的if不知道为什么会失败，只要能动，我就不改了。</span><br><span class="line">set adb = %ADB%</span><br><span class="line">set adb_0 = &quot;D:\Android\中文adb&quot;</span><br><span class="line">set adb_1 = %ADB_1%</span><br><span class="line"></span><br><span class="line">::交换，会换成绝对路径，要相对引用的话，可以用%%转义一个%，不过名字要改成环境变量的名字。</span><br><span class="line">if &quot;%adb%&quot; == &quot;%adb_0%&quot;  (</span><br><span class="line">	echo 换成adb1-当前最新</span><br><span class="line">	SETX /M ADB %ADB_1%</span><br><span class="line">	) else (</span><br><span class="line">	echo 换成adb0-支持中文</span><br><span class="line">	SETX /M ADB %ADB_0%</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line">rem pause</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>将脚本放在合适的位置，可以配置环境变量，这样使用时，也方便，不用找文件。</p>
</li>
</ol>
<p>怎么样，我这算是把饭喂到嘴边了吧。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>adb</tag>
      </tags>
  </entry>
  <entry>
    <title>异形工厂（shapezio）简单制造工厂</title>
    <url>/2021/08/11/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%EF%BC%88shapezio%EF%BC%89%E7%AE%80%E5%8D%95%E5%88%B6%E9%80%A0%E5%B7%A5%E5%8E%82/</url>
    <content><![CDATA[<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fca8e5562f29b0a07a42391b3679cd98f91d592fa16ff5c7bce303164e255298/68747470733a2f2f692e696d6775722e636f6d2f59355a326971512e706e67" one-link-mark="yes"><img data-src="https://camo.githubusercontent.com/fca8e5562f29b0a07a42391b3679cd98f91d592fa16ff5c7bce303164e255298/68747470733a2f2f692e696d6775722e636f6d2f59355a326971512e706e67" alt="shapez.io Logo" data-canonical-src="https://i.imgur.com/Y5Z2iqQ.png" style="max-width:100%;"></a></p>
<p>  你还为每过一关就要再造一个生产线而感到烦恼吗？快来建造一个工厂吧。我这个工厂简单易懂，甚至可以不用电路，仅需一点点操作。</p>
<h1 id="旧思路"><a class="markdownIt-Anchor" href="#旧思路"></a> 旧思路</h1>
<h2 id="要求"><a class="markdownIt-Anchor" href="#要求"></a> 要求</h2>
<p>  为了能做这个工厂，你必须要解锁图片中的设施。不用每一个都完全解锁，每种有一个就行。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210811224510%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E8%A6%81%E6%B1%82.PNG" alt="要求" /></p>
<h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2>
<p>  我们制作工厂是为了尽可能解放双手的操作，因此在设计之初暂不考虑效率，先解决有无的问题。速度不行的话还可以堆数量。虽然这不是一个完全自动化的工厂，但慢慢改嘛。</p>
<p>  由于暂时没有电路加持，工厂只能造简单的图形。类似于<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210811234108%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%9C%BA1.png" alt="机2_1" />和<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210811234139%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82.png" alt="机1_1" />，这种图形暂时只能单独造机器。自动化的方式还没思考出来。</p>
<style>
    img[alt="机1_1"]
    {
        display:inline-block;
        margin: 0;
    }
     img[alt="机2_1"]
    {
        display:inline-block;
        margin: 0;
    }
</style>
<p>  该教程是根据关卡徐徐渐进的，未解锁的物品如果能被替换，就会先被替换，解锁后更改。</p>
<h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2>
<p>  最终思路：从底层出发，对每一层进行分解。首先将原材料染色，然后进行旋转，接着根据产出材料的种类选择合成方式（二、三、四，一直接走旁边产物通道）。合成出每一层后再根据层数进行叠加。</p>
<h2 id="开搓"><a class="markdownIt-Anchor" href="#开搓"></a> 开搓</h2>
<p>  先看一个整体图，好有一个直观的感受。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210811234757%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%B7%A5%E5%8E%82.PNG" alt="全 - 副本" /></p>
<p>  在异形工厂中，所有图形都可以分解为一下四中图形的组合，我们将他们作为原材料输入到工厂中。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812000843%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%8E%9F%E6%9D%90%E6%96%99.PNG" alt="原材料" /></p>
<p>  可以在地图上找到相应的图形进行开采，或者单独为每种材料供应。如果采用图中挖掘包含所有材料的图形的话，要注意安装垃圾桶防止堵塞。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812001517%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%8E%9F%E6%9D%90%E6%96%99%E7%94%9F%E4%BA%A7.PNG" alt="原材料生成" /></p>
<p>  前期，我刚可以开始造工厂时，关卡要求都是两层图形。因此我们先考虑两层。不过在考虑两层前，我们先考虑一层。我们将图形分为四个象限。先进行染色在进行旋转。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812002147%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E8%B1%A1%E9%99%90.PNG" alt="一个象限" /></p>
<p>  这个工厂的一部分属于染色旋转区。由于没有颜料供应，染色器处于阻塞状态，没有产物输出。对于无色图形，我们通过控制传送带的断连来输出产物。在输出位置可以看到，我做了相应的旋转。这是为了旋转到相应的象限。</p>
<p>  相信你从上图中看出来，现阶段的工厂还需要我们操作，不过已经不用频繁造生成线了。这就像工厂生成物品一样，需要操作一些机器。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812002917%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E9%A2%9C%E6%96%99%E5%88%86%E9%85%8D.PNG" alt="基础颜色分配器" /></p>
<p>  这是我们的颜料分配器。它从下方输入7种颜料，从右侧输出颜料。可以看到，图中有4排传送带，它依次对应颜色的材料。将两者结合就可以得到下面这张图。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812003527%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E9%A2%9C%E6%96%99%E5%88%86%E9%85%8D%E4%BA%BA%E6%95%B0.PNG" alt="颜色和象限" /></p>
<p>  要使用它首先要人为确定该层该象限的图形和颜色。确定好后，选择对应材料的传送带，顺着传送带回走。在颜料分配区，选择对应的颜色，用传送带连接上平衡器。（在使用过程中，我有一种以前那种一次性烧录芯片烧录程序的感觉，虽然我没操作过，但我看过。）</p>
<p>  在这一个区域，总的来说，染色的话就用传送带连接对应平衡器。如果是无色的话，就断开所有颜色分配的传送带连接，连接上无色分配的传送带（在输出位置）。在关卡结束后，要断开所有自己手动连接添上的传送带。</p>
<p>  相信你已经造好了一个象限所需要的装置（上图），接下来，将其复制，拢共制作4份共4个象限，记得修改输出位置的旋转角度。制作好的效果类似于下图。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812005816%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E4%B8%80%E4%B8%AA%E5%8D%95%E5%85%83.PNG" alt="一个单元" /></p>
<p>  仔细观察上图，你会发现4个红色的地方。这个地方是垃圾桶，因为我不是单独供应原材料，如果不销毁多余的材料就无法剪出需要的材料。后期解锁过滤器后可以修改并保存大量原材料。</p>
<p>  将上面的装置复制一份就可以处理两层图形了，再复制两份就可以最多处理四层图形了。效果类似于下图。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812010756%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%824%E5%8D%95%E5%85%83.PNG" alt="4层" /></p>
<p>  接下来就是颜料供应了。我的供应是这样的。这个随你造了，反正都差不多。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812011016%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E9%A2%9C%E6%96%99%E4%BE%9B%E5%BA%94.PNG" alt="颜色" /></p>
<p>  颜料齐全后，就可以制造单层图形了。这里面要考虑只有一个象限、只有两个象限、只有三个象限、四个象限都有。因为当前无法自动化，先手工连接对应的合成模块。我的合成模块如下图。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812011635%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%90%88%E6%88%90%E6%A8%A1%E5%9D%97.PNG" alt="合成模块" /></p>
<p>  现在可以制造出每一层了，接下来就是层与层之间的叠加了。要考虑那个在下，那个在上。从左至右，分别是最底层、上一层、再上一层和最顶层。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812012432%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%8F%A0%E5%8A%A0.PNG" alt="叠加区域" /></p>
<p>  叠加层数也是通过传送带的断连来控制。</p>
<p>  到此时，一个需要人为操作而不要造的工厂就诞生了。它的使用方式是，分析每层每个象限是什么，要什么颜色。连接上传送带输出染色后的材料。接着根据每层的情况选择合适数量的合成模块制造出每一层。最后根据层数连接对应传送带。最最后通过该关卡后，要断开你所有连接的传送带。</p>
<p>  到这里，教程就可以算做是结束了。针对后期不在要求数量而是要求速度（产量），可以先挂机存储，合适时机在释放。</p>
<hr color="pink">
<p>  随着关卡的解锁，新的装置解锁后，可以修改原设置，使之更方便。</p>
<h2 id="改进"><a class="markdownIt-Anchor" href="#改进"></a> 改进</h2>
<p>  在解锁过滤器后，原先通过拆掉或连上传送带的动作可以利用过滤器和开关来简化动作，这样就只需要左击开关就可以控制流向了。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812170124%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%97%A0%E8%89%B2%E8%BF%87%E6%BB%A4%E5%99%A8.PNG" alt="无色开关" /></p>
<p>  当然在颜色分配器上，也可以修改，使之更容易操作，减少右键带来的误操作。有点久了，忘了合并器是在什么时候解锁的了，如何你没有解锁，也可以用平衡器替换合并器进行改造。<img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812170535%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E9%A2%9C%E8%89%B2%E5%BC%80%E5%85%B3.PNG" alt="开关颜色分配" /></p>
<p>  如果想直观显示颜色，可以像上面接个容器或者像下面一样接上显示器。</p>
<p><img data-src="https://i.loli.net/2021/08/12/fXtQZw8u1zslRd6.png" alt="显示颜色" /></p>
<p>  有了过滤器和容器，就可以在原材料制作处进行改进了。这样就不用担心原材料消耗不同而导致阻塞必须添加垃圾桶的境况。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812174618%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E8%A7%A3%E5%86%B3%E9%98%BB%E5%A1%9E.PNG" alt="解决阻塞" /></p>
<h2 id="某某生产教程"><a class="markdownIt-Anchor" href="#某某生产教程"></a> 某某生产教程</h2>
<p>  整体思路：通过叠加缩小图形，再通过剪切的方式将其保留在需要的大图形上。</p>
<h3 id="cbcucbcusr-crsrcrcwcwcwcw"><a class="markdownIt-Anchor" href="#cbcucbcusr-crsrcrcwcwcwcw"></a> CbCuCbCu:Sr------:–CrSrCr:CwCwCwCw</h3>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812174910%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%8E%9F%E5%9E%8B%E6%9C%BA.PNG" alt="原型机1" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210812175112%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E7%94%9F%E6%88%90%E6%9C%BA.PNG" alt="单个生成机1" /></p>
<p><img data-src="https://i.loli.net/2021/08/12/1JYxCVpy8eHhSWE.png" alt="电路" /></p>
<h3 id="rucwcw-ru"><a class="markdownIt-Anchor" href="#rucwcw-ru"></a> RuCw–Cw:----Ru–</h3>
<p><img data-src="https://i.loli.net/2021/08/12/jh4lHDQENw18qMe.png" alt="&quot;RuCw--Cw:----Ru--&quot;" /></p>
<p>  等待更新</p>
<h2 id="较高程度自动化"><a class="markdownIt-Anchor" href="#较高程度自动化"></a> 较高程度自动化</h2>
<p><s>我目前已经解锁全部设施了，已经在思考了。</s></p>
<p><img data-src="https://tva1.sinaimg.cn/large/006Xzox4ly1gdur6fuq71j306o06oaab.jpg" alt="别催了，虽然没人催" /></p>
<p><s>等待更新和等待思考</s></p>
<p>  我这个和一般的自动化不一样，这个是将最底层视为第一层，因为在最初考虑时，还没有电线解锁，只能用自己手动操作。电路设计上，优先考虑不改变工厂布局和原有设计。</p>
<p>  先看整体电路布局。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210824215742%20%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%9B%BE%E5%BD%A2%E6%A3%80%E6%B5%8B%E5%90%88%E6%88%90.PNG" alt="2021-08-22_215944" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210824215831%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E7%94%B5%E8%B7%AF%E6%95%B4%E4%BD%93%E4%B8%8B.PNG" alt="2021-08-23_212313" /></p>
<p>  第一步将基地图像信号引出。在解锁自动化前，相信你已经知道有悬空的图形（就是上面的生产教程）了 。因此，我们要先进行判读图形是否是悬空图形。检测电路如下。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210824215931%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%90%88%E6%88%90%E6%A3%80%E6%B5%8B.PNG" alt="图像信号合成检测" /></p>
<p>  它的原理是将图形拆分一层后将其和下一次拆分后的图形进行叠加，接着重复，最后将结果进行比较，根据结果将图像信号分别传输到不同位置。这两个位置在最后叠加方式不同。一个是按原有设计：最底层和上一层叠加，叠加结果和再上一层叠加，最后再和最顶层合成。另一个是：最顶层和下一层叠加，叠加结果和再下一层叠加，最后和最底层叠加。分这两种是为了尽可能合成悬空图形。</p>
<blockquote>
<p>作为后，写博客时，发现我做复杂了，因此我先说整体思路吧，后面的内容就一个地方做复杂了，它其实是可以删掉的。</p>
<p>首先将图像信号分层，将每一层信号分成4个象限，对每个象限进行分析颜色和图形，通过与门控制对应图形的对应颜色开关进行染色（无色也是一种颜色），将象限的图形和颜色信号输出到合成层的地方，根据信号进行合成。最后根据层信号进行层与层之间的合成。</p>
</blockquote>
<p>  我们先采用原本设计好的叠加方式，也就是第一种方式。（<font color = red>此处理论可删除，只须改动合成层的电路逻辑</font>）在我的设计中，从左至右，4个单元分别是最底层、倒数第二层、倒数第三层和最顶层。层与层之间是先叠加最底层和倒数第二层，然后在叠加倒数第三层，最后叠加最顶层。然而模拟拆分器先拆分出最顶层，因此最底层不确定是在哪一根线输出。所以要做一个不管有几层输入，都会依次从最低层开始输出的机器。（此电路可以删除的，不过叠加的就要思考一下了）</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102225900%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E9%80%86%E5%BA%8F%E6%9C%BA%E5%8E%9F%E5%9E%8B.PNG" alt="逆序机1" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102225954%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E9%80%86%E5%BA%8F%E6%9C%BA%E5%AE%9E%E8%A3%85.PNG" alt="逆序机2" /></p>
<p>  这个机器如果输入1会输出1，如果输入12会输出21，如果输入123会输出321，如果输入1234会输出4321。至于原理，我就解释不清楚了，因为我是一个目标一个目标实现的。做成这个的思想就是遇到问题不要害怕，将难题分解或一步一步解决。首先就是先实现2个的，再实现3个的，最后实现4个，也不用考虑简化呀什么的，能用就行。</p>
<p>  接下来就是每一层的信号送到对应每一层的单元（如果不对应，随意的话，需要考虑叠加的判断），每个单元里有分为四个象限。因此需要提取出每个象限的图形和颜色。</p>
<p>  <img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102230023%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E8%B1%A1%E9%99%90%E5%9B%BE%E5%BD%A2%E5%92%8C%E9%A2%9C%E8%89%B2%E6%8B%86%E5%88%86.PNG" alt="颜色和图形" /></p>
<p>  这个简单机器就是提取象限的颜色和图形。每个象限的机器不太一样，因为比较简单就自己做了，只要能输出颜色（无色）和图形（无）信号就行了。不要担心无色和却项，通过与可以解决。</p>
<p>  有颜色和图形信号后，就可以考虑染色了。通过比较器在指定位置输出图形信号到后面的染色区，通过比较器在指定位置输出颜色信号。这其中将无色信号输送到染色区了。染料通过图形信号和颜色信号的与运算控制指定的染料开关。如下图。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102215944%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%9F%93%E6%96%99%E5%8C%BA%E6%8E%A7%E5%88%B6.PNG" alt="染色材料" /></p>
<p>  在染色区，染料输送过来后，会自动合成。对于无色的输出，同样是使用与运算进行控制。染色后就送至合成区，同时将图像信号输送到合成区，用于后续判断等。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102225724%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%9F%93%E8%89%B2%E6%8E%A7%E5%88%B6.PNG" alt="无色" /></p>
<p>  在合成区，原先的合成是收到切换的，现在要改成自动化。原先做了3个合成来合成2个、3个、4个象限的图形。最开始想到的判断象限数量来切换使用不同的路径。问题是如何判断数量、如何判断是那几个道出材料、以及如何切换，要设计的话得很久，天荒地老的那种（夸张）。因此，我重新设计了一个合成模块。</p>
<p>  思路也比较简单。一步一步分析，首先，总体思路选择两两合成——两个象限合成一个，两个象限合成一个，再一合成就完了。因为这种不用考虑那么多。我们在前面象限拆分时，往下输送了该象限的图形信号，因此可以判断当前道的材料有无。如果4条道都有，那么关闭通道，让材料进入合成。如果有有3条道有材料，可以通过与运算判断。与出1说明2条道有，关闭通道让材料进入合成，另外一边则与出0，打开通道让有材料的通过，而合成器会因为只有一边输入导致阻塞，无法输出。如果有2条道有，可以理解3条道中的两条紧挨的道，或者是两条3条道中独立的那一条。后续则是这样的，它的情况就考虑1条道和2条道，仿照前面的就可以了。理解不了就看图，师傅领进门，修行看个人。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102225703%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%96%B0%E5%90%88%E6%88%90%E5%8E%9F%E5%9E%8B%E6%9C%BA.PNG" alt="合成新方式" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102225629%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%96%B0%E5%90%88%E6%88%90%E5%8E%9F%E5%9E%8B%E6%9C%BA%E7%94%B5%E8%B7%AF.PNG" alt="新和成电路" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102230420%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%96%B0%E5%90%88%E6%88%90%E7%94%B5%E8%B7%AF%E5%AE%9E%E8%A3%85.PNG" alt="层" /></p>
<p>  层与层的叠加基本不变，只是此刻你应该可以有单层的图像信号了（前面通过分层、逆序已经得到了）。有了图形信号就可将不要的删除了，优化一下，加快速度。同时有了层信号可以对层与层的合成进行判断了。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102231258%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%B1%82%E5%90%88%E6%88%90%E7%94%B5%E8%B7%AF.PNG" alt="合成层" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102231357%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%B1%82%E5%90%88%E6%88%90%E6%8E%A7%E5%88%B6.PNG" alt="层层控制" /></p>
<p>  很快，你发现提交要求不在是数量而是速度了，然而一个工厂的合成速度肯定是不足的，解决 办法可以是多几个工厂或者将产品存储起来，一定时间后释放，此时，速度就与传动带速度相关了。时间可以用一个物品在传送带上走，用一个检测器输出信号就可以了。开信号需要持续一定时间，关信号也要持续一段时间，而检测器只输出很短的信号，因此，使用一个SR锁存器进行信号切换。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102232342%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82SR%E9%94%81%E5%AD%98.PNG" alt="SR锁存" /></p>
<p>  输入一个短脉冲，它就会改变输出信号。然而，这种SR锁存会在短脉冲来的时候将输出变成高频，但影响不大。当然开和关的持续时间不一样，所以可以在不同状态下，让物品在不同传送带上走。同时也可以加一个开关来控制是否启用计时。</p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220102232955%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E7%8A%B6%E6%80%81%E5%88%87%E6%8D%A2%E5%BC%80%E5%85%B3.PNG" alt="状态切换抖动" /></p>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20220103002820%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82SR%E5%AE%9E%E8%A3%85.PNG" alt="2021-08-23_212643" /></p>
<p>  到这，自动化基本就完成了，剩下的基本上是优化和改进了。</p>
<h2 id="完全自动化"><a class="markdownIt-Anchor" href="#完全自动化"></a> 完全自动化</h2>
<p>包含叠加时恰好无共同象限，导致3层变2层，4层变3层等情况。</p>
<p>难，应该很难想出来。</p>
<p>（20220102）将另一种叠加方式做出来，加上全局开关基本就完全自动化了。相信大家可以完成了（老师视角）。</p>
<h2 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h2>
<p>如果某一层同一材料在不同象限都有使用，那么会由于合成不足，拖慢速度。可以通过提高传送带速度或每一象限单独供应原料。</p>
<h2 id="意想不到"><a class="markdownIt-Anchor" href="#意想不到"></a> 意想不到</h2>
<ol>
<li>我在设计的时候是把最底层作为第一层的，结果模拟拆分器把最顶层作为第一层的。</li>
</ol>
<h1 id="新思路"><a class="markdownIt-Anchor" href="#新思路"></a> 新思路</h1>
<h2 id="工厂分析"><a class="markdownIt-Anchor" href="#工厂分析"></a> 工厂分析</h2>
<blockquote>
<p>世上无难事只怕有心人。</p>
</blockquote>
<p>  对于制作一个工厂，我们要对其进行分析。一个工厂必须要有颜料供应系统、材料供应系统、染色制作系统、单层合成系统、双层合成系统和成品收集系统。</p>
<p>  和旧思路一样，这个工厂目的是不让玩家为每一个图案都制作一条生产线，而是简化为对工厂的简单操作，并最后改造为全自动化的工厂。当然也不考虑悬空的图形，因为可以认为后期没有。</p>

<div class="markmap-container" style="height:undefined">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;简单工厂&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;颜料供应系统&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;7色收集制作&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;存储&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;供应&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;总供应&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;单独供应&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;材料供应系统&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;材料收集制作&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;存储&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;供应&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;总供应&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;单独供应&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;染色制作系统&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;染色方案&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;染色物品处理&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;合成系统&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;单层合成&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;缺角处理&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;垃圾处理&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;层层叠加&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;层数处理&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;垃圾处理&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;成品收集系统&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;速度问题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;存储一定时间或数量同时输入&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;数量问题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;直接输入&quot;}]}]}]}"></svg>
</div>

<p>  首先，我们想要工厂能够对1-4层的图案都能合成，那么我们就要制作4个单层合成的小工厂。这个小工厂可同上面的思维导图一同看待。这个小工厂接收材料和颜料进行染色并合成为一个单层的图案并输出。</p>
<h2 id="颜料供应系统"><a class="markdownIt-Anchor" href="#颜料供应系统"></a> 颜料供应系统</h2>
<p>  这个很简单，相信你在生成其他图案时已经会了。我的方式是将7种颜色生产后并储存，接着再向4个小工厂供应。小工厂里也有一定量的存储。</p>
<p>  这个总供应的方式容易造成后面的工厂染料供应不上。解决方式可是单独供应或加大小工厂储存。</p>
<p>  颜料的总供应↓。采用双路输出，速度提升。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E9%A2%9C%E6%96%99%E4%BE%9B%E5%BA%94202302091359364.PNG" alt="颜料供应 alt=&quot;颜料总供应&quot;" /></p>
<p>  小工厂里的染料的储存和供应↓。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%B0%8F%E5%B7%A5%E5%8E%82%E6%9F%93%E6%96%99%E4%BE%9B%E5%BA%94202302091405022.PNG" alt="小工厂里的染料的储存和供应 alt=&quot;小工厂里的染料的储存和供应&quot;" /></p>
<p>  在最开始，可全用平衡器，需要那个颜色就用传送带连接。解锁合并器后，可以替换其中一个平衡器。解锁分离器后，可替换另一个平衡器。解锁过滤器和开关后，可将传送带的连断状态转换为开关的开关状态。最后换成信号控制。</p>
<h2 id="材料供应系统"><a class="markdownIt-Anchor" href="#材料供应系统"></a> 材料供应系统</h2>
<p>  材料的供应和颜料的供应差不多。每一个图案都可以由梯形、1/4园、尖尖和小正方形组成。在设计过程中可以寻找由这4种图案组成的图案，或单独找每一个的完整图形。我用的是第一中方式。</p>
<p>  我的材料收集供应方式↓，并且每个图案都旋转至第一象限。如果用完整图案供应，则可以不旋转，但供应的线路需要增加。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%9D%90%E6%96%99%E6%94%B6%E9%9B%86%E4%BE%9B%E5%BA%94%E6%96%B9%E5%BC%8F202302091419642.PNG" alt="我的材料收集供应方式 alt=&quot;我的材料收集供应方式&quot;" /></p>
<p>  这种材料制作方式，会存在堵塞情况，所以需要一个满箱检测↓。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%BB%A1%E7%AE%B1%E6%A3%80%E6%B5%8B202302091422888.PNG" alt="异形工厂满箱检测 alt=&quot;异形工厂满箱检测&quot;" /></p>
<p>  在小工厂内部设计了一个缓存，由它进行材料的输入。同样在前期可以控制传送带的断连来控制输入，后期换成过滤器加开关，再后期换成信号控制。</p>
<h2 id="染色制作系统"><a class="markdownIt-Anchor" href="#染色制作系统"></a> 染色制作系统</h2>
<p>  染色的方式有许多种。先染色再合成或者先合成再染色都可以。不过，如果选择先合成再染色的话，不好度过前期，需要等到开关的解锁。</p>
<p>  我选择先染色每个象限再合成的方式，最后并行进行相应象限的旋转↓。同样，在前期可以控制传送带的断连来控制无色输出，后期换成过滤器加开关，再后期换成信号控制。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%9D%90%E6%96%99%E6%9F%93%E8%89%B2%E5%88%B6%E4%BD%9C202302091435520.PNG" alt="异形工厂材料染色制作 alt=&quot;异形工厂材料染色制作&quot;" /></p>
<h2 id="合成系统"><a class="markdownIt-Anchor" href="#合成系统"></a> 合成系统</h2>
<p>  由于我是输出4个象限，如果根据输出数量选择1、2、3、4通道进行合成的话，那要面临输出数量的判断和输出通道的判断。这需要设计很复杂的逻辑判断系统，比我当时的设计的最多4个输入的逆序输出系统还麻烦。所以我设计为两两合成再合成的方式。当然，这种方式也会面临象限缺少的情况。这种情况很简单，前期同样可以控制传送带的断连来控制，后期换成过滤器加开关，再后期换成信号控制（可见原思路）。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%90%88%E6%88%90%E7%B3%BB%E7%BB%9F202302091454613.PNG" alt="合成系统 alt=&quot;异形工厂合成系统&quot;" /></p>
<p>  对于层与层的合成，与上面几乎一样。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%B1%82%E5%B1%82%E5%90%88%E6%88%90202302091502660.PNG" alt="异形工厂层层合成 alt=&quot;异形工厂层层合成&quot;" /></p>
<h2 id="工厂组装"><a class="markdownIt-Anchor" href="#工厂组装"></a> 工厂组装</h2>
<p>  此时，小工厂已经完成了，复制3份，做好连接就形成了一个简单工厂。</p>
<p>  小工厂如下↓。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%B0%8F%E5%B7%A5%E5%8E%82202302091507969.PNG" alt="异形工厂小工厂 alt=&quot;异形工厂小工厂&quot;" /></p>
<p>  完整的简单工厂如下↓。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82202302091510190.PNG" alt="异形工厂简单工厂 alt=&quot;异形工厂简单工厂&quot;" /></p>
<h2 id="成品收集系统"><a class="markdownIt-Anchor" href="#成品收集系统"></a> 成品收集系统</h2>
<p>  这太简单了，等完全解锁后一块做完。</p>
<h2 id="工厂自动化"><a class="markdownIt-Anchor" href="#工厂自动化"></a> 工厂自动化</h2>
<p>  我现在还没完全解锁，等后续更新。</p>
<h2 id="某某生产教程-2"><a class="markdownIt-Anchor" href="#某某生产教程-2"></a> 某某生产教程</h2>
<h3 id="rucwcw-ru-2"><a class="markdownIt-Anchor" href="#rucwcw-ru-2"></a> RuCw–Cw:----Ru–</h3>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E5%B0%8F%E7%81%AB%E7%AE%AD202302091522018.PNG" alt="异形工厂小火箭 alt=&quot;异形工厂小火箭&quot;" /></p>
<h3 id="cbcucbcusr-crsrcrcwcwcwcw-2"><a class="markdownIt-Anchor" href="#cbcucbcusr-crsrcrcwcwcwcw-2"></a> CbCuCbCu:Sr------:–CrSrCr:CwCwCwCw</h3>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%BC%82%E5%BD%A2%E5%B7%A5%E5%8E%82%E6%8C%87%E5%8D%97%E9%92%88202302091523824.PNG" alt="异形工厂指南针 alt=&quot;异形工厂指南针&quot;" /></p>
]]></content>
      <categories>
        <category>游戏</category>
        <category>教程向</category>
      </categories>
      <tags>
        <tag>异形工厂</tag>
        <tag>shapezio</tag>
        <tag>自动化</tag>
      </tags>
  </entry>
  <entry>
    <title>拓展简单笔记</title>
    <url>/2019/10/24/%E6%8B%93%E5%B1%95%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="系列链接"><a class="markdownIt-Anchor" href="#系列链接"></a> 系列链接</h1>
<p><a href="https://pengxiandyou.github.io/2019/08/27/HTML%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">HTML简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/01/CSS%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">CSS简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/JavaScript%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">JavaScript简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/jQuery%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">jQuery简单笔记</a><br/><br />
<a href="https://pengxiandyou.github.io/2019/10/24/%E6%8B%93%E5%B1%95%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/">拓展简单笔记</a><br/></p>
<h1 id="盒子模型"><a class="markdownIt-Anchor" href="#盒子模型"></a> 盒子模型</h1>
<h2 id="一-理解概念"><a class="markdownIt-Anchor" href="#一-理解概念"></a> 一 理解概念</h2>
<ul>
<li>一对标签就是一个盒子</li>
</ul>
<h2 id="二-属性"><a class="markdownIt-Anchor" href="#二-属性"></a> 二 属性</h2>
<ol>
<li>
<p>边框</p>
<ul>
<li>
<p>border-color`</p>
  <table>
      <tr>
          <td >属性</td>
          <td>说明</td>
          <td>示例</td>
      </tr>
      <tr>
          <td>border-top-color</td>
          <td>上边框颜色</td>
           <td>border-top-color:#369;</td>
      </tr>
       <tr>
          <td>border-right-color</td>
          <td>右边框颜色</td>
           <td>border-right-color:#369;</td>
      </tr>
        <tr>
          <td>border-bottom-color</td>
          <td>下边框</td>
            <td>border-bottom-color:#369;</td>
      </tr>  
         <tr>
          <td>border-left-color</td>
          <td>左边框颜色</td>
             <td>border-left-color:#369;</td>
      </tr>
           <tr>
          <td rowspan="4">border-color</td>
          <td>四个边框同一色</td>
               <td>border-color:#369;</td>
      </tr>
           <tr>
          <td>上下#369<br/>
               左右#000</td>
          <td>border-color:#369 #000;</td>
      </tr>
           <tr>
          <td>上#369<br/>
               左右#000<br/>
               下#f00</td>
          <td>border-color:#369 #000 #f00;</td>
      </tr>
           <tr>
          <td>上#369<br/>
               右#000<br/>
              下#f00<br/>
              左#00f
               <td>border-color:#369 #000 #f00 #00f</td>
      </tr>
  </table>
</li>
<li>
<p><code>border-width</code>  同理 从上开始顺时针转 <code>1px</code> <code>thin</code> <code>medium</code> <code>thick</code></p>
</li>
<li>
<p><code>border-style</code> 同理  同理 <code>double</code> <code>solid</code> <code>dotted</code> <code>none</code> <code>hidden</code> <code>dashed</code></p>
</li>
<li>
<p><code>border:1px red solid;</code> 也可结合四边来写 如 : <code>border-top</code></p>
</li>
</ul>
</li>
<li>
<p>边距</p>
<ol>
<li>
<p>外边距 <code>px</code></p>
<ul>
<li><code>margin</code> 可以: <code>1px</code> , <code>2px 3px</code> , <code>4px 5px 6px</code> , <code>7px 8px 9px 10px</code></li>
<li><code>margin-top</code></li>
<li><code>margin-right</code></li>
<li><code>margin-bottom</code></li>
<li><code>margin-left</code></li>
</ul>
<p>妙用: 网页居中对齐 <code>margin:0px auto;</code> 网页<code>1024X768</code>比较合适 小于1000</p>
</li>
<li>
<p>内边距 padding 同上</p>
</li>
</ol>
</li>
</ol>
<h1 id="标准文档流"><a class="markdownIt-Anchor" href="#标准文档流"></a> 标准文档流</h1>
<ol>
<li>块级元素
<ul>
<li><code>div</code> <code>p</code> <code>ul</code> <code>li</code>等</li>
<li>一个标签独占一行</li>
<li><code>display:inline;</code> 变行级元素</li>
</ul>
</li>
<li>行级元素
<ul>
<li><code>span</code> <code>a</code> <code>img</code> 等</li>
<li>一行从左往右一次摆放</li>
<li><code>display:block;</code> 变块级元素</li>
</ul>
</li>
<li><code>display:none;</code> 可以不显示 看不见摸不着 但在</li>
</ol>
<h1 id="div布局"><a class="markdownIt-Anchor" href="#div布局"></a> div布局</h1>
<ol>
<li>浮动: 元素浮动以后,会脱离标准流,后面的元素抢占属于该元素的位置
<ul>
<li><code>float:left;</code></li>
</ul>
</li>
<li>定位: <code>position:static;</code> 相对定位: <code>relative 可加偏移量(相对标准流) top:50px;left:50px;</code>
<ul>
<li>static : 默认值,标准布局,不要使用偏移量</li>
<li>relative : 相对定位,没有偏移量就是标准流的位置,有则相对标准流发生偏移,偏移以后不会脱离标准流</li>
<li>absolute : 绝对定位 有偏移量 相对父级标签偏远 父级标签没有定位属性则找父级的父级 直到找到或最终相对浏览器</li>
<li>fixed : 相对浏览器 瑟情广告记忆</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>前端</category>
        <category>拓展</category>
      </categories>
      <tags>
        <tag>拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构循环队列</title>
    <url>/2019/09/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 50 <span class="comment">//容量 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"><span class="comment">//循环队列</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType* base;</span><br><span class="line">	<span class="type">int</span> front;</span><br><span class="line">	<span class="type">int</span> rear;</span><br><span class="line">&#125;SqQueue;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">	f, t</span><br><span class="line">&#125;Bool;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function">Status <span class="title">initQueue</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Q-&gt;base = <span class="keyword">new</span> ElemType[MAXSIZE];</span><br><span class="line">	<span class="keyword">if</span> (!Q-&gt;base)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> OVERFLOW;</span><br><span class="line">	&#125;</span><br><span class="line">	Q-&gt;front = Q-&gt;rear = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="function">Bool <span class="title">isEmpty</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> Q-&gt;front == Q-&gt;rear ? t : f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLength</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (Q-&gt;rear - Q-&gt;front + MAXSIZE) % MAXSIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//是否满</span></span><br><span class="line"><span class="function">Bool <span class="title">isFull</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (Q-&gt;rear + <span class="number">1</span>) % MAXSIZE == Q-&gt;front ? t : f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//入队 </span></span><br><span class="line"><span class="function">Status <span class="title">enQueue</span><span class="params">(SqQueue* Q, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isFull</span>(Q))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	&#125;</span><br><span class="line">	Q-&gt;base[Q-&gt;rear] = e;</span><br><span class="line">	Q-&gt;rear = (Q-&gt;rear + <span class="number">1</span>) % MAXSIZE;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出队</span></span><br><span class="line"><span class="function">ElemType <span class="title">deQueue</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(Q))<span class="keyword">return</span> ERROR;</span><br><span class="line">	ElemType e = Q-&gt;base[Q-&gt;front];</span><br><span class="line">	Q-&gt;front = (Q-&gt;front + <span class="number">1</span>) % MAXSIZE;</span><br><span class="line">	<span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取队头</span></span><br><span class="line"><span class="function">ElemType <span class="title">getHead</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(Q))<span class="keyword">return</span> Q-&gt;base[Q-&gt;front];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqQueue* Q = <span class="keyword">new</span> SqQueue;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;初始化-----------%s\n&quot;</span>, <span class="built_in">initQueue</span>(Q) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, <span class="built_in">isEmpty</span>(Q) ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>);</span><br><span class="line">	<span class="type">char</span>* str = <span class="string">&quot;https://github.com/pengxiandyou&quot;</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始入队\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= _mbstrlen(str) - <span class="number">1</span>; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;入队-----------%s--------长度  %d\n&quot;</span>, <span class="built_in">enQueue</span>(Q, str[i]) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>, <span class="built_in">getLength</span>(Q));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, <span class="built_in">isEmpty</span>(Q) ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;队头为---------%c\n&quot;</span>, <span class="built_in">getHead</span>(Q));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始出队\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">31</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">deQueue</span>(Q));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库原理课后练习之单表查询</title>
    <url>/2020/04/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E4%B9%8B%E5%8D%95%E8%A1%A8%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="开门见山"><a class="markdownIt-Anchor" href="#开门见山"></a> 开门见山</h1>
<p>注：<font color=pink>数据涉及隐私，自行寻找。表的结构很简单，自行分析下面的语句进行建表，不予提供</font></p>
<p>1.查询学生姓名和年龄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select s.sname,s.sage from s;</span><br></pre></td></tr></table></figure>
<p>2.查询班号，姓名，电话</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select s.class, s.sname,s.phone from s;</span><br></pre></td></tr></table></figure>
<p>3.查询学生所有信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s</span><br></pre></td></tr></table></figure>
<p>4.查询学生姓名及出生年份</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sname,year(now())-sage as barith from s;</span><br></pre></td></tr></table></figure>
<p><a href="https://www.cnblogs.com/ggjucheng/p/3352280.html">MySQL：日期函数、时间函数总结</a>，<a href="https://www.cnblogs.com/pandaly/p/10267950.html">MySQL常用日期时间函数</a>.</p>
<p>5.查询学生姓名（大写），出生年份（别名）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select upper(sname),year(now())-sage as barith from s;</span><br></pre></td></tr></table></figure>
<p>6.描述每个学生信息，格式如下：<br />
<code>&lt;sname&gt;is from &lt;province&gt;，[He | She]is [young I old]，Phonenumber is &lt;pno&gt;</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select concat(sname,&#x27; is from &#x27;,province,&#x27; , &#x27;,if(ssex=&#x27;f&#x27;,&#x27;She&#x27;,&#x27;He&#x27;),&#x27; is &#x27;,if(sage&gt;21,&#x27;old&#x27;,&#x27;young&#x27;),&#x27; , &#x27;,&#x27;Phonenumber is &#x27;,phone) as info from s;</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/pan_junbiao/article/details/86524612">MySQL字符串的拼接、截取、替换、查找位置</a></p>
<p>7.询班级学生来自哪几个省（去掉重复行）distinct</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select distinct province  from s;</span><br></pre></td></tr></table></figure>
<p>8.查询20岁以下的学生 where</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where sage&lt;20;</span><br></pre></td></tr></table></figure>
<p>9.查询1班20岁以下的男同学 and</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where sage&lt;20 and ssex=&#x27;m&#x27; and class=1;</span><br></pre></td></tr></table></figure>
<p>10.查询1班20岁男同学或者2班19岁女同学 or</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where (sage=20 and ssex=&#x27;m&#x27; and class=1) or (sage=19 and ssex=&#x27;f&#x27; and class=2);</span><br></pre></td></tr></table></figure>
<p>11.查询19岁到21岁之间的问学 between…and.…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where sage between 19 and 21;</span><br></pre></td></tr></table></figure>
<p>12.查询山西省和河北省的学生in.…</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where province in(&#x27;shanxi&#x27;,&#x27;hebei&#x27;);</span><br></pre></td></tr></table></figure>
<p>13.查询所有姓李的学生 like  <a href="https://www.cnblogs.com/IT-Monkey/p/3286405.html">MySql like模糊查询使用详解</a>，<a href="https://blog.csdn.net/zuihongyan518/article/details/81131042">MySQL–更高效的mysql模糊查询的方法</a></p>
<p>由于库里的名字是拼音，所以推荐用正则 <a href="https://www.runoob.com/regexp/regexp-syntax.html">正则表达式 - 语法</a>，<a href="http://www.regexlab.com/zh/regref.htm">揭开正则表达式的神秘面纱</a>，这两篇网页后面真是精妙。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#[]里是声母的开头 ｛1｝应该是多此一举 无法排除lin ling</span><br><span class="line">select * from s where sname rlike&#x27;^li[bpmfdtnlgkhjqxrzcsyw]&#123;1&#125;&#x27; ;</span><br><span class="line">#[]里是可以和i构成韵母的字母 无法排除lian liang 不能添加n，因为还有lina等这样的名字 后续分析添上a应该筛选出来的全为li</span><br><span class="line">select * from s where sname rlike&#x27;^li[^(ng)uea]&#x27; ;</span><br><span class="line">#注意括号 括号这东西不好理解 括号里的前括号为了匹配不是lin型的，后面的括号匹配lin型的，此括号里的[]包含了韵母的开头 </span><br><span class="line">select * from s where sname rlike&#x27;^li(([^(ng)uea])|(n[aoeiuv]))&#x27; ;</span><br><span class="line">#如果对拼音不熟悉，可以通过打字测试拼音组合。</span><br></pre></td></tr></table></figure>
<p>14.查询所有使用移动号码的学生</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where phone rlike&#x27;^1((3[456789])|47|(5[012789])|78|(8[23478])|198)&#x27;;</span><br></pre></td></tr></table></figure>
<p>15.查询所有未使用移动号码的学生</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where phone not rlike&#x27;^1((3[456789])|47|(5[012789])|78|(8[23478])|198)&#x27;;</span><br></pre></td></tr></table></figure>
<p>16.查询没有电话号码的学生 is null</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from s where phone is null;</span><br></pre></td></tr></table></figure>
<p>17.查询1班所有学生姓名及年龄，按年龄升序排列 order by</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sname,sage from s where class=1 order by sage;</span><br></pre></td></tr></table></figure>
<p>18.查询2班所有学生姓名，省份，性别，年龄，结果先按省份排列，同省的再按性别排。同省同性制再按年龄排。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sname,province,ssex,sage from s where class=2 order by province,ssex,sage;</span><br></pre></td></tr></table></figure>
<p>19.统计学生人数count</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select count(*) from s;</span><br></pre></td></tr></table></figure>
<p>20.统计学生来自几个省 count</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select count(distinct province) from s;</span><br></pre></td></tr></table></figure>
<p>21.统计学生平均年龄 avg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select avg(sage) from s;</span><br></pre></td></tr></table></figure>
<p>22.统计学生人数，平均年龄，最大年龄，最小年龄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select count(*),avg(sage),max(sage),min(sage) from s;</span><br></pre></td></tr></table></figure>
<p>23.统计学生人数（分班统计）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select class ,count(*) from s group by class;</span><br></pre></td></tr></table></figure>
<p>24.统计学生来自几个省（分班统计）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select class ,count(distinct province) from s group by class;</span><br></pre></td></tr></table></figure>
<p>25.统计学生平均年龄（分班统计）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select class ,avg(sage) from s group by class;</span><br></pre></td></tr></table></figure>
<p>26.统计学生人数，平均年龄，最大年龄，最小年龄（分班统计）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select class ,count(*),avg(sage),max(sage),min(sage) from s group by class;</span><br></pre></td></tr></table></figure>
<p>27.统计学生每个年龄段的人数，只考虑年龄段人数超过3人的，结果按人数高到低排列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sage ,count(*) as number from s group by sage having number&gt;3 order by 2;</span><br><span class="line">select sage ,count(*) as number from s group by sage having number&gt;3 order by number;</span><br></pre></td></tr></table></figure>
<p>28.统计学生每个年龄段的人数（分班统计）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select class,sage,count(*) from s group by class,sage;</span><br></pre></td></tr></table></figure>
<p>29.统计学生每个年龄段的人数（分班分性别统计），只考虑山西省学生，并且分组人数超过3人的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select class,ssex,sage,count(*) from s where province=&#x27;shanxi&#x27; group by 1,2,3 having count(*)&gt;3;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>练习</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构第一次上机代码</title>
    <url>/2019/09/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<hr/>
<center><a href="https://pengxiandyou.github.io/experiment1/" >报告</a></center>
<h1 id="一般合并"><a class="markdownIt-Anchor" href="#一般合并"></a> 一般合并</h1>
<p>在顺序表里改写 利用原有功能写出</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIST_INIT_SIZE 10 <span class="comment">//线性表储存空间初始分配量</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LISTINCREMRNT 10 <span class="comment">//线性表储存空间的分配增量</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"></span><br><span class="line">					  <span class="comment">//线性表动态分配顺序储存结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType* elem;<span class="comment">//储存空间基址</span></span><br><span class="line">	<span class="type">int</span> length;<span class="comment">//当前长度</span></span><br><span class="line">	<span class="type">int</span> listsize;<span class="comment">//当前分配的存储容量</span></span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个空的表</span></span><br><span class="line">Status <span class="title function_">InitList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	L-&gt;elem = (ElemType*)__vcrt_malloc_normal(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">	<span class="keyword">if</span> (!(L-&gt;elem))</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);<span class="comment">//分配失败</span></span><br><span class="line">	L-&gt;length = <span class="number">0</span>;<span class="comment">//长度</span></span><br><span class="line">	L-&gt;listsize = LIST_INIT_SIZE;<span class="comment">//容量</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">Status <span class="title function_">ListInsert</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length + <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">	ElemType* q = &amp;(L-&gt;elem[i - <span class="number">1</span>]), *p = <span class="literal">NULL</span>;<span class="comment">// q为插入位置</span></span><br><span class="line">	<span class="keyword">for</span> (p = &amp;(L-&gt;elem[L-&gt;length - <span class="number">1</span>]); p &gt;= q; --p)</span><br><span class="line">		* (p + <span class="number">1</span>) = *p;<span class="comment">// 插入位置及之后的元素后移</span></span><br><span class="line">	*q = e;<span class="comment">// 插入e</span></span><br><span class="line">	++(L-&gt;length);<span class="comment">// 表长增加1</span></span><br><span class="line">	<span class="keyword">if</span> (L-&gt;length == L-&gt;listsize) &#123;</span><br><span class="line">		ElemType*  newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + LISTINCREMRNT) * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">		<span class="keyword">if</span> (!newbase)</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">		L-&gt;elem = newbase;<span class="comment">// 新基址</span></span><br><span class="line">		L-&gt;listsize += LISTINCREMRNT;<span class="comment">// 增加存储容量</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getLength</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过索引取值</span></span><br><span class="line">ElemType <span class="title function_">getElemByIndex</span><span class="params">(SqList* L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;elem[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过值取索引</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getIndexByElem</span><span class="params">(SqList* L, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; L-&gt;length; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((L-&gt;elem[j]) == e)</span><br><span class="line">			<span class="keyword">return</span> j + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历表</span></span><br><span class="line">Status <span class="title function_">myPrintf</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第&quot;</span>&lt;&lt; i + <span class="number">1</span>&lt;&lt;<span class="string">&quot;个值------------&quot;</span> &lt;&lt; (L-&gt;elem[i])&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建表</span></span><br><span class="line">Status <span class="title function_">creatList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;(L-&gt;length));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输入为 %d\n&quot;</span>, L-&gt;length);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; L-&gt;elem[i];</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//合并</span></span><br><span class="line">Status <span class="title function_">mergeList</span><span class="params">(SqList* LA,SqList* LB)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (LA-&gt;length &lt; LB-&gt;length) &#123;</span><br><span class="line">		SqList* temp;</span><br><span class="line">		temp = LA;</span><br><span class="line">		LA = LB;</span><br><span class="line">		LB = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; LB-&gt;length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		ElemType e = getElemByIndex(LB,i+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">if</span> (getIndexByElem(LA, e)==<span class="number">-1</span>) &#123;</span><br><span class="line">			ListInsert(LA, <span class="number">1</span>, e);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;合并后\n&quot;</span>);</span><br><span class="line">	myPrintf(LA);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	SqList* LA = (SqList*)__vcrt_malloc_normal(<span class="keyword">sizeof</span>(SqList));</span><br><span class="line">	InitList(LA);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入表A的长度\n&quot;</span>);</span><br><span class="line">	creatList(LA);</span><br><span class="line">	myPrintf(LA);</span><br><span class="line">	SqList* LB = (SqList*)__vcrt_malloc_normal(<span class="keyword">sizeof</span>(SqList));</span><br><span class="line">	InitList(LB);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入表B的长度\n&quot;</span>);</span><br><span class="line">	creatList(LB);</span><br><span class="line">	myPrintf(LB);</span><br><span class="line"></span><br><span class="line">	mergeList(LA, LB);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="有序集合链式合并"><a class="markdownIt-Anchor" href="#有序集合链式合并"></a> 有序集合链式合并</h1>
<p>同样改写单链表 用了原有功能实现  改写了一个查找 可以忽略无序的单链表 相同的元素也会插入  不过可以根据写一个代码改改</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line">					   <span class="comment">//单链表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode, *LinkList;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">Status <span class="title function_">initList</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	*L = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	(*L)-&gt;data = <span class="number">0</span>;</span><br><span class="line">	(*L)-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">isEmpty</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (*L)-&gt;next == <span class="literal">NULL</span> ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getLength</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = *L;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p-&gt;next)</span><br><span class="line">	&#123;</span><br><span class="line">		++i;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//默认头插法建表</span></span><br><span class="line">Status <span class="title function_">creatListHead</span><span class="params">(LinkList* L , ElemType str[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p;</span><br><span class="line">	(*L)-&gt;data = n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;n; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		p = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">		p-&gt;data = str[i];</span><br><span class="line">		p-&gt;next = (*L)-&gt;next;</span><br><span class="line">		(*L)-&gt;next = p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//默认尾插法建表 </span></span><br><span class="line">Status <span class="title function_">creatListEnd</span><span class="params">(LinkList* L, ElemType str[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p, r = *L;</span><br><span class="line"></span><br><span class="line">	(*L)-&gt;data = n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		p = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">		p-&gt;data = str[i];</span><br><span class="line">		p-&gt;next = <span class="literal">NULL</span>;<span class="comment">//必须要否则遍历异常</span></span><br><span class="line">		r-&gt;next = p;</span><br><span class="line">		r = p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历表</span></span><br><span class="line">Status <span class="title function_">traversalList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = L-&gt;next;</span><br><span class="line">	<span class="keyword">while</span> (p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p-&gt;data);</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">Status <span class="title function_">insertList</span><span class="params">(LinkList* L, <span class="type">int</span> i, ElemType c)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (L == <span class="literal">NULL</span> || (i &gt; (*L)-&gt;data || i &lt; <span class="number">1</span>))<span class="keyword">return</span> ERROR;</span><br><span class="line">	LinkList p = *L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;j&lt;i - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//定在前一个</span></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	LinkList q = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	q-&gt;data = c;</span><br><span class="line">	q-&gt;next = p-&gt;next;</span><br><span class="line">	p-&gt;next = q;</span><br><span class="line">	(*L)-&gt;data++;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按位查找</span></span><br><span class="line">LNode* <span class="title function_">getListByIndex</span><span class="params">(LinkList L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//if (L == NULL || (i &gt; (L)-&gt;data || i &lt; 1))return NULL;</span></span><br><span class="line">	LinkList p = L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;j&lt;i - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//前一个</span></span><br><span class="line"></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//	p = p-&gt;next;</span></span><br><span class="line">	<span class="keyword">return</span> (p);<span class="comment">//前一个</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按值查找</span></span><br><span class="line">LNode* <span class="title function_">getListByElem</span><span class="params">(LinkList L, ElemType c,<span class="type">int</span>* i)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;p-&gt;next-&gt;data != c)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//前一个</span></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	*i = j + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> p-&gt;next; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//合并</span></span><br><span class="line">Status <span class="title function_">mergeList</span><span class="params">(LinkList* LA, LinkList* LB )</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (getLength(LA)&gt;getLength(LB))</span><br><span class="line">	&#123;</span><br><span class="line">		LinkList* temp=LA;</span><br><span class="line">		LA = LB;</span><br><span class="line">		LB = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	ElemType e;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= getLength(LA); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		 e = getListByIndex(*LA, i)-&gt;next-&gt;data;<span class="comment">//取元素</span></span><br><span class="line">		<span class="comment">//printf(&quot;___%d\n&quot;, e);</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= getLength(LB); i++)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="comment">//	printf(&quot;___---%d\n&quot;, i);</span></span><br><span class="line">			<span class="keyword">if</span> (getListByIndex(*LB, i)-&gt;next-&gt;data&gt;e)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="comment">//printf(&quot;_----__%d\n&quot;, i);</span></span><br><span class="line">				insertList(LB, i, e);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;合并后: &quot;</span>);</span><br><span class="line">	traversalList(*LB);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType stra[<span class="number">4</span>] = &#123; <span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">11</span> &#125;;</span><br><span class="line">	ElemType strb[<span class="number">7</span>] = &#123; <span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">20</span> &#125;;</span><br><span class="line">	LinkList LA,LB;</span><br><span class="line">	initList(&amp;LA);</span><br><span class="line">	initList(&amp;LB);</span><br><span class="line">	creatListEnd(&amp;LA, stra,<span class="keyword">sizeof</span>(stra)/<span class="keyword">sizeof</span>(stra[<span class="number">0</span>]));</span><br><span class="line">	creatListEnd(&amp;LB, strb, <span class="keyword">sizeof</span>(strb) / <span class="keyword">sizeof</span>(strb[<span class="number">0</span>]));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;表LA: &quot;</span>);</span><br><span class="line">	traversalList(LA);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;表LB: &quot;</span>);</span><br><span class="line">	traversalList(LB);</span><br><span class="line">	mergeList(&amp;LA, &amp;LB);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="一元稀疏多项式加法"><a class="markdownIt-Anchor" href="#一元稀疏多项式加法"></a> 一元稀疏多项式加法</h1>
<p>改写上面的合并 实现两个稀疏多项式相加 同时不会插入相同的元素 同时添加了计算的功能</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">double</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line">					  <span class="comment">//单链表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType conf;<span class="comment">//系数</span></span><br><span class="line">	ElemType expn;<span class="comment">//指数</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode, *LinkList;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">Status <span class="title function_">initList</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	*L = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	(*L)-&gt;conf = <span class="number">-1</span>;</span><br><span class="line">	(*L)-&gt;expn = <span class="number">-1</span>;</span><br><span class="line">	(*L)-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">isEmpty</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (*L)-&gt;next == <span class="literal">NULL</span> ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getLength</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = *L;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p-&gt;next)</span><br><span class="line">	&#123;</span><br><span class="line">		++i;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//默认尾插法建表 </span></span><br><span class="line">Status <span class="title function_">creatListEnd</span><span class="params">(LinkList* L, ElemType c[], ElemType e[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p, r = *L;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		p = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">		p-&gt;conf = c[i];</span><br><span class="line">		p-&gt;expn = e[i];</span><br><span class="line">		p-&gt;next = <span class="literal">NULL</span>;<span class="comment">//必须要否则遍历异常</span></span><br><span class="line">		r-&gt;next = p;</span><br><span class="line">		r = p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历表</span></span><br><span class="line">Status <span class="title function_">traversalList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = L-&gt;next;</span><br><span class="line">	<span class="keyword">while</span> (p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (p-&gt;conf&gt;=<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;+%fx%f&quot;</span>, p-&gt;conf,p-&gt;expn);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%fx%f&quot;</span>, p-&gt;conf, p-&gt;expn);</span><br><span class="line">		&#125;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">Status <span class="title function_">insertList</span><span class="params">(LinkList* L, <span class="type">int</span> i, ElemType c, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (L == <span class="literal">NULL</span> || (i &gt; getLength(L) || i &lt; <span class="number">1</span>))<span class="keyword">return</span> ERROR;</span><br><span class="line">	LinkList p = *L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;j&lt;i - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//定在前一个</span></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	LinkList q = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	q-&gt;conf = c;</span><br><span class="line">	q-&gt;expn = e;</span><br><span class="line">	q-&gt;next = p-&gt;next;</span><br><span class="line">	p-&gt;next = q;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按位查找</span></span><br><span class="line">LNode* <span class="title function_">getListByIndex</span><span class="params">(LinkList L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//if (L == NULL || (i &gt; (L)-&gt;data || i &lt; 1))return NULL;</span></span><br><span class="line">	LinkList p = L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;j&lt;i - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//前一个</span></span><br><span class="line"></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//	p = p-&gt;next;</span></span><br><span class="line">	<span class="keyword">return</span> (p);<span class="comment">//前一个</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按值查找</span></span><br><span class="line">LNode* <span class="title function_">getListByElem</span><span class="params">(LinkList L, ElemType e, <span class="type">int</span>* i)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;p-&gt;next-&gt;expn != e)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//前一个</span></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	*i = j + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> p-&gt;next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//计算</span></span><br><span class="line"><span class="type">long</span> <span class="type">double</span> <span class="title function_">calculateMultinomial</span><span class="params">(LinkList L, <span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = L-&gt;next;</span><br><span class="line">	<span class="type">long</span> <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p)</span><br><span class="line">	&#123;</span><br><span class="line">		sum = p-&gt;conf*<span class="built_in">pow</span>(x, p-&gt;expn)+sum;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//合并</span></span><br><span class="line">Status <span class="title function_">mergeList</span><span class="params">(LinkList* LA, LinkList* LB)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (getLength(LA)&gt;getLength(LB))</span><br><span class="line">	&#123;</span><br><span class="line">		LinkList* temp = LA;</span><br><span class="line">		LA = LB;</span><br><span class="line">		LB = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	ElemType e,c;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= getLength(LA); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		e = getListByIndex(*LA, i)-&gt;next-&gt;expn;<span class="comment">//取指数</span></span><br><span class="line">		c = getListByIndex(*LA, i)-&gt;next-&gt;conf;<span class="comment">//取系数</span></span><br><span class="line">		<span class="comment">//先指数相同</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= getLength(LB); i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (getListByIndex(*LB, i)-&gt;next-&gt;expn==e)</span><br><span class="line">			&#123;</span><br><span class="line">				getListByIndex(*LB, i)-&gt;next-&gt;conf =getListByIndex(*LB, i)-&gt;next-&gt;conf + c;<span class="comment">//系数相加</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//指数不同</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= getLength(LB); i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (getListByIndex(*LB, i)-&gt;expn&lt;e&amp;&amp;getListByIndex(*LB, i)-&gt;next-&gt;expn&gt;e)</span><br><span class="line">			&#123;</span><br><span class="line">				insertList(LB, i, c, e);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;多项式相加后: &quot;</span>);</span><br><span class="line">	traversalList(*LB);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入x的值 &quot;</span>);</span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;答案为 %f\n\n&quot;</span>, calculateMultinomial(*LB, x));</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType ac[<span class="number">4</span>] = &#123; <span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">5</span> &#125;;<span class="comment">//系数</span></span><br><span class="line">	ElemType ae[<span class="number">4</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">17</span> &#125;;<span class="comment">//指数</span></span><br><span class="line">	</span><br><span class="line">	ElemType bc[<span class="number">3</span>] = &#123; <span class="number">8</span>,<span class="number">22</span>,<span class="number">-9</span>&#125;;</span><br><span class="line">	ElemType be[<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">	LinkList LA, LB;</span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	initList(&amp;LA);</span><br><span class="line">	initList(&amp;LB);</span><br><span class="line">	creatListEnd(&amp;LA, ac,ae,<span class="number">4</span> );</span><br><span class="line">	creatListEnd(&amp;LB, bc, be, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;多项式LA: &quot;</span>);</span><br><span class="line">	traversalList(LA);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入x的值 &quot;</span>);</span><br><span class="line">	scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;答案为 %f\n\n&quot;</span>, calculateMultinomial(LA, x));</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;多项式LB: &quot;</span>);</span><br><span class="line">	traversalList(LB);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入x的值 &quot;</span>);</span><br><span class="line">	scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;答案为 %f\n\n&quot;</span>, calculateMultinomial(LB, x));</span><br><span class="line"></span><br><span class="line">	mergeList(&amp;LA, &amp;LB);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="附加-有序集合的顺序合并"><a class="markdownIt-Anchor" href="#附加-有序集合的顺序合并"></a> 附加 有序集合的顺序合并</h1>
<p>可以忽略短的无序集合 不会插入相同的元素</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIST_INIT_SIZE 10 <span class="comment">//线性表储存空间初始分配量</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LISTINCREMRNT 10 <span class="comment">//线性表储存空间的分配增量</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"></span><br><span class="line">					  <span class="comment">//线性表动态分配顺序储存结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType* elem;<span class="comment">//储存空间基址</span></span><br><span class="line">	<span class="type">int</span> length;<span class="comment">//当前长度</span></span><br><span class="line">	<span class="type">int</span> listsize;<span class="comment">//当前分配的存储容量</span></span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个空的表</span></span><br><span class="line">Status <span class="title function_">InitList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	L-&gt;elem = (ElemType*)__vcrt_malloc_normal(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">	<span class="keyword">if</span> (!(L-&gt;elem))</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);<span class="comment">//分配失败</span></span><br><span class="line">	L-&gt;length = <span class="number">0</span>;<span class="comment">//长度</span></span><br><span class="line">	L-&gt;listsize = LIST_INIT_SIZE;<span class="comment">//容量</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">Status <span class="title function_">ListInsert</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length + <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">	ElemType* q = &amp;(L-&gt;elem[i - <span class="number">1</span>]), *p = <span class="literal">NULL</span>;<span class="comment">// q为插入位置</span></span><br><span class="line">	<span class="keyword">for</span> (p = &amp;(L-&gt;elem[L-&gt;length - <span class="number">1</span>]); p &gt;= q; --p)</span><br><span class="line">		* (p + <span class="number">1</span>) = *p;<span class="comment">// 插入位置及之后的元素后移</span></span><br><span class="line">	*q = e;<span class="comment">// 插入e</span></span><br><span class="line">	++(L-&gt;length);<span class="comment">// 表长增加1</span></span><br><span class="line">	<span class="keyword">if</span> (L-&gt;length == L-&gt;listsize) &#123;</span><br><span class="line">		ElemType*  newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + LISTINCREMRNT) * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">		<span class="keyword">if</span> (!newbase)</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">		L-&gt;elem = newbase;<span class="comment">// 新基址</span></span><br><span class="line">		L-&gt;listsize += LISTINCREMRNT;<span class="comment">// 增加存储容量</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getLength</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过索引取值</span></span><br><span class="line">ElemType <span class="title function_">getElemByIndex</span><span class="params">(SqList* L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;elem[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过值取索引</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getIndexByElem</span><span class="params">(SqList* L, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; L-&gt;length; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((L-&gt;elem[j]) == e)</span><br><span class="line">			<span class="keyword">return</span> j + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历表</span></span><br><span class="line">Status <span class="title function_">myPrintf</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第&quot;</span>&lt;&lt; i + <span class="number">1</span>&lt;&lt;<span class="string">&quot;个值------------&quot;</span> &lt;&lt; (L-&gt;elem[i])&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建表</span></span><br><span class="line">Status <span class="title function_">creatList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;(L-&gt;length));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输入为 %d\n&quot;</span>, L-&gt;length);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; L-&gt;elem[i];</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//合并</span></span><br><span class="line">Status <span class="title function_">mergeList</span><span class="params">(SqList* LA,SqList* LB)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (LA-&gt;length &lt; LB-&gt;length) &#123;</span><br><span class="line">		SqList* temp;</span><br><span class="line">		temp = LA;</span><br><span class="line">		LA = LB;</span><br><span class="line">		LB = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; LB-&gt;length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		ElemType e = getElemByIndex(LB,i+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">if</span> (getIndexByElem(LA, e)==<span class="number">-1</span>) &#123;</span><br><span class="line">			ListInsert(LA, <span class="number">1</span>, e);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;合并后\n&quot;</span>);</span><br><span class="line">	myPrintf(LA);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	SqList* LA = (SqList*)__vcrt_malloc_normal(<span class="keyword">sizeof</span>(SqList));</span><br><span class="line">	InitList(LA);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入表A的长度\n&quot;</span>);</span><br><span class="line">	creatList(LA);</span><br><span class="line">	myPrintf(LA);</span><br><span class="line">	SqList* LB = (SqList*)__vcrt_malloc_normal(<span class="keyword">sizeof</span>(SqList));</span><br><span class="line">	InitList(LB);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入表B的长度\n&quot;</span>);</span><br><span class="line">	creatList(LB);</span><br><span class="line">	myPrintf(LB);</span><br><span class="line"></span><br><span class="line">	mergeList(LA, LB);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>我认为比较详细的java笔记</title>
    <url>/2021/03/15/%E6%88%91%E8%AE%A4%E4%B8%BA%E6%AF%94%E8%BE%83%E8%AF%A6%E7%BB%86%E7%9A%84java%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="基本的东西"><a class="markdownIt-Anchor" href="#基本的东西"></a> 基本的东西</h1>
<p>  <abbr title="Java Stndard Edition"><mark>Java SE</mark></abbr>：支持面向桌面级应用的Java平台，提供了完整的Java核心API。</p>
<p>  <abbr title="Java Enterprise Edition"><mark>Java EE</mark></abbr>：是为开发企业环境下的应用程序提供的一套解决方案。</p>
<p>  <abbr title="Java Micro Edition"><mark>Java ME</mark></abbr>：支持Java程序运行在移动终端上的平台，对JavaAPI有所简化。</p>
<p>  <abbr title=""><mark>Java Card</mark></abbr>：支持一些Java小程序（Applets）运行在小内存设备（智能卡）上的平台。</p>
<p>  类C语言、纯粹的面向对象、舍弃C中的指针、垃圾回收功能</p>
<p>  <mark>特征</mark>：易学的、强制面相对象的、分布式的、健壮的、安全的、体系结构中的（？）、解释型的、性能略高、原生支持多线程的。</p>
<p>  <mark>特点</mark>：面向对象（概念：类、对象，特性：封装、继承、多态）、健壮性、跨平台性。</p>
<p>  内存泄露（回收不了）和内存溢出还是会出现。</p>
<p>  JDK：Java Development Kit、JRE：Java Runtime Environment。有人问过我，当时比较迷糊，因为我常记各种知识的获取渠道，需要就立马去找。</p>
<p>  JDK = 开发工具集 + JRE；JRE = Java SE标准类库 + JVM；</p>
<p><img data-src="https://i.loli.net/2021/03/15/2ySiRewxE5hrMVl.png" alt="java概念图描述.PNG" /></p>
<h1 id="简短的东西"><a class="markdownIt-Anchor" href="#简短的东西"></a> 简短的东西</h1>
<p>  <code>true</code>、<code>false</code>、<code>null</code>严格不算关键字，但可以当关键字使用。<code>strictfp</code>、<code>transient</code>、<code>volatile</code>、<code>assert</code>不完全见过。<code>goto</code>、<code>const</code>保留字。</p>
<table>
<thead>
<tr>
<th style="text-align:center">byte</th>
<th style="text-align:center">1</th>
<th style="text-align:center">7</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">short</td>
<td style="text-align:center">2</td>
<td style="text-align:center">15</td>
</tr>
<tr>
<td style="text-align:center">int</td>
<td style="text-align:center">4</td>
<td style="text-align:center">31</td>
</tr>
<tr>
<td style="text-align:center">long</td>
<td style="text-align:center">8</td>
<td style="text-align:center">63</td>
</tr>
<tr>
<td style="text-align:center">float</td>
<td style="text-align:center">4</td>
<td style="text-align:center">3.403  38</td>
</tr>
<tr>
<td style="text-align:center">double</td>
<td style="text-align:center">8</td>
<td style="text-align:center">1.798  308</td>
</tr>
</tbody>
</table>
<p>  <code>float</code>和<code>double</code>比<code>long</code>范围大，因为<code>数|幂</code></p>
<p>  <code>int a = 128; (byte)a = -128; int a = 129; (byte)a = -127;</code></p>
<p>  原码取反变反码+1变补码。底层以补码保存。</p>
<p>  <code>instanceof</code> 用过几次。</p>
<p>  <code>&gt;&gt;&gt;</code>空位0补。 <code>~</code>取反成反码。</p>
<p>  就近原则（脑子里应该有过，很难``遇到，所以没有脑子里多次触发）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(x &gt; <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span>(y &gt; <span class="number">2</span>)</span><br><span class="line">        sout;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    sout;</span><br></pre></td></tr></table></figure>
<p>  <code>switch</code>：<code>byte</code>、<code>short</code>、<code>char</code>、<code>int</code>、<code>枚举(5.0)</code>、<code>String(7.0)</code></p>
<p>  <code>default</code>位置是灵活的。会有好玩的效果。</p>
<p>  计算这一年过来多少天：到着走，<code>case 12:这个月的总天数 11 10 9 …… 2 1:日</code>，无需<code>break</code>。</p>
<p>  质数：<code>for n % (2 …… n-1)</code> 改进：①非质数。②<code>2……sqrt(n)</code></p>
<p>  <code>break</code>、<code>continue</code>关键字后面不能声明执行语句。（我以前都没考虑过，因为不会这样写。）</p>
<p>  标签<code>lable:</code>、<code>continue lable;</code>用得比较少，因为多少靠脑子就可以不要跳多层了。</p>
<p>  空指针：可以用二维数组触发，<code>[1][] -&gt; [0][0]</code>。有人问过我<code>equals</code>的写法，当时我只记得阿里巴巴的手册有写过。</p>
<p>  快排思想：选基数，小的放一边，大的放一边，递归。</p>
<p>  <code>Arrays</code>一些方法<code>equals</code>、<code>toString</code>、<code>fill</code>、<code>sort</code>、<code>binarySerach</code>。</p>
<p>  面向过程：POP，面向对象：OOP。</p>
<p>  <img data-src="https://pic2.zhimg.com/v2-ce955f2368f5a436f94ad63b45ce73d1_r.jpg" alt="内存解析" /></p>
<p>  <img data-src="https://img-blog.csdnimg.cn/20201210185926335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldmVyX2xhdGU=,size_16,color_FFFFFF,t_70" alt="内存解析" /></p>
<p>以前应该有人问过，忘记该答这个了。</p>
<p>  重载可以出现自动类型提升<code>(int,int)-&gt;(double,double)</code>。</p>
<p>  5.0可变参数 ，以前是数组。</p>
<h1 id="高级点的东西"><a class="markdownIt-Anchor" href="#高级点的东西"></a> 高级点的东西</h1>
<p>  <code>printStream</code> 继承重写下打印，设置给<code>System</code>，可以实现有趣的打印效果。</p>
<p>  类：缺省 <code>public</code>。</p>
<p>  <mark>MVC</mark>：将整个程序分为三个层次：视图模型层、控制器层、数据模型层。</p>
<p>模型层：model主要处理数据。</p>
<ul>
<li>数据对象封装 <code>model.bean/domain</code></li>
<li>数据库操作类 <code>model.dao</code></li>
<li>数据库 <code>model.db</code></li>
</ul>
<p>视图层：view显示数据</p>
<ul>
<li>相关工具类 <code>view.utils</code></li>
<li>自定义view <code>view.ui</code></li>
</ul>
<p>控制层：controller处理业务逻辑</p>
<ul>
<li>应用界面相关 <code>controller.activity</code></li>
<li>存放fragment <code>controller.fragment</code></li>
<li>显示列表的远程适配器 <code>controller.adapter</code></li>
<li>服务相关的 <code>controller.service</code></li>
<li>抽取的基类 <code>controller.base</code></li>
</ul>
<p>  <code>import static java.lang.System.*;</code>然后<code>out.println();</code> <code>import static</code>落脚的是类（/接口）里的静态结构。</p>
<p>  重写：权限：子≥父，返回值：void—&gt;void、类—&gt;类or子类，异常：父≥子。</p>
<p>  多态：调用父类声明过的子类方法。属性不适用多态。虚拟方法调用。父类被重写的方法。</p>
<p>  10 == 10.0 == char 10</p>
<p>  单元测试：①类public，②公共无参构造器，③ 方法：<code>public void method()&#123;&#125;</code>，④@Test —&gt;org.junit.Test</p>
<p>  三元有类型提升</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> <span class="literal">true</span> ? <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">1</span>) : <span class="keyword">new</span> <span class="title class_">Double</span>(<span class="number">2.0</span>);</span><br><span class="line">System.out.println(o1); <span class="comment">// 输出 1.0</span></span><br></pre></td></tr></table></figure>
<p>  多态的理解：</p>
<ul>
<li>代码的通用性。</li>
<li><code>equals(Object obj)</code>，<code>connection</code>。</li>
<li>抽象类、接口的使用体现了多态型。</li>
</ul>
<p>  <code>static</code>可以修饰内部类。</p>
<h1 id="再高级点的东西"><a class="markdownIt-Anchor" href="#再高级点的东西"></a> 再高级点的东西</h1>
<h2 id="设计模式-代码块-抽象类-接口-内部类"><a class="markdownIt-Anchor" href="#设计模式-代码块-抽象类-接口-内部类"></a> 设计模式、代码块、抽象类、接口、内部类</h2>
<p>  1995年GOF四人组。</p>
<p>创建型：工厂方法、抽象工厂、单例、建造者、原形。</p>
<p>结构性：适配器、装饰器、代理、外观、桥接、组合、享元。</p>
<p>行为型：策略、模板方法、观察者、迭代子、责任链、命令、备忘录、状态、访问者、中介者、解释器。</p>
<p>好多呀。我有一个感觉：Thread用了代理模式。</p>
<p>  java.lang.Runtime用了饿汉的单例。</p>
<table>
<thead>
<tr>
<th style="text-align:center">饿：先造</th>
<th style="text-align:center">懒：要才造</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">对象加载时间长</td>
<td style="text-align:center">延迟对象的创建</td>
</tr>
<tr>
<td style="text-align:center">天然线程安全</td>
<td style="text-align:center">简单写法不安全</td>
</tr>
</tbody>
</table>
<p>  以前看过详细的讲解。涉及到反射、序列化，没完全记住😭。主要是混乱。</p>
<p>  一些例子：网站计数器、日志、数据库连接池（用过一点点c3p0，在Apache下的，还有几个类似的，其实就一次）、读取配置的类、Application、win的任务管理器和RecycleBin（回收站）。</p>
<p>  代码块：可以用来初始化。修饰只能用<code>static</code>。</p>
<p>  <code>static &#123;&#125;</code>：随类加载执行。<code>&#123;&#125;</code>：对象的创建执行。可以对对象初始化。<font color="#FB6C1"><code>&#123;&#125;</code>比构造先。</font>(<code>color=&quot;#FFB6C1&quot;</code>变<code>color=&quot;\#FFB6C1&quot;</code>变成绿的了，它是圆盘上旋转180度了吗？添添删删颜色也会变，应该是识别的问题，我猜的)。我说：“有时不要被main迷糊了，它所在的类也要加载”。我还说：“我还看到过premain，好像和agent有关（我不太信），好像和在线调试有关”（全很是怀疑）。</p>
<p>  属性赋值顺序：默认→显示/代码块（看位置）→构造→对象属性，方法。</p>
<p>  子类也可以是抽象类。</p>
<p>  <code>abstract</code>不修饰属性、构造器、私有方法、静态方法、final的方法和类。</p>
<p>  多态的体现：模板方法，用了抽象。像英语作文的模板。比如数据库访问的封装、junit单元测试、servlet的doGet和doPost。</p>
<p>  接口无构造器，接口直接可以多继承。</p>
<p>  代理模式：个人感觉就是一个帮你做事并可以在此前做一些其他事，像VPN、中介的感觉。</p>
<p>  应用场景：</p>
<ul>
<li>安全代理：屏蔽对真实角色的直接访问。</li>
<li>远程代理：通过代理类处理远程方法调用（RMI 不知道）。</li>
<li>延迟加载</li>
</ul>
<p>  分类：静态和动态</p>
<p>  工厂：将创建者和调用者分开。如果我没记错的话，<code>BigDecimal</code>就用了工厂，当时我翻源码的时候感觉的，虽然当时懂皮毛。</p>
<p>  JDK7以前<code>public static final 全局常量</code>，JDk8有了静态方法和默认方法。静态方法只能自己用，相当于工具类了。默认方法可以重写。不重写的话，父类和接口都有则父类优先。关于方法的调用：方法名：调用自己的，super.方法：父类的，接口.super.方法：接口的。</p>
<p>  内部类有成员和局部（方法内、代码块、构造器内）之分。对于成员内部类考虑静态和非静态，它们具有/能被/可以：①调用外部类结构。②static修饰。③4种权限。④属性、方法、构造器等。⑤final。⑥abstract。关于外部类的方法可以使用<code>外部类.this.(前面可省略)方法</code>。</p>
<p>  对于实例化内部类，静态的可以用<code>new.外部类.外部类()</code>，非静态的可以先new外部类，在用<code>变量.new内部类</code>。</p>
<p>  内部类使用方式一（常、标准）、</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> comparable <span class="title function_">getComparable</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">MyComparble</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Object o)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyComparable</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  方式二、</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Comparable</span>()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Object o)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>  Integer的内的缓存。Thread内的状态枚举类。</p>
<p>  抽象类和接口大致区别：不能被实例化、都可以被继承（单继承VS多继承）、抽象方法、抽象类有构造器。</p>
<p>  抽象类：InputStream、OutputStream、Reader、Writer内部定义了抽象的read（）、writer（）方法。</p>
<p>   我听过JDK9时，接口可有私有方法。</p>
<p>  方法的局部内部类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//8以后就省略了，反正都是final，干脆就不写了。</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">AA</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">            num.sout；</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="异常"><a class="markdownIt-Anchor" href="#异常"></a> 异常</h2>
<p>Throwable类下有Error：虚拟机无法决解的严重问题。StackOverflowError、OOM：<code>new Integer[1024*1024*1024]</code>Exception：一般性问题，可处理。空指针、不存在文件、越界。对于异常，分为受检（checked）异常：编译时和非受检（unchecked）异常：运行时。</p>
<p>checked：</p>
<ul>
<li>IO——read、writer、close
<ul>
<li>FileNotFound——对文件。</li>
</ul>
</li>
<li>ClassNotFound</li>
</ul>
<p>unchecked：</p>
<ul>
<li>空指针——二维数组可触发，一位数组也可以：<code>null[3]</code>，<code>null.方法</code>。</li>
<li>越界——<code>abc.charAt(3)</code>。</li>
<li>ClassCast——我认为向下转型容易触发。</li>
<li>NumberFormat——字符串转数字。</li>
<li>InputMissMatch——Scanner，我几乎不会遇到。</li>
<li>Arithmetic——算术，明着来很难触发，<code>1/0</code>。</li>
</ul>
<p>  几个<code>catch</code>排着的话，异常顺序为<code>子子……父</code>。</p>
<p>  常见的方法：<code>e.getMessage()</code>、<code>e.printStackTrace()</code>。我认为如果开发中是不是要结合Log。</p>
<p>  即使有<code>finally</code>，<code>try</code>和<code>catch</code>也可以有<code>return</code>，<code>finally</code>里的<code>return</code>大。</p>
<p>  重写的话，异常类型：父≥子，父没有抛出，则子类只能<code>try</code>。例子：<code>run</code>方法。</p>
<p>  对于递进的方法，一般抛出，外面<code>try</code>。</p>
<p>  <code>try</code>还可以看到无<code>catch</code>的情形。</p>
<p>  自定义异常类的步骤：①继承。②序列号<code>serialVersionUId</code>。③一般两个构造器<code>()(String msg)</code>。</p>
<h1 id="我和它之间还有些朦胧的东西它有面纱"><a class="markdownIt-Anchor" href="#我和它之间还有些朦胧的东西它有面纱"></a> 我和它之间还有些朦胧的东西，它有面纱。</h1>
<h2 id="线程相关"><a class="markdownIt-Anchor" href="#线程相关"></a> 线程相关</h2>
<h3 id="基本概念等小东西"><a class="markdownIt-Anchor" href="#基本概念等小东西"></a> 基本概念等小东西</h3>
<p>  程序：为完成任务，指令的集合。</p>
<p>  进程：已经运行的一个程序。</p>
<p>  线程：一个程序内部的一条执行路径。调度和执行的单位，有独立的运行栈和程序计数器（PC）。</p>
<p>  一个Java程序至少有三个线程：mian（），gc，异常处理。</p>
<p>  我听过：Java的线程是一对一的，Go的是多对多的，K开头的那个东西帮Java弄成多对多的。</p>
<p>  并行：多个CPU同时执行多个任务。</p>
<p>  并发：一个CPU（时间片）同时执行多个任务。</p>
<p>多线程的优点：</p>
<ol>
<li>提高应用程序的响应，对图形化界面更有意义，可增强用户体验。</li>
<li>提高CPU的效率。</li>
<li>改善程序结构，利于理解和修改。</li>
</ol>
<h3 id="前两种创建线程的方式"><a class="markdownIt-Anchor" href="#前两种创建线程的方式"></a> 前两种创建线程的方式</h3>
<h4 id="thread"><a class="markdownIt-Anchor" href="#thread"></a> Thread</h4>
<p>  步骤：继承Thread，重写run，创建对象，调用<code>start()</code>。</p>
<p>  如果直接调用<code>run()</code>，则相当于直接调用方法，还在同一个线程内。</p>
<p>  不可多次<code>start()</code>，因为状态会报异常。</p>
<p>  Thread的部分方法，注意<code>wite</code>、<code>notify</code>、<code>notifyAll</code>在Object里。（至于为什么在这里面，我想应该是同步监视器调方法的原因。）</p>
<ul>
<li>start、run。</li>
<li>currentThread——静态，得到当前线程。</li>
<li>getName</li>
<li>setName——创建是也可以取名字。</li>
<li>yield——释放当前CPU的的执行权。</li>
<li>join——其他线程调用join，当前线程进入阻塞状态（有异常）,直到调用join的线程结束才有机会。</li>
<li>stop——过时了，如其名。</li>
<li>sleep——lang的毫秒，有异常，静态。</li>
<li>isAlive——当前线程是否存活。（我听过：有个框架对于“is”开头的方法，处理（我猜是反射）会有问题。）</li>
</ul>
<p>  线程的调度策略有时间片和抢占式：高优先级的线程抢占CPU。Java的方法是同优先级的用先进先出、时间片，高优先级的是使用优先调度的抢占式策略。</p>
<p>关于优先级：</p>
<ul>
<li>MAX——PRIORITY：10</li>
<li>MIN——PRIORITY：1</li>
<li>NORM——PRIORITY：5</li>
</ul>
<h4 id="runnable"><a class="markdownIt-Anchor" href="#runnable"></a> Runnable</h4>
<p>  实现Runnable接口，创建对象传入Thread，这里提现了多态。（应该是Threnad(Runnable target））</p>
<p>  这种方式方便卖票。</p>
<p>  优先选择这个，它没有单继承的局限性，可以共享数据。</p>
<h3 id="分类和周期"><a class="markdownIt-Anchor" href="#分类和周期"></a> 分类和周期</h3>
<p>  Java线程分为守护线程和用户线程。在<code>start()</code>调用前调用<code>setDaemon(true)</code>就可用户线程变守护线程。gc就是典型的守护线程。</p>
<p><img data-src="https://i.loli.net/2021/03/17/mpaZNjI6rk2yBMQ.png" alt="线程状态转换图.png" /></p>
<h3 id="线程安全问题"><a class="markdownIt-Anchor" href="#线程安全问题"></a> 线程安全问题</h3>
<p>  利用同步机制</p>
<h4 id="同步代码块"><a class="markdownIt-Anchor" href="#同步代码块"></a> 同步代码块</h4>
<p>  synchronnized、synchronized、synchronizeds、synchronized、synchronized、synchronized</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(同步监视器)&#123;</span><br><span class="line">    操作共享数据的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  同步监视器：锁：任何一个类的对象。</p>
<p>  多个线程公用一把锁。</p>
<p>  Runnable可以用<code>this</code>，继承的方式可以用<code>类.class</code>。推出类也是对象<code>Class clazz = 类.class</code>，<code>类.class</code>只会加载一次。</p>
<h4 id="同步方法"><a class="markdownIt-Anchor" href="#同步方法"></a> 同步方法</h4>
<p>  用<code>synchronized</code>修饰。非静态的锁是<code>this</code>，非静态的锁是<code>当前类本身</code>。</p>
<h4 id="lock锁jdk50"><a class="markdownIt-Anchor" href="#lock锁jdk50"></a> Lock锁——JDK5.0</h4>
<p>  Lock本身是一个接口，我们使用它的一个子类ReentrantLock，参数可以是一个boolean，ture的话是公平的Lock。</p>
<ol>
<li>实例化Lock，<code>new ReentrantLock()</code>。</li>
<li>把要处理的代码放到<code>try</code>里。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">//调用lock()方法</span></span><br><span class="line">    实例Lock.lock();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    实例Lock.unlock();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  感觉可以应用模板方法。</p>
<p>  <code>synchronized</code>与<code>lock</code>的异同：都可以解决线程安全问题。<code>synchronized</code>在执行相应的同步代码以后，自动地释放锁。<code>lock</code>需要手动启动同步，结束同步也需要手动实现。</p>
<p>  建议：lock→同步代码块→同步方法。其实谁都可以。</p>
<h4 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h4>
<p>单例修改:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(类.class)&#123;</span><br><span class="line">    <span class="keyword">if</span>(instance == <span class="literal">null</span>)&#123;</span><br><span class="line">        intstance = <span class="keyword">new</span> 构造();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效率差些</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(instance == <span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="keyword">synchronized</span>(类.class)｛</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="literal">null</span>)&#123;</span><br><span class="line">            intstance == <span class="keyword">new</span> 构造();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> instance;</span><br></pre></td></tr></table></figure>
<p>效率高些</p>
<p>  死锁：不同的线程分别占用对方需要的同步资源不放弃，都在等待对方放弃自己需要的同步资源，就形成了死锁。</p>
<p>  一种可能形成死锁的方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>()&#123;两个<span class="keyword">synchronized</span>，两个锁嵌套&#125;.start();</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;两个<span class="keyword">synchronized</span>交换锁嵌套&#125;).start();</span><br></pre></td></tr></table></figure>
<h3 id="线程的通信"><a class="markdownIt-Anchor" href="#线程的通信"></a> 线程的通信</h3>
<p>  <code>wait()</code>：会释放锁。<code>notify()</code>：唤醒一个被wait的线程，喂，起来搬砖了。<code>notifiyAll</code>：唤醒所有被wait的线程。要在synchronized块里或者synchronized方法里，lock用的别的方式。</p>
<p>  如果在外面另外声明一个唯一的对象，比如obj。此时</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(obj)&#123;</span><br><span class="line">    <span class="built_in">this</span>.notify();<span class="comment">//非法的monitorState</span></span><br><span class="line">    ……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  所以上面的方法，调用者必须是同步代码块或同步方法的同步监视器。</p>
<table>
    <tr>
        <th colspan=2>`sllep()`和`wait()`异同</th>
    </tr>
    <tr>
    	<td colspan=2>当前线程进入阻塞状态</td>
    </tr>
    <tr>
    	<td>在Thread类</td>
        <td>在Object类</td>
    </tr>
    <tr>
    	<td>几乎无限制</td>
        <td>synchronized代码块和synchronized方法内，由同步监视器调用</td>
    </tr>
    <tr>
    	<td>不会释放锁</td>
        <td>释放锁</td>
    </tr>
</table>
<h3 id="后两种创建线程的方式"><a class="markdownIt-Anchor" href="#后两种创建线程的方式"></a> 后两种创建线程的方式</h3>
<h4 id="callable有泛型"><a class="markdownIt-Anchor" href="#callable有泛型"></a> Callable——有泛型</h4>
<p>  可以有返回值、方法可以抛出异常、支持泛型的返回值。不过有些需要借助FutureTask类，比如获取返回结果。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CallableExample</span> <span class="keyword">implements</span> <span class="title class_">Callable</span> &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> Object <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">          ……</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  Future接口可以对具体Runnable、Callable任务的执行结果进行取消、查询是否完成、获取结果等。FutureTask是Future接口的唯一实现类，有泛型。FutureTask同时实现（间接）了Runnable、Future接口。它既可以作为Runnable被线程执行，又可以作为Future对到Callable的返回值。</p>
<p>  从列子里得到步骤</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestCallable</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="type">ThreadDemo</span> <span class="variable">td</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadDemo</span>();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//1.执行 Callable 方式，需要 FutureTask 实现类的支持，用于接收运算结果。</span></span><br><span class="line">		FutureTask&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;&gt;(td);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">new</span> <span class="title class_">Thread</span>(result).start();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//2.接收线程运算后的结果</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">Integer</span> <span class="variable">sum</span> <span class="operator">=</span> result.get();  <span class="comment">//FutureTask 可用于 闭锁</span></span><br><span class="line">			System.out.println(sum);</span><br><span class="line">			System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ThreadDemo</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt;&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100000</span>; i++) &#123;</span><br><span class="line">			sum += i;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> sum;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  创建实现Callable的类，实现Call方法，创建对象。创建FutureTask对象。用Thread接收Callable实现类对象并start。用FutureTask的get得到返回值。</p>
<p>  Callable比Runnable强大的原因：call()有返回值、call()可以抛出异常、支持泛型。</p>
<h4 id="线程池"><a class="markdownIt-Anchor" href="#线程池"></a> 线程池</h4>
<p>  当经常创建和销毁，使用量特别大的资源：并发。</p>
<p>  好处就是：提高响应速度（减少创建新线程的时间）、降低资源消耗（重复利用）、便于管理。</p>
<p>  5.0：ExecutorService真正的线程池接口。常见子类ThreadPoolExecutor。</p>
<ul>
<li><code>void execute(Runnable command)</code>：执行任务/命令，没有返回值。一般用来执行runnable。</li>
<li><code>&lt;T&gt; Future&lt;T&gt; submit(Callable&lt;T&gt; task)</code>：执行任务，有返回值。一般用来执行callable。</li>
<li><code>void shutdown()</code>：关闭连接池。</li>
</ul>
<p>  Executors工具类，线程池的工具类，用于创建并返回不同类型的线程池。</p>
<ul>
<li><code>Executors.newCacheThreadPool()</code>：创建一个可根据需要创建新线程的线程池。</li>
<li><code>Executors.newFixedThreadPool(n)</code>：创建一个可重用固定线程数的线程池。</li>
<li><code>Executors.newSingleThradExecutor()</code>：创建一个只有一个线程的线程池。</li>
<li><code>Executors.newScheduledThradPool(n)</code>：创建一个线程池。它可以安排在给定延迟后运行命令或者定期地执行。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//多态</span></span><br><span class="line"><span class="comment">//后面其实是ThreadPoolExecutor</span></span><br><span class="line"><span class="type">ExecutorService</span> <span class="variable">service</span>  <span class="operator">=</span> Executors.newFixedTheadPool(<span class="number">10</span>);</span><br><span class="line">service.execute(Runnable实现类对象);</span><br><span class="line">service.submit(Runnable或Callable实现类对象);</span><br><span class="line">service.shutdown();</span><br></pre></td></tr></table></figure>
<h2 id="常用类"><a class="markdownIt-Anchor" href="#常用类"></a> 常用类</h2>
<h3 id="string"><a class="markdownIt-Anchor" href="#string"></a> String</h3>
<p>  final类，implements了<code>java.io.Serializale</code>、<code>Comparable</code>、<code>CharSequence</code>。用<code>final char[] value</code>存储字符串数据。其中new在堆，&quot;&quot;在字符常量池。</p>
<ul>
<li><code>new String()</code>——<code>this.value = new char[0]; &quot;&quot;.value;</code></li>
<li><code>new String(original)</code>——<code>this.value = original.value</code></li>
<li><code>new String)(char[])</code>——<code>this.value = Arrays.copyof(vallue,value.length)</code></li>
</ul>
<p>  一个人类，<code>P1.name.equals(P2.name) == true</code>，<code>P1.name == P2.name == true</code>。</p>
<p>  <code>&quot;A&quot; + &quot;B&quot; = &quot;AB&quot;</code>涉及到变量名的组合，在堆里，相当于new。<code>final的变量（&quot;A&quot;） + &quot;B&quot; = &quot;AB&quot;</code></p>
<p>  <code>intern()</code>返回常量池已经存在的，没有就添加。&gt; 返回字符串对象的规范表示。</p>
<p>  一些方法：<code>length()</code>、<code>charAt()</code>、<code>isEmpty():return value.length == 0;</code>、<code>toLowerCase()</code>、<code>toUpperCase()</code>、<code>trim()</code>、<code>equals(obj)</code>、<code>euqalsIgnorecCase(str)</code>、<code>concat(str)↔&quot;+&quot;</code>、<code>comapreTo(str)</code>、<code>substring(begin)</code>、<code>substring(begin,end) [)</code>、<code>contains(CharSequence s)</code>、<code>indexOf(str)</code>、<code>indexOf(str,index)</code>、<code>rreplace(oc,nc)</code>、<code>replace(CahrSequence target,CharSequence replacement)</code>、<code>repalceAll(regex,replacement)</code>、<code>repalceFirst(regex,repalcement)</code>、<code>matches(regex)</code>、<code>split</code>、<code>toCharArray</code></p>
<ul>
<li><code>endWith(str)</code>：是否以str结束。</li>
<li><code>startWith(str)</code>：是否以str结束。</li>
<li><code>startWith(str,index)</code>：是否是子串的开始。</li>
<li><code>last类别两个index</code>：反向搜索。</li>
</ul>
<p>  转换成字符数组：<code>str.getByte()</code>默认字符集，<code>(&quot;gbk&quot;)</code>使用GBK。复习：936——GBK，65001——utf8。</p>
<h3 id="stringbuffer和stringbuilder"><a class="markdownIt-Anchor" href="#stringbuffer和stringbuilder"></a> StringBuffer和StringBuilder</h3>
<p>  都是可变的。StringBuffer线程安全，效率低。StringBuilder线程不安全，效率高。都是<code>char[]</code>。</p>
<p>  <code>new StringBuffer()</code>→<code>new char[16]</code>。</p>
<p>  <code>new StringBuffer(str)</code>→<code>new char[str.length + 16]</code>。</p>
<p>  <code>length</code>→<code>count</code>。</p>
<p>  默认扩容是原容量的2倍+2。</p>
<p>  一些方法，<code>append(xxx)</code>有返回，方法链。<code>delete(start,end)</code>、<code>replace(start,end,str)</code>、<code>insert(offset,xxx)</code>、<code>reverse()</code>、<code>indexOf(str)</code>、<code>substring(start,end)</code>、<code>length</code>、<code>charAt()</code>、<code>setCahrAt(n,ch)</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="type">StingBufer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">sb.append(str);</span><br><span class="line">sb.len == <span class="number">4</span>;</span><br><span class="line">sb <span class="string">&quot;null&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//异常</span></span><br><span class="line"><span class="type">StringBufer</span> <span class="variable">sb1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(str)</span><br></pre></td></tr></table></figure>
<h3 id="字符常量池"><a class="markdownIt-Anchor" href="#字符常量池"></a> 字符常量池</h3>
<p>  1.6 方法区（永久区）</p>
<p>  1.7 堆空间</p>
<p>  1.8 方法区（元空间）</p>
<h3 id="8之前的日期和时间api"><a class="markdownIt-Anchor" href="#8之前的日期和时间api"></a> 8之前的日期和时间API</h3>
<h4 id="system的和date"><a class="markdownIt-Anchor" href="#system的和date"></a> System的和Date</h4>
<p>  <code>System.currentTimeMillis()</code>单位毫秒，从1970年开始，long型。</p>
<p>  <code>java.utils.Date</code>不利于国际化。有两个构造器<code>()</code>、<code>(long)</code>，有两个方法<code>toString()</code>、<code>getTime() 毫秒数</code>。它的子类<code>java.sql.Date</code>对应数据库的日期变量。它的构造器<code>(long)</code>，另一个无了。</p>
<p>  <code>java.util.Date</code>向下转型到<code>java.sql.Date</code>，也可以通过<code>getTime()</code>进行new出。</p>
<h4 id="javatextsimpledateformat"><a class="markdownIt-Anchor" href="#javatextsimpledateformat"></a> <code>java.text.SimpleDateFormat</code></h4>
<p>  不与语言有关的方式来格式化和解析日期。</p>
<p>  <code>SimpleDateFormat()</code>：默认模式和语言环境，也可以用<code>SimpleDateFormat(pattern)</code>来指定pattern格式。通过<code>format(Date date)</code>来格式化时间对象。通过<code>Date parse(String sourse)</code>来解析字符串。</p>
<p>  简单使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>();</span><br><span class="line"><span class="type">Date</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sdf.format(d);<span class="comment">//19-2-18 上午 11:48</span></span><br><span class="line"><span class="type">Date</span> <span class="variable">d1</span> <span class="operator">=</span> sdf.parse(str);</span><br><span class="line"></span><br><span class="line">sdf = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br><span class="line">str = sdf.format(d);</span><br><span class="line">d1 = sdf.parse(str);</span><br></pre></td></tr></table></figure>
<p>  字符串时间转<code>java.sql.Date</code>：先得到<code>java.util.Date</code>，在通过<code>getTime()</code>生成。</p>
<h4 id="calendar-日历"><a class="markdownIt-Anchor" href="#calendar-日历"></a> Calendar 日历</h4>
<p>  1.1加入，弃用Date，但并不好多少。<code>java.util.Calendar</code>抽象类。通过<code>Calendar.getInstance()</code>得到实例，通过<code>getClass</code>发现其实是子类<code>GregorianCalendar</code>。</p>
<p>  一些方法：<code>get(field)</code>多种field，比如<code>Calendar.DAY_OF_WEEK</code>，多种<code>set(XXX)</code>，还有<code>add(XXX)</code>，还有<code>getTime Date</code>和<code>setTime(Date)</code>。</p>
<p>  注意，月份是从0开始，星期是日到六。</p>
<h3 id="8中新的"><a class="markdownIt-Anchor" href="#8中新的"></a> 8中新的</h3>
<p>  因为一些问题：</p>
<ul>
<li>可变性：日期时间这些类应该是不可变的（Calendar）。</li>
<li>偏移性：Date年从1900开始，而月份从0开始。</li>
<li>格式化：只对Date有用，Calendar不行。</li>
<li>线程不安全，不能处理润秒。</li>
</ul>
<p>  <code>java,time</code>吸收了Joda-Time的精华。包含了<code>LocalDate</code>、<code>LocalTime</code>、<code>LocalDateTime</code>、<code>ZoneDateTime</code>和持续时间（<code>Duration</code>）。</p>
<p>  Date用<code>toInstant()</code>转换成<code>Instant</code>。</p>
<ul>
<li>java.time ：包含值对象的基础包。
<ul>
<li>chrono ：提供不同的日历系统的访问。</li>
<li>format ：格式化和解析时间和日期。</li>
<li>temporal ：包括底层框架和扩展特性。</li>
<li>Zone ：包含时区支持的类</li>
</ul>
</li>
</ul>
<p>  多数使用<code>time</code>、<code>format</code>，可能使用<code>temporal</code>。</p>
<p>  <code>now()</code>创建对象，<code>LocalDate.now()</code>、<code>LocalTime.now()</code>、<code>LocalDateTime.now()</code>，可以加上时区。</p>
<p>  <code>of()</code>可以指定，<code>LocalDateTime.of(2020,10,6,13,23,43)</code>。</p>
<p>  <code>getXXX()</code>比如<code>getDayOfMobth</code>、<code>getMonth</code>。</p>
<p>  <code>withXXX(XXX)</code>进行设置，有返回值，新的对象。</p>
<p>  <code>plusXXX</code>加<code>minusXXX</code>减。</p>
<h4 id="instant-瞬时"><a class="markdownIt-Anchor" href="#instant-瞬时"></a> Instant 瞬时</h4>
<p>  1970年1月1日0时0分0秒，UTC，类似与Date。因为<code>java.time</code>包是基于纳秒计算的，所有Instant可以到达纳秒级。</p>
<p>  <code>now()</code>默认UTC的Instant类的对象。</p>
<p>  <code>ofEpochMilli(long)</code>1970上加上指定毫秒的Instant对象。</p>
<p>  <code>对象.atOffset(ZoneOffset offset)</code>结合即时的偏移来创建OffsetDateTime对象。<code>ZoneOffset.ofHours(8)</code></p>
<p>  <code>对象.toEpochMilli</code>即时间戳。</p>
<h4 id="格式化"><a class="markdownIt-Anchor" href="#格式化"></a> 格式化</h4>
<p>  DateTimeFormatter有三种格式化方法。</p>
<ol>
<li>
<p>预定义的标准格式</p>
<p><code>ISO_LOCAL_DATE_TIME</code>、<code>ISO_LOCAL_DATE</code>、<code>ISO_LOCAL_TIME</code>用DateTimeFormatter点上就可创建对象。</p>
</li>
<li>
<p>本地化相关的格式</p>
<p><code>ofLocalizedDateTime(FormatStayle.LONG)</code> 还有<code>MEDIUM</code>、<code>SHORT</code>。用DateTimeFormatter点上就可创建对象。</p>
<p><code>ofLocalizedDate(FormatStyle.LONG)</code>多一个<code>FULL</code>。</p>
</li>
<li>
<p>自定义格式</p>
<p><code>ofPattern(&quot;yyyy-MM-dd hh:mm:ss&quot;)</code>。用DateTimeFormatter点上就可创建对象。</p>
</li>
</ol>
<p>  都有<code>format</code>和<code>parse</code>方法。</p>
<h3 id="比较"><a class="markdownIt-Anchor" href="#比较"></a> 比较</h3>
<p>  Comparable，自然排序。当this ＞obj,返回+；当this＜obj，返回-；当this＝obj，返回0。</p>
<p>  <sub>Arrayss的sort是升序</sub>。在使用时也可以利用一些包装类的compare方法。</p>
<p>  Comparator，定制排序，里面有很多静态方法。当不方便修改代码时或已经实现的不适合时，可用。实现<code>compare</code>方法，还可以有泛型。</p>
<h3 id="system"><a class="markdownIt-Anchor" href="#system"></a> System</h3>
<p>  <code>String getProperty(String key)</code>获取属性。</p>
<p>常见的</p>
<table>
<thead>
<tr>
<th style="text-align:center">key</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">java.version</td>
<td style="text-align:center">如其名</td>
</tr>
<tr>
<td style="text-align:center">java.home</td>
<td style="text-align:center">java的安装目录</td>
</tr>
<tr>
<td style="text-align:center"><a href="http://os.name">os.name</a></td>
<td style="text-align:center">系统的名称</td>
</tr>
<tr>
<td style="text-align:center">os.version</td>
<td style="text-align:center">系统的版本</td>
</tr>
<tr>
<td style="text-align:center"><a href="http://user.name">user.name</a></td>
<td style="text-align:center">用户名</td>
</tr>
<tr>
<td style="text-align:center">user.home</td>
<td style="text-align:center">用户主目录</td>
</tr>
<tr>
<td style="text-align:center">user.dir</td>
<td style="text-align:center">当前工作目录</td>
</tr>
</tbody>
</table>
<h3 id="math"><a class="markdownIt-Anchor" href="#math"></a> Math</h3>
<p>  <code>long round(double a)</code>，<code>toDegrees</code>、<code>toRadians</code></p>
<h3 id="bigxxx"><a class="markdownIt-Anchor" href="#bigxxx"></a> BigXXX</h3>
<p>  <code>BigInteger</code>不可变的任意精度整数。</p>
<p>  <code>BigDecimal</code>不可变的任意精度有富豪十进制定点数。</p>
<h1 id="好玩的东西"><a class="markdownIt-Anchor" href="#好玩的东西"></a> 好玩的东西</h1>
<h2 id="枚举"><a class="markdownIt-Anchor" href="#枚举"></a> 枚举</h2>
<p>  类的对象只有有限个，确定的，称此类为枚举类。一组常量，建议使用枚举类。如果只有一个对象，可以作为单例模式的实现方式。</p>
<p>  jdk5.0前的定义：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Season</span> &#123;</span><br><span class="line">    <span class="comment">//声明属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String SeasonName;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String SeasonDesc;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//私有构造器</span></span><br><span class="line">    privite <span class="title function_">Season</span><span class="params">(String neme, String desc)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.SeasonName = name;</span><br><span class="line">        <span class="built_in">this</span>.SeasonDesc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//提供枚举类的多个对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">SPRING</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;春天&quot;</span>, <span class="string">&quot;春天在哪里&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">SUMMER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;夏天&quot;</span>, <span class="string">&quot;宁夏&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">AUTUMN</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;秋天&quot;</span>, <span class="string">&quot;秋天不回来&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">WINTER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;冬天&quot;</span>, <span class="string">&quot;大约在冬季&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//其他诉求</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;全年都在 弹棉花&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  另一种定义：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Season</span> &#123;</span><br><span class="line">    <span class="comment">//提供当前枚举类对象</span></span><br><span class="line">    SPRING(<span class="string">&quot;春天&quot;</span>, <span class="string">&quot;春天在哪里&quot;</span>),</span><br><span class="line">    SUMMER(<span class="string">&quot;夏天&quot;</span>, <span class="string">&quot;宁夏&quot;</span>),</span><br><span class="line">    AUTUMN(<span class="string">&quot;秋天&quot;</span>, <span class="string">&quot;秋天不回来&quot;</span>),</span><br><span class="line">    WINTER(<span class="string">&quot;冬天&quot;</span>, <span class="string">&quot;大约在冬季&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//声明属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String desc;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    privite <span class="title function_">Season</span><span class="params">(String name, String desc)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//其他诉求</span></span><br><span class="line">    <span class="comment">//toString可不重写，sout或输出对象名。</span></span><br><span class="line">    <span class="comment">//说明父类不是Object，而是java.lang.Enum。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  Enum类的常用方法：</p>
<table>
<thead>
<tr>
<th style="text-align:center">方法名</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">toString()</td>
<td style="text-align:center">返回对象名。</td>
</tr>
<tr>
<td style="text-align:center">valueOf(objname)</td>
<td style="text-align:center">根据提供的objname，返回与objname同名对象。异常：非法参数。</td>
</tr>
<tr>
<td style="text-align:center">values()</td>
<td style="text-align:center">返回对象数组。（我发现不在API里，查https://www.pianshen.com/article/9971363552/）</td>
</tr>
<tr>
<td style="text-align:center">equals</td>
<td style="text-align:center">可以用”==“判断枚举常量相等。本身也是”==“。</td>
</tr>
<tr>
<td style="text-align:center">hashCode</td>
<td style="text-align:center">为了和equals保持一致。不可变。</td>
</tr>
<tr>
<td style="text-align:center">getDeclaringClass</td>
<td style="text-align:center">得到所属枚举类型的class对象，用了判断两个枚举常量。</td>
</tr>
<tr>
<td style="text-align:center">name</td>
<td style="text-align:center">建议优先使用toString。</td>
</tr>
<tr>
<td style="text-align:center">ordinal</td>
<td style="text-align:center">得到当前枚举常量的次序。</td>
</tr>
<tr>
<td style="text-align:center">comapreTo</td>
<td style="text-align:center">大小（声明顺序排列）</td>
</tr>
<tr>
<td style="text-align:center">clone</td>
<td style="text-align:center">枚举不能clone。防止子类实现clone。ENUM实现了一个仅抛出不支持clone的 异常的不变clone。</td>
</tr>
</tbody>
</table>
<blockquote>
<p>The compiler automatically adds some special methods when it creates an enum. For example, they have a static <code>values</code> method that returns an array containing all of the values of the enum in the order they are declared. This method is commonly used in combination with the for-each construct to iterate over the values of an enum type.  <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html">https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html</a></p>
</blockquote>
<p>  实现接口有两种，第一种，没啥可说的。第二种，让枚举对象分别去实现<code>SPRING(&quot;春天&quot;)&#123;实现方法&#125;</code>。</p>
<h2 id="注解"><a class="markdownIt-Anchor" href="#注解"></a> 注解</h2>
<p>  JDK5.0增加了对元数据（metedata）的支持——注解。可用于修饰类、构造器、方法、成员变量、参数、局部变量的声明。</p>
<p>  在SE中，注解存在的目的比较简单。在EE/Android中是重要角色，代替EE旧版中遗留的繁冗代码和xml配置。一定程度上，框架 = 注解 + 反射 + 设计模式。</p>
<p>  示例：生成文档相关。<code>author</code>、<code>version</code>、<code>see</code>参考转向、<code>since</code>从哪个版本开始增加、<code>param 参数类型 说明</code>、<code>return 类型 说明</code>、<code>exception 类型 说明</code>。</p>
<p>  示例：编译时进行格式检查。JDK内置的三个基本注解：<code>Override</code>、<code>Deprecated</code>、<code>SuppressWarrings</code>有<code>unused</code>、<code>unchecked</code>等。</p>
<p>  示例：跟踪代码依赖性，实现替代配置文件功能。Servlet3.0使得不再需要在web.xml进行servlet配置<code>@WebServletd(&quot;/login&quot;)</code>。</p>
<p>  示例：Spring中的事物管理。<code>@Transactional(propagation=propagation.REQUIRES_NEW,isolation=isolation.READ_COMMITTED,readonly=false,timeout=3)</code>。</p>
<p>  示例：单元测试。<code>timeout=1000</code>超时时间，超过时间测试失败。<code>expected=Expection.class</code>声明会发生的异常。配合<code>@Test</code>使用的，单独用无意义的有：</p>
<ul>
<li><code>@BeforeClass</code>静态方法，只执行一次，类初始化时执行。</li>
<li><code>@AfterClass</code>静态方法，只执行一次，所有方法完成后执行。</li>
<li><code>@Before</code> 非静态方法，在<code>@Test</code>前，每一个<code>@Test</code>都会执行。</li>
<li><code>@After</code>非静态方法，在<code>@Test</code>后，每一个<code>@Test</code>都会执行。</li>
<li><code>@Ignore</code>不参与测试的方法上。</li>
</ul>
<p>  自定义的话，参照SuppressWarraings。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnnotation &#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;搬砖&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  自动继承<code>java.lang.annotation.Annotation</code>接口。成员变量以无参方法的形式来声明，类型可以有八种基本数据类型、String、class、enum、Annotation和以上对应数组。成员变量可以指定初始值，用<code>default</code>。如果只有一个参数成员，建议使用value。没有成员定义的称为标记。配上注解的信息处理流程才有用意义。</p>
<h2 id="元注解"><a class="markdownIt-Anchor" href="#元注解"></a> 元注解</h2>
<p>  JDK提供4种元注解用来修饰其他注解，解释说明。</p>
<p>  <code>@Retention(XXX)</code>指定声明周期，有一个枚举类RetentionPolicy。<code>SOURCE</code>源文件有效，编译器直接丢弃这种策略的注释。<code>CLASS</code>在class文件有效，运行java程序时，JVM不会保留注解。这是默认值。<code>RUNNTIME</code>运行时有效，运行java程序时，JVM会保留注释，程序可以通过反射获取该注解。</p>
<p>  <code>@Target(value=&#123;ElementType.XXX……&#125;)</code>指定能用于哪些程序元素。<code>CONSTRUCTOR</code>，<code>FIELD</code>域、<code>LOCAL_VARIABLE</code>局部变量、<code>METHOD</code>、<code>PACKAGE</code>包，比较特殊的感觉、<code>PARAMETER</code>参数、<code>TYPE</code>类，接口（包含注解类型），enum的声明。</p>
<p>  自定义注解一般都会用Retention和Target。</p>
<p>  频率低的注解，一般不会用。在下面。</p>
<p>  <code>@Documented</code>将被javadoc提取成文档。默认javadoc无注解。此时Retention值为RUNTIME。</p>
<p>  <code>@Inherit</code>使具有继承性。类被注解，子类自动有注解。实际应用中，使用较少。</p>
<p>  反射获取注解信息。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class&lt;Demo&gt; clazz Demo.class;</span><br><span class="line">Annotation[] annotataions = clazz.getAnnotations();</span><br><span class="line">遍历打印一下</span><br></pre></td></tr></table></figure>
<h2 id="jdk8的注解新特性"><a class="markdownIt-Anchor" href="#jdk8的注解新特性"></a> JDK8的注解新特性</h2>
<h3 id="可重复注解"><a class="markdownIt-Anchor" href="#可重复注解"></a> 可重复注解</h3>
<p>  以前的方式。一个<code>MyAnnotation</code>，一个<code>MyAnnotations&#123;MyAnnotation[] value();&#125;</code>。用<code>@MyAnnotations(&#123;@MyAnnotation(value=&quot;XXX&quot;),@MyAnnotation(value=&quot;XXXX&quot;)&#125;)</code>。</p>
<p>  现在。新的注解<code>@Repeatable(MyAnnotations.class)</code>。要求MyAnnotation和MyAnnotations的Target、Retention等元注解一致。用<code>@MyAnnotations(value=&quot;XXX&quot;) @MyAnnotations(value=&quot;XXXX&quot;)……</code>。</p>
<h3 id="类型注解"><a class="markdownIt-Anchor" href="#类型注解"></a> 类型注解</h3>
<p>  <code>class Demo&lt;注解 T&gt;&#123;&#125;</code>Target要有<code>TYPE_PARAMETER</code>。能写在类型变量的声明语句中，比如泛型声明。</p>
<p>  <code>throws 注解 异常类名</code>、<code>ArrayList&lt;注解 String&gt;</code>、<code>int num = (注解 int)10L;</code>Target要有<code>TYPE_USE</code>。能写在使用类型的任何语句中。</p>
<p>  反射能拿到。</p>
<h1 id="大头但也好玩"><a class="markdownIt-Anchor" href="#大头但也好玩"></a> 大头但也好玩</h1>
<h2 id="集合"><a class="markdownIt-Anchor" href="#集合"></a> 集合</h2>
<p>  可以分为Collection和Map两大体系。</p>
<pre class="mermaid">flowchart BT;
subgraph iterator [ ]
a1[ListIIterator] --继承-->a2[terator];
end

a3[Collection 单列 存对象] --获取-->iterator;

a4[List 接口 有重 类似动态数组] --继承-->a3;
a4 --获取--> iterator;
a6[Vector] -.实现.-> a4;
a7[ArrayList] -.实现.->a4;
a8[LinkedList] -.实现.->a4;
Stack -.继承.-> a6;

a5[Set 接口 不重 类似数学集合] --继承-->a3;
a9[HashSet] -.实现.->a5;
a10[SortedSet] --继承-->a5;
a11[LinkedHashSet] --继承-->a9;
a12[TreeSet] -.实现.->a10;</pre>
<pre class="mermaid">flowchart BT;
Hashtable -.实现.-> Map;
HashMap -.实现.-> Map;
SortedMap --继承--> Map;

Properties --继承--> Hashtable;
LinkedHashMap --继承--> HashMap;
TreeMap --实现--> SortedMap;</pre>
<p>  Hashtable没错。</p>
<h3 id="collection接口部分api"><a class="markdownIt-Anchor" href="#collection接口部分api"></a> Collection接口部分API</h3>
<p>  <code>add(obj)</code>、<code>size()</code>、<code>addAll(Collection coll)</code>、<code>isEmpty() size==0</code>、<code>clear()</code>、<code>contains(Object obj)</code>用的equals、<code>containsAll(Collection c)</code>、<code>remove(Object obj)</code>、<code>removeAll(Collection c)</code>差集，去掉共同部分、<code>retrainAll(Collection c)</code>相当于交集、<code>equals(Object o)</code>、<code>hashcode()</code>。</p>
<p>  得到Collection可以用<code>Arrays.asList(T... a)</code>，变成数组可以用<code>toArray()</code>。小心<code>Arrays.asList(new int[]&#123;123,456&#125;)</code>，会吧数组当成一个元素。可以<code>Arrays.asList(123,456)</code>或者<code>int</code>换<code>Integer</code>。</p>
<p>  <code>iterator()</code>返回Iterator接口实例。迭代器模式：提供一种方法访问容器对象中各个元素而不需要暴露该对象的内部细节。迭代器过多<code>next()</code>会<code>NosuchElementException</code>。每次遍历都要重新生成迭代器。<code>迭代器对象.remove()</code>删除元素。未调用<code>next()</code>或上次next调用了remove，再调用remove，会<code>IllegalStateException</code>。</p>
<h3 id="list"><a class="markdownIt-Anchor" href="#list"></a> List</h3>
<p>  ArrayList、LInkedList、Vector的异同。都实现了List接口，有序，可重复。</p>
<ul>
<li>ArrayList 作为List的主要实现类 1.2 效率高 线程不安全。<code>Object[] elementData</code>。</li>
<li>Vector 作为List的古老实现类 1.0前朝的臣子 效率低 线程安全。<code>Object[] elementData</code>。</li>
<li>LinkedList 其次的 双向链表存储 频繁地插入和删除比ArrayList效率高。</li>
</ul>
<p>  反源码看到的<code>modCount++</code>，涉及快速失败机制。</p>
<h3 id="7与8"><a class="markdownIt-Anchor" href="#7与8"></a> 7与8</h3>
<h4 id="arraylist"><a class="markdownIt-Anchor" href="#arraylist"></a> ArrayList</h4>
<p>  ()→10的Object[] elementData。扩容1.5倍。</p>
<p>  add(123)→elementData[0] = new Integer(123)。</p>
<p>  不够时扩容，同时复制原来数据。</p>
<p>  建议使用带参构造器。</p>
<p>  8中代码修改了，注释没改。第一个add时才创建10的数组。()→{}，add判断{}是否取得最大容量，后续无异。</p>
<p>  7类似于饿汉。8类似于懒汉，延迟数组的创建，节省内存。</p>
<h4 id="linkedlist"><a class="markdownIt-Anchor" href="#linkedlist"></a> LinkedList</h4>
<p>  没什么，就是为了虚假的强迫症。node体现双向链表。</p>
<h4 id="vector"><a class="markdownIt-Anchor" href="#vector"></a> Vector</h4>
<p>  78()→(10)，扩容2倍。为了安全也不愿意用Vector，有collections的synchronizedList得到一个安全的。</p>
<h3 id="list的一些方法"><a class="markdownIt-Anchor" href="#list的一些方法"></a> List的一些方法</h3>
<ul>
<li><code>add(index, o)</code></li>
<li><code>addAll(index, coll)</code></li>
<li><code>get(index)</code></li>
<li><code>indexOf(o)</code></li>
<li><code>lastIndexOf(o)</code></li>
<li><code>Object remove(index)</code> 和Collcetion的<code>Object remove(o)</code></li>
<li><code>Object set(index, o)</code></li>
<li><code>sublist(from, to)</code></li>
</ul>
<h3 id="一个关于list的题"><a class="markdownIt-Anchor" href="#一个关于list的题"></a> 一个关于LIst的题</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testListRemove</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        updateList(list);</span><br><span class="line">        System.out.println(<span class="string">&quot;list = &quot;</span> + list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateList</span><span class="params">(List list)</span> &#123;</span><br><span class="line">        list.remove(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="set接口"><a class="markdownIt-Anchor" href="#set接口"></a> Set接口</h3>
<p>没有定义新的方法。</p>
<ul>
<li>HashSet：set接口主要实现类，不安全，null值。</li>
<li>LinkedHashSet：HashSet子类，遍历内部数据可以按照添加的顺序。</li>
<li>TreeSet：红黑树，可以按照对象指定属性进行排序。</li>
</ul>
<p>Set无序性≠随机性。以HashSet为例，存储的数据在底层数组中并非按照数组索引顺序添加而是根据Hash值。</p>
<p>不可重复性要用equals和hashcode。</p>
<p>底层是数组+链表。</p>
<p>向Set添加数据，一定要重写hashcode和equals。</p>
<p>一致性：相等的对象必须具有相等的散列码。</p>
<p>HashSet和HashMap有关系：HashSet里在<code>new HashMap&lt;&gt;()</code>。</p>
<h4 id="linkedhashset"><a class="markdownIt-Anchor" href="#linkedhashset"></a> LinkedHashSet</h4>
<p><img data-src="https://i.loli.net/2021/03/15/k72TfynWlw8CP9N.png" alt="LinkedHashSet感觉图.png" /></p>
<p>频繁遍历比HashSet高。</p>
<h4 id="treeset"><a class="markdownIt-Anchor" href="#treeset"></a> TreeSet</h4>
<p>数据要是相同类对象。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">add <span class="number">123</span> <span class="number">456</span> <span class="string">&quot;AA&quot;</span>  ClassCastException</span><br><span class="line">数字从小到大</span><br></pre></td></tr></table></figure>
<p>自然排序中，相同用<code>compareTo</code>判断是否相同。相同返回0。</p>
<p>红黑树，查询速度比List快。</p>
<p><code>new TreeSet(Comparator com)</code>定制排序。判断相同用<code>compare</code>，相同返回0。</p>
<h4 id="hashset"><a class="markdownIt-Anchor" href="#hashset"></a> HashSet</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">一个Persion，重写了equals和hashcode。</span><br><span class="line"> </span><br><span class="line">p1 （<span class="number">1001</span>, “AA”）</span><br><span class="line">p2  (<span class="number">1002</span>, <span class="string">&quot;BB&quot;</span>)</span><br><span class="line">set.add(p1) set.add(p2)</span><br><span class="line">p1.name=<span class="string">&quot;CC&quot;</span> <span class="comment">//hashcode变了</span></span><br><span class="line">set.remove(p1) <span class="comment">//删不了</span></span><br><span class="line">sout 有两个</span><br><span class="line">set.add(<span class="keyword">new</span> <span class="title class_">P</span>(<span class="number">1001</span>, <span class="string">&quot;CC&quot;</span>))<span class="comment">//我：成功，因为位置不一样。</span></span><br><span class="line">sout 有三个</span><br><span class="line">set.add(<span class="keyword">new</span> <span class="title class_">P</span>(<span class="number">1001</span>, <span class="string">&quot;AA&quot;</span>))<span class="comment">//我：位置相同但equals不一样。</span></span><br><span class="line">sout 有四个</span><br></pre></td></tr></table></figure>
<h4 id="对应"><a class="markdownIt-Anchor" href="#对应"></a> 对应</h4>
<p>为什么不讲源码就是因为。</p>
<pre class="mermaid">graph TB;
HashSet --对应-->HashMap
LinkedHashSet --对应--> LinkedHashMap
TrssSet --对应--> TreeMap</pre>
<h3 id="map"><a class="markdownIt-Anchor" href="#map"></a> Map</h3>
<ul>
<li>HsahMap：Map的主要实现类，不安全，效率高，null的key和value。
<ul>
<li>LinkedHashMap：保证在遍历时，按照添加顺序遍历。</li>
</ul>
</li>
<li>TreeMap：红黑树，保证按照添加的key-value对进行排序，实现排序遍历（key)。</li>
<li>Hashtable：Map的古老实现类，安全，效率第，不能null的key和value，会空指针。
<ul>
<li>Properties：配置文件，key和value都是String。</li>
</ul>
</li>
</ul>
<p>put的是Entry，Entry有key和value，也是无序不可重复，使用Set存储所有Entry。</p>
<p>key是无序的，不可重复的，使用Set存储所有的key。</p>
<p>value是无序的，可重复的，使用Collection存储所有的value。</p>
<p><img data-src="https://i.loli.net/2021/03/15/dDO76np8m3KBPQt.png" alt="Map结构的理解.PNG" /></p>
<p>  针对上图，此时我还没翻源码，但我想到的一种可能：内部类或者内部接口。</p>
<p>以HashMap为例，key要<code>equals</code>和<code>hashcode</code>，value要<code>equals</code>。</p>
<h4 id="hashmap"><a class="markdownIt-Anchor" href="#hashmap"></a> HashMap</h4>
<h5 id="实现原理"><a class="markdownIt-Anchor" href="#实现原理"></a> 实现原理</h5>
<ul>
<li>
<p>7</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">HsahMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();<span class="comment">// 长度是16的一位数组Entry[] table。</span></span><br><span class="line">……</span><br><span class="line">map.put(k,v);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">计算key的hash值，与上数组长度-1得数组位置。</span></span><br><span class="line"><span class="comment">空则加入成功，不空则比较hash值。</span></span><br><span class="line"><span class="comment">不同则加入成功，同则比较equals，true则替换value，false则加入成功。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>扩容：2倍，复制。</p>
<p><img data-src="https://i.loli.net/2021/03/15/4kr1qp69fYxwdy2.png" alt="HashMap存储结构7.PNG" /></p>
</li>
<li>
<p>8</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">HashMap</span>();<span class="comment">//没有创建16的数组。数组不加Entry，叫node。</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">首次put创建长度16的数组。当数组的某个位置上的元素以链表形式存在的数据个数＞8，且数组长度＞64时，此时此索引位置上的数据改为使用红黑树存储。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://i.loli.net/2021/03/15/bDOEJcpZA8M2Yzy.png" alt="HashMap存储结构8.PNG" /></p>
</li>
<li>
<p>7的码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(capacity &lt; <span class="number">16</span>)</span><br><span class="line">    capacity &lt;&lt;= <span class="number">1</span>;<span class="comment">//变2的多少幂</span></span><br><span class="line"></span><br><span class="line">hash&amp;(length-<span class="number">1</span>)<span class="comment">//length-1转成二进制数，基本就明白了吧</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>其他和量</p>
<p>put返回旧值/null，曾经做leetcode的一个题里，有人利用到了这个，真是太棒了。</p>
<p>超临界值且要存放的位置非空时，扩容，2倍。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>DEFAULT_INITIAL_CAPACITY</code></td>
<td style="text-align:center">默认容量16</td>
</tr>
<tr>
<td style="text-align:center"><code>MAIMUM_CAPACITHY</code></td>
<td style="text-align:center">支持最大扩容2^30</td>
</tr>
<tr>
<td style="text-align:center"><code>DEFAULT_LOAD_FACTOR</code></td>
<td style="text-align:center">默认加载因子0.75</td>
</tr>
<tr>
<td style="text-align:center"><code>TREEIFY_THRESHOLD</code></td>
<td style="text-align:center">Bucket中链表长度大于改默认值，转化为红黑树</td>
</tr>
<tr>
<td style="text-align:center"><code>UNTREEIFY_THRESHOLD</code></td>
<td style="text-align:center">Bucket中红黑树存储的Node小于该默认值，转化为链表</td>
</tr>
<tr>
<td style="text-align:center"><code>MIN_TREEIFY_CAPACITY</code></td>
<td style="text-align:center">桶中的Node被树化时最小的hash表容量。（当桶中Node的数量大到需要变红黑树时，若hash表容量小于MIN_TREEIFY_CAPACITY时，此时应执行resize扩容操作这个MIN_TREEIFY_CAPACITY的值至少是TREEIF_THRESHOLD的4倍。）</td>
</tr>
<tr>
<td style="text-align:center"><code>table</code></td>
<td style="text-align:center">存储元素的数组，总是2的n次幂</td>
</tr>
<tr>
<td style="text-align:center"><code>entrySet</code></td>
<td style="text-align:center">存储具体元素的集</td>
</tr>
<tr>
<td style="text-align:center"><code>size</code></td>
<td style="text-align:center">HashMap中存储的键值对的数量</td>
</tr>
<tr>
<td style="text-align:center"><code>modCount</code></td>
<td style="text-align:center">HashMap扩容和结构改变的次数（我：快速失败机制）</td>
</tr>
<tr>
<td style="text-align:center"><code>threshold</code></td>
<td style="text-align:center">扩充临界值</td>
</tr>
<tr>
<td style="text-align:center"><code>loadFactor</code></td>
<td style="text-align:center">填充因子</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h4 id="linkedhashmap"><a class="markdownIt-Anchor" href="#linkedhashmap"></a> LinkedHashMap</h4>
<p>  HashMap的子类，重写了newNode。</p>
<p>  内部类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Entry</span> <span class="keyword">extends</span> <span class="title class_">HashMap</span>.Node&lt;K,V&gt;</span><br></pre></td></tr></table></figure>
<p>  HashMap的内部类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Node</span>&lt;K,V&gt; implement Map.Entry&lt;K,V&gt;</span><br></pre></td></tr></table></figure>
<p>  当时看到这里，产生了内部接口的概念，查了一下，有相关的东西。</p>
<h4 id="map的一些方法以hashmap为例"><a class="markdownIt-Anchor" href="#map的一些方法以hashmap为例"></a> Map的一些方法，以HashMap为例</h4>
<p>  <code>Object put(ok,ov)</code>、<code>void putAll(Map m)</code>、<code>Object remove(ok)</code>、<code>void clear()</code>、<code>get(ok)</code>、<code>boolean containsKey(ok)</code>、<code>boolean containsValue(ov)</code>、<code>size()</code>、<code>isEmpty()</code>、<code>equals(o)</code>、<code>Set keySet()</code>、<code>Collection values()</code>、<code>Sete entrySet()</code>。</p>
<h3 id="collections工具类"><a class="markdownIt-Anchor" href="#collections工具类"></a> Collections工具类</h3>
<p>  操作Set、List、Map的工具类。</p>
<ul>
<li>
<p>排序</p>
<p><code>reverse(list)</code>、<code>shuffle(list)</code>、<code>sort(list)</code>、<code>sort(list,comparator)</code>、<code>swap(list,int,int)</code></p>
</li>
<li>
<p>查找替换</p>
<p><code>Object max(coll)</code>、<code>Object max(coll,comparator)</code>、<code>min 同理</code>、<code>int frequency(coll,obj)ob次数</code>、<code>void copy(List dest,List src) src复制到dest（List dest=Arrays.asList(new Object[src.size)()])）</code>、<code>boolean replaceAll(List&lt;T&gt; list,T old, T new)新的换所有旧值</code>、<code>synchronizedXXX()</code>。</p>
</li>
</ul>
<h2 id="泛型不大但按顺序放这里"><a class="markdownIt-Anchor" href="#泛型不大但按顺序放这里"></a> 泛型,不大但按顺序放这里</h2>
<p>  容器设计阶段和声明阶段不能确定到底存什么类型对象，所以1.5前只能把元素类型设计为Object。1.5后用泛型解决。</p>
<p>  <code>ClassCastException</code>：XX→O→XX。</p>
<p>  1.5接口、集合、集合类都修改为带泛型的结构。</p>
<p>  实例化时未指明泛型，默认Object类型。</p>
<blockquote>
<p>切不可轻视初学者，轻视他人有无边无量的罪。下下人有上上智，上上人有没意志。——慧能</p>
</blockquote>
<p>  自定义泛型结构<code>class Demo&lt;T&gt;&#123; T orderT ;&#125;</code>，定义了泛型实例化时建议带上。子类继承时，可以指明。指明后子类就是普通类。子类继承可以部分保留分类的泛型。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list1 = <span class="literal">null</span>;</span><br><span class="line">ArrayList&lt;Integer&gt; list2 = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//list1 list2不能相互赋值</span></span><br></pre></td></tr></table></figure>
<p>  在类/接口上声明的泛型，在静态方法中不能使用类的泛型。异常类不能是泛型。</p>
<p>  不能使用<code>new E[]</code>，但可以<code>E[] eles = (E[])new Object[capacity]</code>。（不太好吧。）</p>
<p>  泛型方法：在方法总中出现了泛型的结构，泛型参数与类的泛型参数没有关系。→泛型方法所属的类是不是泛型类都没有关系。可以是静态的，泛型参数调用时确定。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">arrayToList</span><span class="params">(E[] arr)</span>&#123;&#125; </span><br></pre></td></tr></table></figure>
<p>  通配符：？(数据库占位符)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Object&gt; list1 = <span class="literal">null</span>;</span><br><span class="line">List&lt;String&gt; list2 = <span class="literal">null</span>;</span><br><span class="line">List&lt;?&gt; list = <span class="literal">null</span>;</span><br><span class="line">list = list;</span><br><span class="line">list = list2;</span><br><span class="line"></span><br><span class="line">list&lt;String&gt; list3 = <span class="keyword">new</span> <span class="title class_">ArraysList</span>&lt;&gt;();</span><br><span class="line">list3.add(<span class="string">&quot;AA&quot;</span>);</span><br><span class="line">list3.add(<span class="string">&quot;BB&quot;</span>);</span><br><span class="line">list3.add(<span class="string">&quot;CC&quot;</span>);</span><br><span class="line">list = list3;</span><br><span class="line">list.add(<span class="string">&quot;不能添加数据&quot;</span>);</span><br><span class="line">list.add(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> list.get(<span class="number">0</span>);<span class="comment">//总归是Object的子类</span></span><br></pre></td></tr></table></figure>
<p>  对于<code>List&lt;?&gt;</code>不能向其添加数据但null可以加。</p>
<p>  有限制条件的通配符:<code>&lt;? extends Person&gt;</code>：上限Persion，<code>&lt;? super Persion&gt;</code>：下限Persion。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;? <span class="keyword">extends</span> <span class="title class_">Persion</span>&gt; list1 = <span class="literal">null</span>;</span><br><span class="line">List&lt;? <span class="built_in">super</span> Persion&gt; list2 = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">List&lt;Student&gt; list3 = <span class="literal">null</span>;</span><br><span class="line">List&lt;Persion&gt; list4 = <span class="literal">null</span>;</span><br><span class="line">List&lt;Object&gt; list5 = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list1 = list3;</span><br><span class="line">list1 = list4;</span><br><span class="line">list1 = list5;<span class="comment">//不行</span></span><br><span class="line"></span><br><span class="line">list2 = list3;<span class="comment">//不行</span></span><br><span class="line">list2 = list4;</span><br><span class="line">list2 = list5;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取</span></span><br><span class="line"><span class="comment">//假设上面都赋值了</span></span><br><span class="line">list1 = list4;</span><br><span class="line"><span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> list1.get(<span class="number">0</span>);</span><br><span class="line"><span class="type">Persion</span> <span class="variable">p</span> <span class="operator">=</span> list1.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">list1 = list3;</span><br><span class="line"><span class="type">Persion</span> <span class="variable">p</span> <span class="operator">=</span> list1.get(<span class="number">0</span>);</span><br><span class="line"><span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> list1.get(<span class="number">0</span>);<span class="comment">//不行 得到的可能比Persion小，为了包含所有，要取大的，相当于上确界。</span></span><br><span class="line"></span><br><span class="line">list2 = list4;</span><br><span class="line"><span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> list2.get(<span class="number">0</span>);<span class="comment">//只能是Object 得到的可能比Persion大，但再大大不过Object。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//写入 要理解多态</span></span><br><span class="line">list1.add(<span class="keyword">new</span> <span class="title class_">Student</span>());<span class="comment">//不行 </span></span><br><span class="line"></span><br><span class="line">list2.add(<span class="keyword">new</span> <span class="title class_">Persion</span>());</span><br><span class="line">list2.add(<span class="keyword">new</span> <span class="title class_">Student</span>());</span><br></pre></td></tr></table></figure>
<h2 id="io流"><a class="markdownIt-Anchor" href="#io流"></a> IO流</h2>
<h3 id="file"><a class="markdownIt-Anchor" href="#file"></a> File</h3>
<p>  可以是文件也可以是目录，在<code>java.io</code>下。它的构造器有<code>File(&quot;233.txt&quot;)</code>、<code>File(&quot;parent&quot;,&quot;child&quot;)</code>、<code>File(File parten, &quot;child&quot;)</code>和<code>File(URI uri)</code>。</p>
<p>  对于分隔符，windo和DOSs用<code>\</code>，UNIX和URL用<code>/</code>，为了跨平台，File类提供一个常量<code>public static final Sting separator</code>来分割。</p>
<ul>
<li>
<p>获取功能</p>
<p><code>getAbsolutePath()</code>、<code>getPath()</code>、<code>getName()</code>、<code>getParent()</code>上层文件目录路径，无则null、<code>long length()</code>、<code>lastModified()</code>最后一次修改时间。文件不在也不会报错</p>
<p><code>String[] list()</code>、<code>File[] lastFile()</code>。</p>
</li>
<li>
<p>重命名功能</p>
<p><code>boolean renameTo(File dest)</code>重名为指定的文件路径。要成功的话，调用者要在硬盘存在，dest不能存在。可以文件移动、重命名、修改文件夹名称。</p>
</li>
<li>
<p>判断功能</p>
<p><code>isDirectory()</code>、<code>isFile()</code>、<code>exists()</code>、<code>canRead()</code>、<code>canWrite()</code>、<code>isHidden()</code>。不存在时，要注意</p>
</li>
<li>
<p>创建功能</p>
<p><code>boolean creatNewFile()</code>存在则不创建，返回false、<code>boolean mkdir()</code>存在则不创建，上层目录不存在也不创建、<code>boolean mkdirs()</code>。</p>
</li>
<li>
<p>删除功能</p>
<p><code>delete()</code>不走回收站。</p>
</li>
</ul>
<h3 id="io流-2"><a class="markdownIt-Anchor" href="#io流-2"></a> IO流</h3>
<p>  input和output相对于（内存）程序而言。</p>
<p>分类：</p>
<ul>
<li>
<p>字节流（8bit）,字符流（16bit）。</p>
</li>
<li>
<p>输入流，输出流。</p>
</li>
<li>
<p>节点流，处理流。（大部分教什么大水管套小水管，根本不好理解，反而节点流、处理流好理解多了。）</p>
<table>
<thead>
<tr>
<th style="text-align:center">（抽象基类）</th>
<th style="text-align:center">字节流</th>
<th style="text-align:center">字符流</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">输入流</td>
<td style="text-align:center">InputStream</td>
<td style="text-align:center">Reader</td>
</tr>
<tr>
<td style="text-align:center">输出流</td>
<td style="text-align:center">OutPutStream</td>
<td style="text-align:center">Writer</td>
</tr>
</tbody>
</table>
</li>
</ul>
<p>  java的IO流共涉及40多个类，都是从抽象基类派生的。</p>
<table>
<thead>
<tr>
<th style="text-align:center">分类</th>
<th style="text-align:center">字节输入流</th>
<th style="text-align:center">字节输出流</th>
<th style="text-align:center">字符输入流</th>
<th style="text-align:center">字符输出流</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">抽象基类</td>
<td style="text-align:center"><font color= blue>InputStream</font></td>
<td style="text-align:center"><font color= blue>OutputStram</font></td>
<td style="text-align:center"><font color= blue>Reader</font></td>
<td style="text-align:center"><font color= blue>Writer</font></td>
</tr>
<tr>
<td style="text-align:center">访问文件（节点流）</td>
<td style="text-align:center"><font color= blue>FileInputStream</font></td>
<td style="text-align:center"><font color= blue>FileOutputStram</font></td>
<td style="text-align:center"><font color= blue>FileReader</font></td>
<td style="text-align:center"><font color= blue>FileWriter</font></td>
</tr>
<tr>
<td style="text-align:center">访问数组</td>
<td style="text-align:center">ByteArrayInputStream</td>
<td style="text-align:center">ByteArrayOutputStram</td>
<td style="text-align:center">CharArrayReader</td>
<td style="text-align:center">CharArrayWriter</td>
</tr>
<tr>
<td style="text-align:center">访问管道</td>
<td style="text-align:center">PipedInputStream</td>
<td style="text-align:center">PipedOutputStram</td>
<td style="text-align:center">PipedReader</td>
<td style="text-align:center">PipedWriter</td>
</tr>
<tr>
<td style="text-align:center">访问字符串</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">StringReader</td>
<td style="text-align:center">StringWriter</td>
</tr>
<tr>
<td style="text-align:center">缓冲流</td>
<td style="text-align:center"><font color= blue>BufferedInputStream</font></td>
<td style="text-align:center"><font color= blue>BufferedOutputStram</font></td>
<td style="text-align:center"><font color= blue>BufferedReader</font></td>
<td style="text-align:center"><font color= blue>BufferedWriter</font></td>
</tr>
<tr>
<td style="text-align:center">转换流</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">InputStreamReader</td>
<td style="text-align:center">OutputStramWriter</td>
</tr>
<tr>
<td style="text-align:center">对象流</td>
<td style="text-align:center"><font color= blue>ObjectInputStream</font></td>
<td style="text-align:center"><font color= blue>ObjectOutputStram</font></td>
<td style="text-align:center">✖</td>
<td style="text-align:center">✖</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">FilterInputStream</td>
<td style="text-align:center">FilterOutputStram</td>
<td style="text-align:center">FilterReader</td>
<td style="text-align:center">FilterWriter</td>
</tr>
<tr>
<td style="text-align:center">打印流</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">PrintStream</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">PrintWriter</td>
</tr>
<tr>
<td style="text-align:center">推回输入流</td>
<td style="text-align:center">PushbackInputStream</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">PushbackReader</td>
<td style="text-align:center">✖</td>
</tr>
<tr>
<td style="text-align:center">特殊流</td>
<td style="text-align:center">DataInputStream</td>
<td style="text-align:center">DataOutputStram</td>
<td style="text-align:center">✖</td>
<td style="text-align:center">✖</td>
</tr>
</tbody>
</table>
<h3 id="filereader和filewriter"><a class="markdownIt-Anchor" href="#filereader和filewriter"></a> FileReader和FileWriter</h3>
<p>  <code>read()</code>返回一个字符（int），如果到达文件末尾，返回-1。<code>read(char[] cbuf)</code>返回读入数组的字符个数。<code>read(char[] cbuf, int off, int len)</code>很少用。</p>
<p>  输出时，如果文件不存在会自动创建文件，如果文件存在，当<code>FileWriter(file,append:false)</code>时（默认覆盖），覆盖，当<code>FileWriter(file,append:true)</code>时，追加。</p>
<h3 id="fileinputstream和fileoutputstram"><a class="markdownIt-Anchor" href="#fileinputstream和fileoutputstram"></a> FileInputStream和FileOutputStram</h3>
<p>  处理文本文件（读）,可能出现乱码。复制到是可以。</p>
<p>  关闭外层流的同时內层流也会自动关闭。</p>
<h3 id="缓冲流"><a class="markdownIt-Anchor" href="#缓冲流"></a> 缓冲流</h3>
<p>  一种处理流。提高了速度。</p>
<p>  缓冲8192，8kb。</p>
<p>  <code>flush()</code>刷新缓冲区。</p>
<p>  BufferedReader有<code>String readLine()</code>，到末尾返回null。不包含换行符，可以用<code>newLine()</code>。</p>
<h3 id="转换流"><a class="markdownIt-Anchor" href="#转换流"></a> 转换流</h3>
<p>  字节流和字符流之间的转换。编码解码。</p>
<p><img data-src="https://i.loli.net/2021/03/16/ImZGgzUxphQY3CA.png" alt="转换流.PNG" /></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>(<span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;233.txt&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>))&#123;</span><br><span class="line">    <span class="type">char</span>[] cbuf = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="keyword">while</span>((len = isr.read(cbuf)) != -<span class="number">1</span>)&#123;</span><br><span class="line">        System.out.print(<span class="keyword">new</span> <span class="title class_">String</span>(cbuf, <span class="number">0</span>, len));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="标准输入输出流"><a class="markdownIt-Anchor" href="#标准输入输出流"></a> 标准输入输出流</h3>
<p>  <code>System.in</code>标准输入流，默认键盘输入，类型是InputStream。<code>System.out</code>标准输出流，默认从控制台输出，类型是PrintStream，是OutputStream的子类。通过<code>setIn</code>、<code>setOut</code>进行重定向。</p>
<p>  一个题目键盘读入转大写输出，e或exit退出。①Scaner，②</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> (<span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in))) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入你要转换的字符：&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;e&quot;</span>.equalsIgnoreCase(data) || <span class="string">&quot;exit&quot;</span>.equalsIgnoreCase(data)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;欢迎下次再用，再见！&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(data.toUpperCase());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="打印流"><a class="markdownIt-Anchor" href="#打印流"></a> 打印流</h3>
<p>  实现将基本数据类型的数据格式转化为字符串输出。</p>
<p>打印流：PrintStream和PrintWriter。</p>
<ul>
<li>提供了一系列重载的<code>printl()</code>和<code>println()</code>方法。</li>
<li>不会抛出IOExcepiton。</li>
<li>有自动的flush功能。</li>
<li>打印所有的字符都使用平台默认的字符编码转换为字节。在需要写入字符而不是字节的情况下，应该使用PrintWriter类。</li>
<li><code>System.out</code>返回的是PrintStream的实例。</li>
</ul>
<h3 id="数据流"><a class="markdownIt-Anchor" href="#数据流"></a> 数据流</h3>
<p>  DataInputStream和DataOutputStram，为了方便得操作java的基本数据类型和String（字节数组）。</p>
<ul>
<li>
<p>DataInputStream的方法</p>
<p><code>XXX readXXX()</code>、<code>String readUTF()</code>、<code>void readFully(bute[] b)</code>。</p>
</li>
<li>
<p>DataOutputStram的方法</p>
<p>read改成write。</p>
</li>
</ul>
<p>  （EOF异常）</p>
<p>  （IO流体现装饰器设计模式）</p>
<h3 id="对象流"><a class="markdownIt-Anchor" href="#对象流"></a> 对象流</h3>
<p>  用于存储和读取基本数据类型数据或对象的处理流。</p>
<p>  序列化和反序列化。</p>
<p>  不能序列化static和transient修饰的成员变量。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> (<span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;233.dat&quot;</span>))) &#123;</span><br><span class="line">    oos.writeUTF(<span class="string">&quot;修身养性&quot;</span>);</span><br><span class="line">    oos.flush();<span class="comment">//必须要显示写吗？有什么道道吗</span></span><br><span class="line">&#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  方法我我认为和数据流的差不多。</p>
<h4 id="自定义序列化"><a class="markdownIt-Anchor" href="#自定义序列化"></a> 自定义序列化</h4>
<p>  实现Serializable或Extrenailzable接口之一（NotSerializableException）。需要一个全局常量<code>public static seriaVersionUTD</code>用来表明类的不同版本的兼容性。没有显示定义的话，它的值是java运行时根据类的内部细节自动生成的。没写的话，类变了，反序列化会报错。保证内部属性也必须是可序列化的。</p>
<h3 id="randomaccessfile"><a class="markdownIt-Anchor" href="#randomaccessfile"></a> RandomAccessFile</h3>
<p>  在<code>java.io</code>下，直接继承与<code>java.lang.Object</code>。实现了DataInput和DataOutput，可读可写，还是要两个。支持“随机访问”的方式。程序可以直接跳到文件的任意地方读写文件。支持只访问文件的部分内容。包含一个记录指针来标记当前读写位置。<code>long getFilePointer()</code>得到位置，<code>void seek(long pos)</code>定位到pos位置。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> (<span class="type">RandomAccessFile</span> <span class="variable">raf1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(<span class="string">&quot;src\\女神.tif&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">     <span class="type">RandomAccessFile</span> <span class="variable">raf2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(<span class="string">&quot;src\\女神1.tif&quot;</span>, <span class="string">&quot;rw&quot;</span>)) &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        mode访问模式</span></span><br><span class="line"><span class="comment">        r只读 不创建文件</span></span><br><span class="line"><span class="comment">        rw 不存在则创建</span></span><br><span class="line"><span class="comment">        rwd rw+同步文件内容的更新</span></span><br><span class="line"><span class="comment">        rws rw+同步文件内容的更新和元数据的更新</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    <span class="type">byte</span>[] cbuf = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="keyword">while</span> ((len = raf1.read(cbuf)) != -<span class="number">1</span>) &#123;</span><br><span class="line">        raf2.write(cbuf, <span class="number">0</span>, len);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">abcdefg</span><br><span class="line">0123456</span><br><span class="line">*/</span><br><span class="line">raf2.seek(3);</span><br><span class="line">raf2.write(&quot;xyz&quot;.getBytes());</span><br><span class="line">//efg变xyz</span><br></pre></td></tr></table></figure>
<p>  断点续传。</p>
<h3 id="nionew-non-blockingio"><a class="markdownIt-Anchor" href="#nionew-non-blockingio"></a> NIO(New /  Non-BlockingIO)</h3>
<p>  从1.4开始，新的IOAPI。面向缓冲区的基于通道的IO操作。</p>
<p>  高效的文件读写。</p>
<p>  一套标准输入输出NIO，一套网络编程NIO。</p>
<p>  写得一般，所以在1.7出了NIO2。</p>
<p><code>java.nio.channels.Channel</code></p>
<ul>
<li>FileChannel 处理本地文件</li>
<li>SocketChannel TCP网络编程的客户端的channel</li>
<li>ServerSocketChannel 网络编程的服务器的channel</li>
<li>DatagramChannel UDP网络编程的发送端和服务端的channel</li>
</ul>
<h3 id="path-paths-files占位"><a class="markdownIt-Anchor" href="#path-paths-files占位"></a> Path、Paths、Files占位</h3>
<p>  占位。有空仔细了解再写这里，因为当时刷，过去了，就展示了一些方法。</p>
<h2 id="网络编程"><a class="markdownIt-Anchor" href="#网络编程"></a> 网络编程</h2>
<p>  OSI（七层）参考模型过于理想化，未能在因特网上进行广泛推广。</p>
<table align = "center">
    <tr>
    	<td rowspan=5>TCP/IP 4层</td>
    </tr>
    <tr>
    	<td>应用层</td>
        <td>HTTP、FTP、Telnet、DNS</td>
    </tr>
    <tr>
    	 <td>传输层</td>
        <td>TCP、UDP</td>
    </tr>
     <tr>
        <td>网络层</td>
         <td>IP、ICMP、ARP</td>
    </tr>
    <tr>
    	<td>物理+数据链路层</td>
        <td>Link</td>
    </tr>
</table>
<p>  感觉我的三级网络技术还是有点用。</p>
<p>  InetAddress类代表IP。通过<code>getByName</code>和<code>getLocalHost</code>得到实例。有至少两个方法<code>getHostname</code>和<code>getHostAddress</code>。</p>
<p>  0 ~ 1023：公认端口，1024 ~ 49151：注册端口，49152 ~ 65535：动态/私有端口。（为什么端口只有65535个，不告诉你。）</p>
<p>  UDP每个数据报的大小限制在64K内。无须释放资源，开销小，速度快。</p>
<p>  TCP的三次握手，四次挥手。虽然考过三级网络技术，做过相关的题，但感觉很难从口中说出。</p>
<div><div class="fold_hider"><div class="close hider_title">自动关资源的try好呀</div></div><div class="fold">
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">client</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">BufferedOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">bf</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    Scanner scanner;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        socket = <span class="keyword">new</span> <span class="title class_">Socket</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8888</span>);</span><br><span class="line">        bos = <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(socket.getOutputStream());</span><br><span class="line">        scanner = <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        bf = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(socket.getInputStream()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            bos.write((scanner.nextLine() + <span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            bos.flush();</span><br><span class="line">            System.out.println(<span class="string">&quot;转换为 &quot;</span> + bf.readLine());</span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="literal">true</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (bf != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bf.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (bos != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bos.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (socket != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                socket.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">server</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ServerSocket</span> <span class="variable">ss</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">BufferedOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ss = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">8888</span>);</span><br><span class="line">        socket = ss.accept();</span><br><span class="line">        br = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(socket.getInputStream()));</span><br><span class="line">        bos = <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(socket.getOutputStream());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">            System.out.println(<span class="string">&quot;需要转换： &quot;</span> + s);</span><br><span class="line">            bos.write(s.toUpperCase().concat(<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            bos.flush();</span><br><span class="line">            System.out.println(<span class="number">233</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (bos != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bos.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (br != <span class="literal">null</span>) &#123;</span><br><span class="line">                br.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (socket != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                socket.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ss != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ss.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
<p>  read是阻塞的方法，read相关的应该也是阻塞的。shutdownInput和shutDownOutput是不是过于粗暴了。文字相关的我是加的“\n”，来到达可以不停的发送和读。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sender</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (<span class="type">DatagramSocket</span> <span class="variable">datagramSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>()) &#123;</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">datagramPacket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(<span class="string">&quot;ABC&quot;</span>.getBytes(), <span class="number">0</span>, <span class="number">3</span>, InetAddress.getLocalHost(), <span class="number">8888</span>);</span><br><span class="line">        datagramSocket.send(datagramPacket);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receiver</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (<span class="type">DatagramSocket</span> <span class="variable">datagramSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">8888</span>)) &#123;</span><br><span class="line">        <span class="type">byte</span>[] cbuf = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">datagramPacket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(cbuf, <span class="number">0</span>, cbuf.length);</span><br><span class="line">        datagramSocket.receive(datagramPacket);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(datagramPacket.getData()));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  先启动接收，在启动发送。</p>
<h3 id="url"><a class="markdownIt-Anchor" href="#url"></a> URL</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://www.baidu.com/img/flexible/logo/pc/result.png&quot;</span>);</span><br><span class="line">    <span class="type">HttpURLConnection</span> <span class="variable">urlConnection</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();</span><br><span class="line">    urlConnection.connect();</span><br><span class="line">    is = urlConnection.getInputStream();</span><br><span class="line">    fos = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;src\\百度的图片.png&quot;</span>);</span><br><span class="line">    <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>)&#123;</span><br><span class="line">        fos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*无异常*/</span></span><br><span class="line">    urlConnection.disconnect();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fos != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            is.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  URL的常用方法：<code>getProtocol</code>协议、<code>getHost</code>主机名、<code>getPort</code>端口、<code>getPath</code>文件路径、<code>getFile</code>文件名、<code>getQuery</code>查询名。</p>
<h2 id="反射-reflection"><a class="markdownIt-Anchor" href="#反射-reflection"></a> 反射 Reflection</h2>
<p>  是视为动态语言的关键。Java是静态语言，可以视作准动态语言。</p>
<p>  静态语言：Java、C、C++。</p>
<p>  动态语言：Object-C、C#、js、PHP（最美的语言）、Python、Erlang。</p>
<p>  加载类后，堆内存的方法区就产生一个Class类型的对象。</p>
<p>能（运行时）:</p>
<ul>
<li>判读任意一个对象所属的类。</li>
<li>构造任意一个类的对象。</li>
<li>判断任意一个类所具有的成员变量和方法。</li>
<li>获取泛型信息。</li>
<li>调用任意一个对象的成员变量和方法。</li>
<li>处理注解。</li>
<li>生成动态代理。</li>
</ul>
<h3 id="class类的理解"><a class="markdownIt-Anchor" href="#class类的理解"></a> Class类的理解</h3>
<p>  加载到内存的类，我们称为运行时类，此运行时类，就作为Class的一个实例。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class&lt;Persion&gt; clazz = Persion.class;</span><br><span class="line"></span><br><span class="line"><span class="type">Persion</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Persion</span>();</span><br><span class="line">Class&lt;Persion&gt; clazz2 = p.getClass();</span><br><span class="line"></span><br><span class="line">Class&lt;Persion&gt; clazz3 = Class.forName(<span class="string">&quot;Persion全类名&quot;</span>);</span><br><span class="line"></span><br><span class="line">clazz1 == clazz2;</span><br><span class="line">clazz2 == clazz3;</span><br><span class="line"></span><br><span class="line"><span class="type">ClassLoader</span> <span class="variable">cl</span> <span class="operator">=</span> 当前类.class.getClassLoader();</span><br><span class="line">Class&lt;Persion&gt; clazz4 = cl.loadClass(<span class="string">&quot;全类名&quot;</span>);</span><br><span class="line"></span><br><span class="line">clazz1 == clazz4;</span><br></pre></td></tr></table></figure>
<p>  <code>forName</code>体现动态性。</p>
<h3 id="class类实例的对应结构"><a class="markdownIt-Anchor" href="#class类实例的对应结构"></a> Class类实例的对应结构</h3>
<p>  <code>Object.class</code> 外部类，成员（成员内部类、静态内部类），局部内部类，匿名内部类。</p>
<p>  <code>Comparable.class</code> Interface。</p>
<p>  <code>String[].class</code> <code>int[][].class</code> []。</p>
<p>  <code>ElementType.clas</code> emun （target）。</p>
<p>  <code>Override.class</code> annotation。</p>
<p>  <code>int.class</code> primitive type 基本数据类型。</p>
<p>  <code>void.class</code> void</p>
<p>  <code>Class.class</code></p>
<p>  []：元素类型与维度一样，就是同一个class。</p>
<p>（空参构造器为什么要写？方便框架反射造javabean，保证子类调super）</p>
<h3 id="类加载"><a class="markdownIt-Anchor" href="#类加载"></a> 类加载</h3>
<pre class="mermaid">flowchart LR
subgraph a1[类的加载,load]
a12[class文件读入内存,创建class对象]
end
subgraph a2[类的链接,link]
a21[类的二进制数据合并到JRE中]

end
subgraph a3[类的初始化,initialize]
a31[JVM负责对类进行初始化]

end
a1-->a2
a2-->a3</pre>
<p><mark>加载：</mark></p>
<p>  class文件加载到内存中并将这些静态数据转换成方法区的运行时数据结构，然后生成一个代表这个类的java.lang.Class对象作为方法区中类数据的访问入口。所有需要访问和使用类数据只能通过这个class对象。这个加载过程需要类加载器参与。</p>
<p><mark>链接：</mark></p>
<p>  将java类的二进制代码合并到JVM的运行状态之中的过程。</p>
<ul>
<li><strong>验证：</strong>确保加载的类信息符合JVM规范。例如：以cafe开头，没有安全方面的问题。</li>
<li><strong>准备：</strong>正式为类变量(static)分配内存并设置类变量默认初始值的阶段。这些内存都将在方法区中进行分配。</li>
<li><strong>解析：</strong>虚拟机常量池内的符号引用(常量名)替换为直接引用(地址)的过程。</li>
</ul>
<p><mark>初始化：</mark></p>
<ul>
<li>执行类构造器<code>&lt;clinit&gt;()</code>方法的过程。执行类构造器<code>&lt;clinit&gt;()</code>方法是由编译期自动收集类中所有变量的赋值动作和静态代码中的语句合并产生的。</li>
<li>当初始化一个类的时候，如果发现器父类还没有初始化，则需要先触发其父类的初始化。</li>
<li>虚拟机会保证一个类的<code>&lt;clinit&gt;()</code>方法在多线程环境中被正确加锁和同步。</li>
</ul>
<h3 id="classloader"><a class="markdownIt-Anchor" href="#classloader"></a> ClassLoader</h3>
<p><img data-src="https://raw.githubusercontent.com/pengxiandyou/pengxiandyou.github.io/e5377a530ddc6d6995303bbfc75547513f025f3b/imgbed/2021/20210620163503.png" alt="image-20210620161845947" title="我自己在ppt里画的" /></p>
<p>  <mark>引导类加载器：</mark>C++编写。JVM自带加载器。负责Java平台核心库，用来装载核心类库。该加载器无法直接获取。</p>
<p>  <mark>扩展类加载器：</mark>负责jre/lib/ext目录下的jar包或-Djava.ext.dirs指定目录下的jar包载入工作库。</p>
<p>  <mark>系统类加载器：</mark>负责Java-classpath或-Djava.class.path所指的目录下的类与jar包装入工作，是最常用的类加载器。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Properties</span> <span class="variable">pros</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line"><span class="comment">//module下</span></span><br><span class="line"><span class="comment">//FIS fis = new FIS(&quot;jdbc.properties&quot;);</span></span><br><span class="line"><span class="comment">//module的src下</span></span><br><span class="line"><span class="type">Inputstream</span> <span class="variable">is</span> <span class="operator">=</span> 当前类.class.getClassLoader().getResourceAsStream(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">pros.load(is);</span><br><span class="line">pros.getProperty(<span class="string">&quot;user&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="各种获取"><a class="markdownIt-Anchor" href="#各种获取"></a> 各种获取</h3>
<h4 id="创建运行时类的对象"><a class="markdownIt-Anchor" href="#创建运行时类的对象"></a> 创建运行时类的对象</h4>
<p>要有空参构造器，权限得够。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class&lt;Person&gt; clazz = Person.class;</span><br><span class="line"><span class="type">Person</span> <span class="variable">obj</span> <span class="operator">=</span> clazz.newInstance();</span><br></pre></td></tr></table></figure>
<h4 id="反射动态性体会"><a class="markdownIt-Anchor" href="#反射动态性体会"></a> 反射动态性体会</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;全类名&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> clazz.newInstance();</span><br></pre></td></tr></table></figure>
<h4 id="获取运行时类的属性结构"><a class="markdownIt-Anchor" href="#获取运行时类的属性结构"></a> 获取运行时类的属性结构</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Person.class;</span><br><span class="line"><span class="comment">//当前运行时类及其父类中声明为public的属性</span></span><br><span class="line">Field[] fields = clazz.getFields();</span><br><span class="line"><span class="comment">//当前运行时类中声明的属性</span></span><br><span class="line">Field[] declaredFields = clazz.getDeclaredFields();</span><br><span class="line"></span><br><span class="line"><span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> declaredFields[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//权限</span></span><br><span class="line">f.getModifier();<span class="comment">//是int的、</span></span><br><span class="line">Modifier.toString(f.getModifiers());</span><br><span class="line"><span class="comment">//类型</span></span><br><span class="line"><span class="type">Class</span> <span class="variable">type</span> <span class="operator">=</span> f.getType();</span><br><span class="line">type.getName();</span><br><span class="line"><span class="comment">//变量名</span></span><br><span class="line">f.getName();</span><br></pre></td></tr></table></figure>
<h4 id="获取运行时类的方法结构"><a class="markdownIt-Anchor" href="#获取运行时类的方法结构"></a> 获取运行时类的方法结构</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当前运行时类及其父类中声明为public的方法</span></span><br><span class="line">Method[] methods = clazz.getMethods();</span><br><span class="line"><span class="comment">//当前运行时类中声明的方法</span></span><br><span class="line">Method[] DeclaredMethods = clazz.getDeclaredMethods();</span><br><span class="line"></span><br><span class="line"><span class="type">Method</span> <span class="variable">m</span> <span class="operator">=</span> DeclaredMethods[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//注解</span></span><br><span class="line">Annotation[] annos = m.getAnnotations();</span><br><span class="line"><span class="comment">//权限</span></span><br><span class="line">Modifier.toString(m.getModifiers);</span><br><span class="line"><span class="comment">//返回值</span></span><br><span class="line">m.getReturnType.getName();<span class="comment">//先返回一个class。</span></span><br><span class="line"><span class="comment">//方法名</span></span><br><span class="line">m.getName();</span><br><span class="line"><span class="comment">//形参类型</span></span><br><span class="line">class&lt;?&gt;[] parameters = m.getParameterTypes();</span><br><span class="line"><span class="keyword">if</span>(parameters != <span class="literal">null</span> &amp;&amp; parameters.length != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment">//处理，可以每一个getNmae.对于形参名，以前反射不可以，现在可以。不过可能需要在编译时添加一个参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//异常类型</span></span><br><span class="line">class&lt;?&gt; excptionTypes = m.getExcptionTypes();</span><br><span class="line"><span class="comment">//同上取一个处理。</span></span><br></pre></td></tr></table></figure>
<h4 id="获取运行时类的构造器"><a class="markdownIt-Anchor" href="#获取运行时类的构造器"></a> 获取运行时类的构造器</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当前运行时类（及其父类？忘了，测试没有）public的构造器</span></span><br><span class="line">Constructor[] constructors = clazz.getConstructors();</span><br><span class="line"><span class="comment">//当前运行时类所有的构造器</span></span><br><span class="line">Constructor[] declaredConstructors = clazz.getDeclaredConstructors();</span><br></pre></td></tr></table></figure>
<h4 id="获取运行时类的父类相关"><a class="markdownIt-Anchor" href="#获取运行时类的父类相关"></a> 获取运行时类的父类相关</h4>
<p>父类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">superClass</span> <span class="operator">=</span> clazz.getSuperClass();</span><br></pre></td></tr></table></figure>
<p>带泛型的父类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Type</span> <span class="variable">genericSuperclass</span> <span class="operator">=</span> clazz.getGenericSuperclass();</span><br></pre></td></tr></table></figure>
<p>带泛型父类的泛型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ParameterizedType</span> <span class="variable">paramType</span> <span class="operator">=</span> (ParameterizedType) genericSuperclass;</span><br><span class="line">Type[] actualTypeArguments = paramType.getActualTypeArguments();</span><br><span class="line">System.out.println(actualTypeArguments[<span class="number">0</span>].getTypeName());</span><br></pre></td></tr></table></figure>
<p>  Type是接口，Class实现了Type，所以可以强转为Class再使用getName。</p>
<h4 id="获取运行时类的接口"><a class="markdownIt-Anchor" href="#获取运行时类的接口"></a> 获取运行时类的接口</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class[] interfaces = clazz.getInterfaces();</span><br></pre></td></tr></table></figure>
<p>  父类的接口可以先获取到父类，再获取接口</p>
<h4 id="获取运行时类所在的包"><a class="markdownIt-Anchor" href="#获取运行时类所在的包"></a> 获取运行时类所在的包</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Packge</span> <span class="variable">pack</span> <span class="operator">=</span> clazz.getPackage();</span><br></pre></td></tr></table></figure>
<h4 id="获取运行时类的注解"><a class="markdownIt-Anchor" href="#获取运行时类的注解"></a> 获取运行时类的注解</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Annotations[] annos = clazz.getAnnotations();</span><br></pre></td></tr></table></figure>
<h3 id="各种调用"><a class="markdownIt-Anchor" href="#各种调用"></a> 各种调用</h3>
<h4 id="调用指定属性"><a class="markdownIt-Anchor" href="#调用指定属性"></a> 调用指定属性</h4>
<p>要求public</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Field</span> <span class="variable">id</span> <span class="operator">=</span> clazz.getField(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">id.set(p,<span class="number">1001</span>);</span><br><span class="line">id.get(p);</span><br></pre></td></tr></table></figure>
<p>常用的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> clazz.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">name.setAccessable(<span class="literal">true</span>);</span><br><span class="line">name.set(p,<span class="string">&quot;Tom&quot;</span>);<span class="comment">//p也可以是null</span></span><br><span class="line">name.get(p);</span><br></pre></td></tr></table></figure>
<h4 id="调用指定方法"><a class="markdownIt-Anchor" href="#调用指定方法"></a> 调用指定方法</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Method</span> <span class="variable">show</span> <span class="operator">=</span> clazz.getDeclaredMethod(<span class="string">&quot;show&quot;</span>,String.class);</span><br><span class="line">show.setAccessible(<span class="literal">true</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> show.invoke(p,<span class="string">&quot;china&quot;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="调用静态方法"><a class="markdownIt-Anchor" href="#调用静态方法"></a> 调用静态方法</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Method</span> <span class="variable">showDesc</span> <span class="operator">=</span> clazz.getDeclaredmethod(<span class="string">&quot;showDesc&quot;</span>);<span class="comment">//无返回值。</span></span><br><span class="line">showDesc.setAccessable(<span class="literal">true</span>);</span><br><span class="line"><span class="type">Objiect</span> <span class="variable">rval</span> <span class="operator">=</span> showDesc.invoke(Persion.class);</span><br><span class="line"><span class="type">Objiect</span> <span class="variable">rval</span> <span class="operator">=</span> showDesc.invoke(<span class="literal">null</span>);<span class="comment">//本身clazz知道静态是啥（现在我无法准确理解，但在我笔记上就在这位置）</span></span><br></pre></td></tr></table></figure>
<h4 id="调用构造器"><a class="markdownIt-Anchor" href="#调用构造器"></a> 调用构造器</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Constructor</span> <span class="variable">dcon</span> <span class="operator">=</span> clazz。getDeclaredConstructor(String.class);</span><br><span class="line">dcon.setAccessible(<span class="literal">true</span>);</span><br><span class="line"><span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> dcon.newInstace(<span class="string">&quot;Tom&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="动态代理"><a class="markdownIt-Anchor" href="#动态代理"></a> 动态代理</h3>
<p>  Spring两大核心：IOC容器：常见方式依赖注入、AOP：原理：动态代理。</p>
<p>先来静态的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">interface</span>  <span class="title class_">ClothFactory</span>&#123;</span><br><span class="line">     <span class="keyword">void</span> <span class="title function_">produceCloth</span><span class="params">()</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">Class ProxyClothFactory <span class="keyword">implements</span> <span class="title class_">ClothFactory</span>&#123;</span><br><span class="line">    privite ClothFactory factory;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ProxyClothFactory</span><span class="params">(ClothFactory factory)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.factory = factory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">produceCloth</span><span class="params">()</span>&#123;</span><br><span class="line">        syso(<span class="string">&quot;代理工厂做一些工作&quot;</span>);</span><br><span class="line">        factory.produceCloth();</span><br><span class="line">        syso(<span class="string">&quot;代理工厂做后续工作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class NikeClothFactory <span class="keyword">implements</span> <span class="title class_">ClothFactory</span>&#123;</span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">produceCloth</span><span class="params">()</span>&#123;</span><br><span class="line">        syso(<span class="string">&quot;Nike工厂生产运动服&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="type">ClothFactory</span> <span class="variable">nike</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NikeClothFactory</span>();</span><br><span class="line">    <span class="type">ClothFactory</span> <span class="variable">proxyClothFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProxyClothFactory</span>(nike);</span><br><span class="line">    proxyClothFactory.produceCloth();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>动态的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Human</span>&#123;</span><br><span class="line">    String <span class="title function_">getBelief</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String food)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SuperMan</span> <span class="keyword">implements</span> <span class="title class_">Human</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBelief</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;I believe I can fly!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String food)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我喜欢吃&quot;</span> + food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HumanUtil</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method1</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;====================通用方法一====================&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;====================通用方法二====================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">要想实现动态代理，需要解决的问题？</span></span><br><span class="line"><span class="comment">问题一：如何根据加载到内存中的被代理类，动态的创建一个代理类及其对象。</span></span><br><span class="line"><span class="comment">问题二：当通过代理类的对象调用方法a时，如何动态的去调用被代理类中的同名方法a。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ProxyFactory</span>&#123;</span><br><span class="line">    <span class="comment">//调用此方法，返回一个代理类的对象。解决问题一</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getProxyInstance</span><span class="params">(Object obj)</span>&#123;<span class="comment">//obj:被代理类的对象</span></span><br><span class="line">        <span class="type">MyInvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyInvocationHandler</span>();</span><br><span class="line"></span><br><span class="line">        handler.bind(obj);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),handler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object obj;<span class="comment">//需要使用被代理类的对象进行赋值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bind</span><span class="params">(Object obj)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当我们通过代理类的对象，调用方法a时，就会自动的调用如下的方法：invoke()</span></span><br><span class="line">    <span class="comment">//将被代理类要执行的方法a的功能就声明在invoke()中</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="type">HumanUtil</span> <span class="variable">util</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HumanUtil</span>();</span><br><span class="line">        util.method1();</span><br><span class="line">        <span class="comment">//method:即为代理类对象调用的方法，此方法也就作为了被代理类对象要调用的方法</span></span><br><span class="line">        <span class="comment">//obj:被代理类的对象</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">returnValue</span> <span class="operator">=</span> method.invoke(obj,args);</span><br><span class="line">        util.method2();</span><br><span class="line">        <span class="comment">//上述方法的返回值就作为当前类中的invoke()的返回值。</span></span><br><span class="line">        <span class="keyword">return</span> returnValue;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SuperMan</span> <span class="variable">superMan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SuperMan</span>();</span><br><span class="line">        <span class="comment">//proxyInstance:代理类的对象</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">proxyInstance</span> <span class="operator">=</span> (Human) ProxyFactory.getProxyInstance(superMan);<span class="comment">//可以强转（可以泛型吗？）</span></span><br><span class="line">        <span class="type">Human</span> <span class="variable">proxyInstance</span> <span class="operator">=</span> （Human）proxyInstance；</span><br><span class="line">        <span class="comment">//当通过代理类对象调用方法时，会自动的调用被代理类中同名的方法</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">belief</span> <span class="operator">=</span> proxyInstance.getBelief();</span><br><span class="line">        System.out.println(belief);</span><br><span class="line">        proxyInstance.eat(<span class="string">&quot;四川麻辣烫&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;*****************************&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">NikeClothFactory</span> <span class="variable">nikeClothFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NikeClothFactory</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">ClothFactory</span> <span class="variable">proxyClothFactory</span> <span class="operator">=</span> (ClothFactory) ProxyFactory.getProxyInstance(nikeClothFactory);</span><br><span class="line"></span><br><span class="line">        proxyClothFactory.produceCloth();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/5f3c8c3f68f040849bfed639ae4c40bf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAcXFfNDY0OTc2NzU=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="AOP代理的方法" /></p>
<p>它在<code>HumanUtil</code>有体现。</p>
<h1 id="10-12-15-17-18-110-111"><a class="markdownIt-Anchor" href="#10-12-15-17-18-110-111"></a> 1.0 1.2 1.5 1.7 1.8 1.10 1.11</h1>
<p>  1.1的Calendar</p>
<p>  <code>switch</code>：5.0时的枚举，7.0时的<code>String</code>。</p>
<p>  5.0可变参数。</p>
<p>  5.0自动装箱和 拆箱。</p>
<p>  5.0LocK锁</p>
<p>  5.0StringBuilder</p>
<p>  5.0注解</p>
<p>  5.0foreach</p>
<p>  5.0泛型</p>
<p>  8.0接口静态方法、默认方法</p>
<p>  8.0省略了方法的局部内部类关于变量的<code>final</code>的省略。</p>
<p>  8.0新的时间</p>
<p>  8.0两个新的注解特性</p>
<p>  8.0<code>::</code></p>
<p>  我认为7891011有类型推断，只不过有些许差别。</p>
<h2 id="8的其他特性"><a class="markdownIt-Anchor" href="#8的其他特性"></a> 8的其他特性</h2>

<div class="markmap-container" style="height:undefined">
  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;函数式接口&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Lambda表达式&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;方法引用/构造器引用&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;StremAPI&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;并行流&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;串行流&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;接口的增强&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;静态方法&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;默认方法&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;Opptional类&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;新的时间和日期API&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;其他&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;重复注解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;类型注解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;通用目标类型推断&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;JDK的更新&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;集合的流式操作&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;并发&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;Arrays&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;Number和Math&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;IO/NIO的改进&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;Reflection获取形参名&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;String：join（）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;Files&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;新编译工具：jjs、jdeps&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;JVM中的Metaspace取代PermGen空间&quot;}]}],&quot;p&quot;:{}}"></svg>
</div>

<p>好处：</p>
<ol>
<li>
<p>速度更快</p>
</li>
<li>
<p>代码更少</p>
</li>
<li>
<p>强大的StreamAPI</p>
</li>
<li>
<p>便于并行</p>
</li>
<li>
<p>最大画减少空指针异常</p>
</li>
<li>
<p>Nashorn引擎，允许在JVM上运行JS应用</p>
</li>
</ol>
<h3 id="lambda表达式"><a class="markdownIt-Anchor" href="#lambda表达式"></a> Lambda表达式</h3>
<p>  Lambda是一个匿名函数，可理解为一段可以传递的代码。本质是<a href ="#Funcational">函数式接口</a>的实例。</p>
<p>例一</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Runnable</span> <span class="variable">r1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        sout:我是sb</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">r1.run();</span><br><span class="line"><span class="comment">//重写</span></span><br><span class="line"><span class="type">Runnable</span> <span class="variable">r2</span> <span class="operator">=</span> () -&gt; sout:我是sb;</span><br></pre></td></tr></table></figure>
<p>例二</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Comparator&lt;Integer&gt; com1 = <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Integer&gt;()&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Integer o1, Integer O2)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.compare(o1,o2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//重写</span></span><br><span class="line">Comparator&lt;Integer&gt; com2 = (o1, o2) -&gt; Integer.compare(o1,o2);</span><br><span class="line">Comparator&lt;Integer&gt; com3 = Interger::compare;</span><br></pre></td></tr></table></figure>
<p>格式</p>
<p>  左边：lambda形参列表（其实是接口中的形参列表）</p>
<p>  右边：lambda体（其实就是重写的抽象方法的方法体）</p>
<p>使用</p>
<ol>
<li>无参，无返<code>()-&gt;&#123;语句&#125;</code></li>
<li>一参，无返<code>(String s) -&gt; &#123;语句&#125;</code>、</li>
</ol>
<blockquote>
<p>谎言和誓言的区别是什么？</p>
<p>一个是听的人当真了，一个是说的当真了</p>
</blockquote>
<ol start="3">
<li>类型推断<code>Consumer&lt;String&gt; con = (s) -&gt; &#123;sout：s&#125;</code></li>
<li>一参省括号，无返<code>s - &gt; &#123;sout:s&#125;</code></li>
<li>多参，多语句，可返<code>(o1,o2) -&gt; &#123;sout:o1;sout:o2;return o1.compareTo(o2);&#125;</code></li>
<li>只有一条语句<code>(o1,o2) -&gt; o1.compareTo(o2)</code></li>
</ol>
<p>总结</p>
<ul>
<li>左边：参数类型可省略，只有一个参数的话，<code>()</code>也可省略</li>
<li>右边：只有一条语句，<code>&#123;&#125;</code>可以省略，省略时，同时省略<code>return</code></li>
</ul>
<h3 id="span-id-funcational函数式接口funcationalspan"><a class="markdownIt-Anchor" href="#span-id-funcational函数式接口funcationalspan"></a> <span id ="Funcational">函数式接口（Funcational）</span></h3>
<p>  接口中声明了一个抽象方法，称函数式接口。用<code>FuncationalInterface</code>注解，<code>FuncationalInterface</code>检验它是不是一个函数式接口。同时javadoc也会包含一条声明，说明这个接口是函数式接口。</p>
<p>  在<code>java.util.funcation</code>下定义了丰富的函数式接口。</p>
<p>四大内置核心函数式接口</p>
<p><img data-src="https://img-blog.csdnimg.cn/13d8e39f46024efcbe27beb845d756cd.png" alt="四大内置核心函数式接口" /></p>
<p>其他接口</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/aa651e5e5b6214659a0e160faec3a6e4.png" alt="其他接口" /></p>
<h3 id="方法引用"><a class="markdownIt-Anchor" href="#方法引用"></a> 方法引用</h3>
<p>  也是函数式接口的实例。当要传递给lambda体的操作已经有实现的方法了，可以使用方法引用。要求实现接口的抽象方法的参数列表和返回值类型，必须和方法引用的方法的参数列表和返回值类型保持一致（主要针对情况1和2）。</p>
<p>使用格式：<code>类或对象::方法名</code>，具体三种情况：</p>
<ol>
<li><code>对象::非静态方法</code></li>
<li><code>类::静态方法</code></li>
<li><code>类::非静态方法</code></li>
</ol>
<h4 id="构造器引用"><a class="markdownIt-Anchor" href="#构造器引用"></a> 构造器引用</h4>
<p>  <code>类::new</code></p>
<h4 id="数组引用"><a class="markdownIt-Anchor" href="#数组引用"></a> 数组引用</h4>
<p>  把数组看作特殊的类，则写法与构造器引用一致。<code>String[]::new</code></p>
<h3 id="强大的stream-api"><a class="markdownIt-Anchor" href="#强大的stream-api"></a> 强大的Stream API</h3>
<p>  Stream APl（java.util.stream）把真正的函数式编程风格引入到Java中。这是目前为正对Java类库最好的补充，因为为sreamAPl可以极大提高Java程序员的生产力，让程序员写出高效率、干净、简洁的代码。</p>
<p>  Stream是Java8中处理集合的关键抽象概念，它可以指定你希望对集合进行的操作，可以执行常复杂的查找、过滤和映射数据等操作。使用Stream API对集合数据进行操作，就类似于使用SQL执行的数据库查询。也可以使用Stream API来并行执行操作。简言之，Stream API提供了一种高效且易于使用的处理数据的方式。</p>
<p>  Stream和Collection集合的区别：Collection是一种静态的内存数据结构，而Stream是有关计算的。前者是主要面向内存，存储在内存中，后者主要是面向CPU，通过CPU实现计算。</p>
<p>注意</p>
<ol>
<li>Stream自己不会存储元素。</li>
<li>Stream不会改变源对象。相反，他们会返回一个持有结果的新Stream。</li>
<li>Stream操作是延迟执行的。这意味着他们会等到需要结果的时候才执行。</li>
</ol>
<p>创建：通过集合的方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//default Stream&lt;E&gt; stream(）：返回一个顺序流</span></span><br><span class="line">Stream&lt;Employee&gt; stream = employees.stream():</span><br><span class="line"><span class="comment">//default Stream&lt;E&gt; paralLelstream()：返回一个并行流</span></span><br><span class="line">Stream&lt;Employee&gt; parallelstream = employees.parallelstream():</span><br></pre></td></tr></table></figure>
<p>创建：通过数组的方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">arr</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="comment">//调用Arrays类的static &lt;T&gt; Stream&lt;T&gt; stream(T[1 array): 返回一个流</span></span><br><span class="line"><span class="type">IntStream</span> <span class="variable">stream</span> <span class="operator">=</span> Arrays.stream(arr);</span><br><span class="line"></span><br><span class="line"><span class="type">Employee</span> <span class="variable">e1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1001</span>, <span class="string">&quot;Tom&quot;</span>);</span><br><span class="line"><span class="type">Employee</span> <span class="variable">e2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>( <span class="number">1002</span>, <span class="string">&quot;Jerry&quot;</span>);</span><br><span class="line">Employee[] arr1 = <span class="keyword">new</span> <span class="title class_">Employee</span>[]&#123;el,e2&#125;;</span><br><span class="line">Stream&lt;Employee&gt; streaml = Arrays.stream(arr1):</span><br></pre></td></tr></table></figure>
<p>创建：通过<code>Stream</code>的<code>of（）</code>的方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</span><br></pre></td></tr></table></figure>
<p>创建：创建无限流</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//送代</span></span><br><span class="line"><span class="comment">//public static&lt;T&gt; Stream&lt;T&gt; iterate(final T seed, final UnaryOperator&lt;T&gt; f)</span></span><br><span class="line"><span class="comment">//遍历前10个偶数</span></span><br><span class="line">Stream.iterate( <span class="number">0</span>, t -&gt; t + <span class="number">2</span>).limit(<span class="number">10</span>).forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成</span></span><br><span class="line"><span class="comment">//public static&lt;T&gt; Stream&lt;T&gt; generate(Supplier&lt;T&gt; s)</span></span><br><span class="line">Stream.generate(Math::random).limit(<span class="number">10</span>).forEach(System.out::println);</span><br></pre></td></tr></table></figure>
<p>中间操作——筛选与切片</p>
<ul>
<li><code>filter(Predicate p)</code>：接收Lambda，从流中排除某些元素。</li>
<li><code>limit(n)</code>：截断流，使其元素不超过给定数量。</li>
<li><code>skip(n)</code>：跳过元素，返回一个扔掉了前n个元素的流。若流中元素不足n个，则返回一个空流。与<code>limit(n)</code>互补。</li>
<li><code>distinct()</code>：筛选，通过流所生成元素的hashcode()和equals()去除重复元素。</li>
</ul>
<p>注：<code>forEach（）</code>等终止操作会关闭流。报这个异常<code>java.lang.IllegalstateException: stream has already been operated upon or closed</code>。</p>
<p>中间操作——映射</p>
<ul>
<li><code>map(Function f)</code>：接收一个函数作为参数，该函数会被应用到每个元素上，并将其映射成一个新的元素。</li>
<li><code>mapToDouble(ToDoubleFunction f)</code>：接收一个函数作为参数，该函数会被应用到每个元素上，产生一个新的DoubleStream。</li>
<li><code>mapTolnt(TolntFunction f)</code>：接收一个函数作为参数，该函数会被应用到每个元素上，产生一个新的IntStream。</li>
<li><code>mapToLong(ToLongFunction f)</code>：接收一个函数作为参数，该函数会被应用到每个元素上，产生一个新的LongStream</li>
<li><code>flatMap(Function f)</code>：接收一个函数作为参数，将流中的每个值都换成另一个流，然后把所有流连接成一个流。（相当于处理集合套集合）</li>
</ul>
<p>中间操作——排序</p>
<ul>
<li><code>sorted()</code>：产生一个新流，其中按自然顺序排序。</li>
<li><code>sorted(Comparator com)</code>：产生一个新流，其中按比较器顺序排序。</li>
</ul>
<p>终止操作——匹配与查找</p>
<ul>
<li><code>allMatch(Predicate p)</code>：检查是否匹配所有元素。</li>
<li><code>anyMatch(Predicate p）</code>：检查是否至少匹配一个元素。</li>
<li><code>noneMatch(Predicctep)</code>：检查是否没有匹配的元素。。</li>
<li><code>findFirst()</code>：返回第一个元素。</li>
<li><code>findAny()</code>：返回当前流中的任意元素。</li>
<li><code>count()</code>：返回流中元素的总个数。</li>
<li><code>max(Compargtor c)</code>：返回流中最大值。</li>
<li><code>min(Comparatorc)</code>：返回流中最小值。</li>
<li><code>forEach(Consumer c)</code>：内部送代。</li>
</ul>
<p>终止操作——归约</p>
<ul>
<li>
<p><code>reduce(T iden, BinaryOperator b)</code>：可以将流中元素反复结合起来，得到一个值。返回T。</p>
</li>
<li>
<p><code>reduce(BinaryOperator b)</code>：可以将流中元素反复结合起来，得到一个值。返回Optional&lt;T&gt;。</p>
</li>
</ul>
<p>终止操作——收集</p>
<p>  <code>collect(Collector c)</code>将流转换为具他形式。接收一不Collector接口的实现，用于给Stream中元素做汇总的方法。另外，Collectors实用类提供了很多静态方法，可以方便地创建常见收集器实例，具体方法与实例如下表：</p>
<table>
    <tr>
    	<th>方法</th>
        <th>返回类型</th>
        <th>作用</th>
    </tr>
    <tr>
    	<td><code>toList</code></td>
        <td><code>List&lt;T&gt;</code></td>
        <td>把流中元素收集到List</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>List&lt;Employee&qt; emps=list.stream().collect(Collectors.toList());</code></td>
    </tr>
       <tr>
    	<td><code>toSet</code></td>
        <td><code>Set&lt;T&qt;</code></td>
        <td>把流中元素收集到Set</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>Set&lt;Employee&gt; emps=list.stream().collect(Collectors.toSet());</code></td>
    </tr>
       <tr>
    	<td><code>toCollection</code></td>
        <td><code>Collection&lt;T&gt;</code></td>
        <td>把流中元素收集到创建的集合</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>Collection&lt;Employee&gt; emps=list.stream().collect(Collectors.toCollection(ArrayList::new));</code></td>
    </tr>
       <tr>
    	<td><code>counting</code></td>
        <td><code>Long</code></td>
        <td>计算流中元素的个数</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>long count=list.stream().collect(Collectors.counting());</code></td>
    </tr>
       <tr>
    	<td><code>summingInt</code></td>
        <td><code>Integer</code></td>
        <td>对流中元素的整数属性求和</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>int total=list.stream().collect(Collectors.summingInt(Employee:getSalary));</code></td>
    </tr>
       <tr>
    	<td><code>averagingInt</code></td>
        <td><code>Double</code></td>
        <td>计算流中元素Integer属性的平均值</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>double avg=list.stream().collect(Collectors.averagingInt(Employee:getSalary));</code></td>
    </tr>
       <tr>
    	<td><code>summarizingInt</code></td>
        <td><code>IntSummaryStatistics</code></td>
        <td>收集流中Integer属性的统计值。如：平均值</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>int summaryStatisticsis = list.stream().collect(Collectors.summarizingInt(Employee::getSalary);</code></td>
    </tr>
    <tr>
    	<td><code>joining</code></td>
        <td><code>String</code></td>
        <td>连接流中每个字符串</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>String str=list.stream().map(Employee::getName).collect(Collectors.joining());</code></td>
    </tr>
    <tr>
    	<td><code>maxBy</code></td>
        <td><code>Optional&lt;T&gt;</code></td>
        <td>根据比较器选择最大值</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>Optional&lt;Employee&gt; max=list.stream().collect(Collectors.maxBy(comparingInt(Employee:getSalary)));</code></td>
    </tr>
    <tr>
    	<td><code>minBy</code></td>
        <td><code>Optional&lt;T&gt;</code></td>
        <td>根据比较器选择最小值</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>Optional&lt;Employee&gt; max=list.stream().collect(Collectors.minBy(comparingInt(Employee:getSalary)));</code></td>
    </tr>
    <tr>
    	<td><code>reducing</code></td>
        <td>归约产生的类型</td>
        <td>从一个作为累加器的初始值开始，利用BinaryOperator与流中元素逐个结合，从而归约成单个值</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>int total=list.stream().collect(Collectors.reducing(0,Employee::getSalar, Integer:sum));</code></td>
    </tr>
    <tr>
    	<td><code>collectingAndThen</code></td>
        <td>转换函数返回的类型</td>
        <td>包裹另一一个收集器，对其结果转换函数</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>int how=list.stream().collect(Collectors.collectingAndThen(Collectors.toList(),List::size))</code></td>
    </tr>
    <tr>
    	<td><code>groupingBy</code></td>
        <td><code>Map&lt;K, List&lt;T&gt;&gt;</code></td>
        <td>根据某属性值对流分组，属性为K,结果为V</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>Map&lt;Employee.Status,List&lt;Employee&gt;&gt; map=list.stream().collect(Collectors.groupingBy(mployee::getStatus));</code></td>
    </tr>
    <tr>
    	<td><code>partitioningBy</code></td>
        <td><code>Map&lt;Boolean, List&lt;T&gt;&gt;</code></td>
        <td>根据true或false进行分区</td>
    </tr>
    <tr>
    	<td colspan = "3"><code>Map&lt;Boolean,List&lt;Employee&gt;&gt; vd=list.stream().collect(Collectors.partitioningBy(mployee::getManage)));</code></td>
    </tr>
</table>
<h3 id="optional类"><a class="markdownIt-Anchor" href="#optional类"></a> Optional类</h3>
<p>  Optional&lt;T&gt;类(java.util.Optional)是一个容器类，它可以保存类型T的值，代表这个值存在。或者仅仅保存null，表示这个值不存在。原来用null表示一个值不存在，现在Optional可以更好的表达这个概念。并且可以避免空指针异常。如果值存在则<code>isPresent()</code>方法会返回true，调用<code>get()</code>方法会返回该对象。</p>
<p><img data-src="https://img-blog.csdnimg.cn/9f9fb67f3dfe409d984be5253c370262.png" alt="Optional&lt;T&gt;" /></p>
<h2 id="9的新的特性我不喜欢的提供链接自己看12"><a class="markdownIt-Anchor" href="#9的新的特性我不喜欢的提供链接自己看12"></a> 9的新的特性（我不喜欢的提供链接自己看<a href="https://www.cnblogs.com/niujifei/p/15068333.html">①</a><a href="https://www.cnblogs.com/niujifei/p/15072786.html">②</a>）</h2>
<ul>
<li>⭐️<a href="https://zhuanlan.zhihu.com/p/347111596">模块化系统</a></li>
<li>⭐️<a href="https://zhuanlan.zhihu.com/p/28828422">jShell命令</a></li>
<li><a href="https://juejin.cn/post/7220375870228168762">多版本兼容jar包</a></li>
<li><a href="https://juejin.cn/post/7119302465530363918">接口的私有方法</a></li>
<li><a href="https://juejin.cn/post/6844903565970898958">钻石操作符<code>&lt;&gt;</code>的使用升级</a></li>
<li><a href="https://www.cnblogs.com/wzlbigdata/p/8278385.html">语法改进：try语句</a>（自动关闭的流要实现Closeable\AutoCloseable）</li>
<li><a href="https://www.cnblogs.com/wzlbigdata/p/8278392.html">String存储结构变更</a></li>
<li><a href="https://juejin.cn/post/7123206242037661703">便利的集合特性：</a><code>of()</code></li>
<li><a href="https://juejin.cn/post/6885091518558765069">增强的Stream API</a></li>
<li><a href="https://www.jianshu.com/p/62e8185a857c">全新的HTTP客户端API</a></li>
<li>Deprecated的相关API</li>
<li><a href="https://www.twle.cn/c/yufei/java9/java9-basic-javadoc.html">javadoc的HTML5支持</a></li>
<li><a href="https://www.jianshu.com/p/5822d2f3fe2c">Javascript擎升级：Nashorn</a>（11中被干掉了）</li>
<li><a href="https://www.cnblogs.com/wzlbigdata/p/8278413.html">java的动态编译器</a></li>
</ul>
<h2 id="10的新特性"><a class="markdownIt-Anchor" href="#10的新特性"></a> 10的新特性</h2>
<p>  <code>var</code>和集合的<code>copyOf</code>方法，其他的就不管了。</p>
<h2 id="11的新特性"><a class="markdownIt-Anchor" href="#11的新特性"></a> 11的新特性</h2>
<ul>
<li>
<p>String的新增的方法：<code>isBlank()</code>、<code>strip()</code>去除首尾空白、<code>&quot; Javastack &quot;.stripTrailing();</code>去除尾部空白、<code>&quot; Javastack &quot;.stripLeading();</code>去除首部空白、<code>&quot;Java&quot;.repeat(3);//&quot;JavaJavaJava&quot;</code>复制字符串、<code>&quot;A\nB\nC&quot;.lines().count();</code>行数统计</p>
</li>
<li>
<p>Optional的<code>isEmpty()</code></p>
</li>
<li>
<p><code>(@Deprecated var t) -&gt; System.out.println(t.toupperCase());</code>局部变量类型推断的升级</p>
</li>
<li>
<p>全新的HTTP客户端API</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">HttpClient</span> <span class="variable">client</span> <span class="operator">=</span>HttpClient.newHttpClient();</span><br><span class="line"><span class="type">HttpRequest</span> <span class="variable">request</span> <span class="operator">=</span> HttpRequest.newBuilder(URI.create(<span class="string">&quot;http://127.0.0.1:8080/test/&quot;</span>)).build();</span><br><span class="line">BodyHandler&lt;String&gt; responseBodyHandler = BodyHandlers.ofstring();</span><br><span class="line">HttpResponse&lt;string&gt; response = client.send(request, responseBodyHandler);</span><br><span class="line"><span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> response.body();</span><br><span class="line">System.out.println(body)</span><br></pre></td></tr></table></figure>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">HttpClient</span> <span class="variable">client</span> <span class="operator">=</span> HttpClient.newHttpClient();</span><br><span class="line"><span class="type">HttpRequest</span> <span class="variable">request</span> <span class="operator">=</span>HttpRequest.newBuilder(URI.create(<span class="string">&quot;http://127.0.0.1:8080/test/&quot;</span>)).build);</span><br><span class="line">BodyHandler&lt;String&gt; responseBodyHandler= BodyHandlers.ofString();</span><br><span class="line">CompletableFuture&lt;HttpResponse&lt;String&gt;&gt; sendAsync = client.sendAsync(request,responseBodyHandler);</span><br><span class="line">sendAsync.thenApply(t-&gt;t.body()).thenAccept(System.out::println);</span><br><span class="line"><span class="comment">//HttpResponse&lt;String&gt;response= sendAsync.get();</span></span><br><span class="line"><span class="comment">//string body=response.body();</span></span><br><span class="line"><span class="comment">//System.out.println(body);</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>更简化的编译运行程序：<code>java Test.java</code></p>
<ul>
<li>执行源文件中的第一个类，第一个类必须包含主方法。</li>
<li>并且不可以使用其他源文件中的自定义类，本文件中的自定文类是可以使用的。</li>
</ul>
</li>
<li>
<p>废弃Nashorn引擎，需要的话，可以考虑GraaIVM</p>
</li>
<li>
<p>ZGC是一个并发，基于region，压缩型的垃圾收集器，只有root扫描阶段会STW(stop the world)，因此GC停顿时间不会随着堆的增长和存活对象的增长而变长。</p>
<ul>
<li>GC暂停时间不会超过10mS</li>
<li>既能处理几百兆的小堆，也能处理几个T的大堆（OMG）</li>
<li>和G1相比，应用吞吐能力不会下降超过15%</li>
<li>为未来的GC功能和利用colord指针以及Load barriers优化奠定基础</li>
<li>初始只支持64位系统</li>
</ul>
</li>
<li>
<p><em>Unicode10</em></p>
</li>
<li>
<p><em>Deprecate the Pack200 Tools and APl</em></p>
</li>
<li>
<p><em>新的Epsilon垃圾收集器</em></p>
</li>
<li>
<p><em>完全支持Linux容器（包括Docker）</em></p>
</li>
<li>
<p><em>支持G1上的并行完全垃圾收集</em></p>
</li>
<li>
<p><em>最新的HTTPS安全协议TLS1.3</em></p>
</li>
<li>
<p><em>JavaFlightRecorder</em></p>
</li>
</ul>
<h2 id="到17的新特性"><a class="markdownIt-Anchor" href="#到17的新特性"></a> 到17的新特性</h2>
<ul>
<li>
<p>在14之前，进行类型转换的时候，最好进行<code>instanceof</code>判断，再进行转换。</p>
<p>之后可以这样：</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello,Java14&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(obj <span class="keyword">instanceof</span> string str)&#123;</span><br><span class="line">    System.out.println(str.contains(<span class="string">&quot;Java&quot;</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	System.out.println(<span class="string">&quot;非string类型&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code> 14引入预览，15二次预览，16转正，可以放心使用了。
</code></pre>
</li>
<li>
<p>switch表达式，12预览，13二次预览，14转正。12中引入<code>case L -&gt;</code>来替代<code>break</code>，用变量接收结果~~（必须有default）~~。13引入<code>yield</code>，用于返回指定的数据，结束switch结构。switch表达式（返回值）应该使用<code>yield</code>，switch语句（不返回值）应该便用<code>break</code>。</p>
</li>
<li>
<p>switch的模式匹配，17预览。</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">formatted</span> <span class="operator">=</span> <span class="keyword">switch</span>(o)&#123;</span><br><span class="line">    <span class="keyword">case</span> Integer i:</span><br><span class="line">    	yield <span class="string">&quot;int &quot;</span> + i;</span><br><span class="line">    <span class="keyword">case</span> Long l:</span><br><span class="line">  		yield <span class="string">&quot;long &quot;</span> + l;</span><br><span class="line">    <span class="keyword">case</span> Double d:</span><br><span class="line">   		yield <span class="string">&quot;double &quot;</span> + d;</span><br><span class="line">    <span class="keyword">case</span> String s:</span><br><span class="line">    	yield <span class="string">&quot;String &quot;</span> + s;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    	yield o.toString();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>文本块，13预览，14二次预览，15转正。 14加入<code>\</code>取消换行，<code>\s</code>表示空格。</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“”“</span><br><span class="line">各种字符串</span><br><span class="line">“”“</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>record的使用。实现一个简单的数据载体类，为了避免编写：构造函数，访可器，<code>equals()</code>，<code>hashCode()</code>，<code>toString()</code>等，Java14推出record。record是一种全新的类型，它本质上是一个final类，同时所有的属性都是final修饰，它会自动编译出<code>public get</code>、<code>hashcode</code>、<code>equals</code>、<code>toString</code>、构造器等结构，减少了代码编写量。</p>
</li>
<li>
<p>密封类。在Java中如果想让一个类不能被继谜承和修改，这时我们应该使用<code>fina1</code>关键字对类进行修饰。不过这种要么可<br />
以继承，要么不能继承的机制不够灵活，有些时候我们可能想让某个类可以被某些类型继承，但是不能随意继<br />
承，是做不到的。Java15尝试解决这个问题，引入了<code>sealed</code>类，被<code>sealed</code>修饰的类可以指定子类。这样这<br />
个类就只能被指定的类继承。15预览，16二次预览，17转正。  //子类要为<code>final</code>或<code>sealed</code>或<code>non-sealed</code>（无限制）</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">Person</span> permits Student,Teacher,Worker&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>12中，String实现<code>Constable</code>接口，新增<code>transform（Function）</code>方法。17中，标记删除Applet API（9标记过时）。9之后，不允许使用<code>_</code>作为变量。</p>
</li>
<li>
<p>9以后，默认G1 GC；10为G1提供并行的Full GC；12可中断的G1 Mixed GC，增强G1，自动返回未用堆内存给操作系统；~~Shenandoah GC:低停顿时间的GC；15shenandoah垃圾回收算法转正；~~11 引入革命性的 ZGC；12ZGC功能转正；16ZGC并发线程处理</p>
</li>
</ul>
<h1 id="其他-2"><a class="markdownIt-Anchor" href="#其他-2"></a> 其他</h1>
<p>这个输入皮肤挺好看的。</p>
<p><img data-src="https://i.loli.net/2021/03/15/3IVgCh19enx2ULm.png" alt="输入法皮肤.PNG" /></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构第二次上机代码</title>
    <url>/2019/10/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<hr/>
<center><a href="https://pengxiandyou.github.io/src/work/DataStructure/experiment2/">报告</a></center>
# 进制转换
<p>简易版本：不考虑了负数 输入要大于0 进制数不要大于10</p>
<p><a href="https://pengxiandyou.github.io/src/code/BaseConversion/">高级版本（点击）</a>：报告上交后发出 可以负数 任意进制</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 50 <span class="comment">//容量 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line">					   <span class="comment">//顺序结构储存</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType* base;</span><br><span class="line">	ElemType* top;</span><br><span class="line">	<span class="type">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">	f, t</span><br><span class="line">&#125;Bool;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function">Status <span class="title">initStack</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	S-&gt;base = <span class="keyword">new</span> ElemType[MAXSIZE];</span><br><span class="line">	<span class="keyword">if</span> (!S-&gt;base)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">	&#125;</span><br><span class="line">	S-&gt;top = S-&gt;base;</span><br><span class="line">	S-&gt;stacksize = MAXSIZE;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="function">Bool <span class="title">isEmpty</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> S-&gt;base == S-&gt;top ? t : f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLength</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> S-&gt;top - S-&gt;base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//入栈</span></span><br><span class="line"><span class="function">Status <span class="title">pushElem</span><span class="params">(SqStack* S, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">getLength</span>(S) == S-&gt;stacksize)<span class="keyword">return</span> ERROR;</span><br><span class="line">	*(S-&gt;top) = e;</span><br><span class="line">	S-&gt;top++;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line"><span class="function">ElemType <span class="title">popElem</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(S))<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	S-&gt;top--;</span><br><span class="line">	<span class="keyword">return</span> *(S-&gt;top);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取栈顶</span></span><br><span class="line"><span class="function">ElemType <span class="title">getTop</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(S))<span class="keyword">return</span> *(S-&gt;top - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//进制转换</span></span><br><span class="line"><span class="function">Status <span class="title">conversion</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqStack* S = <span class="keyword">new</span> SqStack;</span><br><span class="line">	<span class="built_in">initStack</span>(S);</span><br><span class="line">	<span class="keyword">while</span> (n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">pushElem</span>(S, n%k);</span><br><span class="line">		n = n / k;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (!<span class="built_in">isEmpty</span>(S))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">popElem</span>(S));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n=<span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (!(n &gt; <span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入需要转换的数(大于0)： &quot;</span>);</span><br><span class="line">		<span class="built_in">scanf_s</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (!(k&gt;=<span class="number">2</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入进制数（例如 2且大于2）&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf_s</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">conversion</span>(n, k);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="汉诺塔"><a class="markdownIt-Anchor" href="#汉诺塔"></a> 汉诺塔</h1>
<p>简易版本：输出移动步骤</p>
<p><a href="https://pengxiandyou.github.io/src/code/HanoiTowerAnimation/">高级版本(点击)</a>：报告上交后发出 输出移动画面（如果能力足够）</p>
<p>层数不要太高 电脑不行</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> A, <span class="type">char</span> B, <span class="type">char</span> C)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (n==<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c -&gt; %c\n&quot;</span>, A, C);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">hanoi</span>(n - <span class="number">1</span>, A, C, B);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c -&gt; %c\n&quot;</span>, A, C);</span><br><span class="line">		<span class="built_in">hanoi</span>(n - <span class="number">1</span>, B, A, C);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (!(n &gt; <span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入汉罗塔层数的数(大于0)： &quot;</span>);</span><br><span class="line">		<span class="built_in">scanf_s</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">hanoi</span>(n, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="括号匹配"><a class="markdownIt-Anchor" href="#括号匹配"></a> 括号匹配</h1>
<p>逻辑和书差不多 不过改了一些 暂时不能细说  <a href="https://pengxiandyou.github.io/src/code/BaseConversion/">改进版本(点击)</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 50 <span class="comment">//容量 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"><span class="comment">//顺序结构储存</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType* base;</span><br><span class="line">	ElemType* top;</span><br><span class="line">	<span class="type">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">	f, t</span><br><span class="line">&#125;Bool;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function">Status <span class="title">initStack</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	S-&gt;base = <span class="keyword">new</span> ElemType[MAXSIZE];</span><br><span class="line">	<span class="keyword">if</span> (!S-&gt;base)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">	&#125;</span><br><span class="line">	S-&gt;top = S-&gt;base;</span><br><span class="line">	S-&gt;stacksize = MAXSIZE;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="function">Bool <span class="title">isEmpty</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> S-&gt;base == S-&gt;top ? t : f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLength</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> S-&gt;top - S-&gt;base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//入栈</span></span><br><span class="line"><span class="function">Status <span class="title">pushElem</span><span class="params">(SqStack* S, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">getLength</span>(S) == S-&gt;stacksize)<span class="keyword">return</span> ERROR;</span><br><span class="line">	*(S-&gt;top) = e;</span><br><span class="line">	S-&gt;top++;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line"><span class="function">ElemType <span class="title">popElem</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(S))<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	S-&gt;top--;</span><br><span class="line">	<span class="keyword">return</span> *(S-&gt;top);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取栈顶</span></span><br><span class="line"><span class="function">ElemType <span class="title">getTop</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(S))<span class="keyword">return</span> *(S-&gt;top - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空栈</span></span><br><span class="line"><span class="function">Status <span class="title">cleanStack</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	S-&gt;top = S-&gt;base;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//匹配括号</span></span><br><span class="line"><span class="function">Status <span class="title">matchBrackets</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">	<span class="type">char</span> ch;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入英文状态下的括号，可复制 ()&#123;&#125;[]，以#结束&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cin &gt;&gt; ch;</span><br><span class="line">	<span class="keyword">while</span> (ch!=<span class="string">&#x27;#&#x27;</span>&amp;&amp;flag)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">switch</span> (ch)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">			<span class="built_in">pushElem</span>(S, ch);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">			<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(S)&amp;&amp;<span class="built_in">getTop</span>(S)==<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">popElem</span>(S);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				flag = <span class="literal">false</span>;</span><br><span class="line">				cout &lt;&lt; ch&lt;&lt;<span class="string">&quot;输入错误，匹配&quot;</span>&lt;&lt;i &lt;&lt;<span class="string">&quot; ( 失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">			<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(S) &amp;&amp; <span class="built_in">getTop</span>(S) == <span class="string">&#x27;&#123;&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">popElem</span>(S);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				flag = <span class="literal">false</span>;</span><br><span class="line">				cout &lt;&lt; ch &lt;&lt; <span class="string">&quot;输入错误，匹配&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; &#123; 失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">			<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(S) &amp;&amp; <span class="built_in">getTop</span>(S) == <span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">popElem</span>(S);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				flag = <span class="literal">false</span>;</span><br><span class="line">				cout &lt;&lt; ch &lt;&lt; <span class="string">&quot;输入错误，匹配&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; ] 失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;#&#x27;</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;\n&#x27;</span>:</span><br><span class="line">			 <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			flag = <span class="literal">false</span>;</span><br><span class="line">			cout &lt;&lt; ch;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;输入非法内容\n&quot;</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		++i;</span><br><span class="line">		cin &gt;&gt; ch;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(S) &amp;&amp; flag)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;匹配成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">return</span> OK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;匹配失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="built_in">cleanStack</span>(S); <span class="keyword">return</span> ERROR;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqStack* S = <span class="keyword">new</span> SqStack;</span><br><span class="line">    <span class="built_in">initStack</span>(S);</span><br><span class="line">	<span class="built_in">matchBrackets</span>(S);<span class="comment">//演示一排输入</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;第二次匹配&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">matchBrackets</span>(S);<span class="comment">//演示一次输一个</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;第三次匹配&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">matchBrackets</span>(S);<span class="comment">//演示括号匹配错误</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;第四次匹配&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">matchBrackets</span>(S);<span class="comment">//演示输入错误内容</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="舞伴"><a class="markdownIt-Anchor" href="#舞伴"></a> 舞伴</h1>
<p>不细说 <a href="https://pengxiandyou.github.io/src/download/open/DancePartner/">文件下载（点击）</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span> <span class="comment">//定义读写已命名文件的类型</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span> <span class="comment">//多定义的类型则用于读写存储在内存中的string对象</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 50 <span class="comment">//容量 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> string ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"> <span class="comment">//循环队列</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType* base;</span><br><span class="line">	<span class="type">int</span> front;</span><br><span class="line">	<span class="type">int</span> rear;</span><br><span class="line">&#125;SqQueue;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">	f, t</span><br><span class="line">&#125;Bool;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function">Status <span class="title">initQueue</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Q-&gt;base = <span class="keyword">new</span> ElemType[MAXSIZE];</span><br><span class="line">	<span class="keyword">if</span> (!Q-&gt;base)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> OVERFLOW;</span><br><span class="line">	&#125;</span><br><span class="line">	Q-&gt;front = Q-&gt;rear = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="function">Bool <span class="title">isEmpty</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> Q-&gt;front == Q-&gt;rear ? t : f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLength</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (Q-&gt;rear - Q-&gt;front + MAXSIZE) % MAXSIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//是否满</span></span><br><span class="line"><span class="function">Bool <span class="title">isFull</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (Q-&gt;rear + <span class="number">1</span>) % MAXSIZE == Q-&gt;front ? t : f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//入队 </span></span><br><span class="line"><span class="function">Status <span class="title">enQueue</span><span class="params">(SqQueue* Q, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isFull</span>(Q))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	&#125;</span><br><span class="line">	Q-&gt;base[Q-&gt;rear] = e;</span><br><span class="line">	Q-&gt;rear = (Q-&gt;rear + <span class="number">1</span>) % MAXSIZE;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出队</span></span><br><span class="line"><span class="function">ElemType <span class="title">deQueue</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(Q))<span class="keyword">return</span> ERROR;</span><br><span class="line">	ElemType e = Q-&gt;base[Q-&gt;front];</span><br><span class="line">	Q-&gt;front = (Q-&gt;front + <span class="number">1</span>) % MAXSIZE;</span><br><span class="line">	<span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取队头</span></span><br><span class="line"><span class="function">ElemType <span class="title">getHead</span><span class="params">(SqQueue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(Q))<span class="keyword">return</span> Q-&gt;base[Q-&gt;front];</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//读文件  </span></span><br><span class="line">	<span class="function">ifstream <span class="title">inFile</span><span class="params">(<span class="string">&quot;D:\\桌面\\舞伴.csv&quot;</span>, ios::in)</span></span>;<span class="comment">//inFile来自fstream,ifstream为输入文件流(从文件读入)</span></span><br><span class="line">	string lineStr;</span><br><span class="line">	vector&lt;vector&lt;string&gt;&gt; strArray;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">getline</span>(inFile, lineStr)) <span class="comment">//getline来自sstream</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//存成二维表结构</span></span><br><span class="line">		<span class="function">stringstream <span class="title">ss</span><span class="params">(lineStr)</span></span>;<span class="comment">//来自sstream</span></span><br><span class="line">		string str;</span><br><span class="line">		vector&lt;string&gt; lineArray;</span><br><span class="line">		<span class="comment">//按照逗号分隔</span></span><br><span class="line">		<span class="keyword">while</span> (<span class="built_in">getline</span>(ss, str, <span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">			lineArray.<span class="built_in">push_back</span>(str);<span class="comment">//一行数据以vector</span></span><br><span class="line">		strArray.<span class="built_in">push_back</span>(lineArray);<span class="comment">//每一行vector数据都放到strArray中去</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输出结果</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;strArray.<span class="built_in">size</span>(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;strArray[i].<span class="built_in">size</span>(); j++)</span><br><span class="line">			cout &lt;&lt; strArray[i][j] &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">		cout &lt;&lt; endl;</span><br><span class="line">	&#125; </span><br><span class="line">	SqQueue* QM = <span class="keyword">new</span> SqQueue; <span class="built_in">initQueue</span>(QM);</span><br><span class="line">	SqQueue* QW = <span class="keyword">new</span> SqQueue; <span class="built_in">initQueue</span>(QW);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;strArray.<span class="built_in">size</span>(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;strArray[i].<span class="built_in">size</span>()<span class="number">-1</span> ; j++)</span><br><span class="line">		&#123; </span><br><span class="line">			<span class="keyword">if</span> (<span class="string">&quot;男&quot;</span>== strArray[i][j+<span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">enQueue</span>(QM, strArray[i][j]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;女&quot;</span> == strArray[i][j + <span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">enQueue</span>(QW, strArray[i][j]);</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> ((!<span class="built_in">isEmpty</span>(QM))&amp;&amp;(!<span class="built_in">isEmpty</span>(QW)))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; k &lt;&lt; <span class="built_in">deQueue</span>(QM) &lt;&lt; <span class="string">&quot;    和\t&quot;</span> &lt;&lt; <span class="built_in">deQueue</span>(QW) &lt;&lt; <span class="string">&quot; 跳舞&quot;</span> &lt;&lt; endl; k++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(QM))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="built_in">getHead</span>(QW) &lt;&lt; <span class="string">&quot; 等待下一次匹配&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(QW))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="built_in">getHead</span>(QM) &lt;&lt; <span class="string">&quot; 等待下一次匹配&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构第三次上机代码</title>
    <url>/2019/10/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<hr/>
<center><a href="https://pengxiandyou.github.io/src/work/DataStructure/experiment3/">报告</a></center>
# 病毒检测 
<p>反正就是和比人不一样。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//堆串</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> arr[<span class="number">600</span>];</span><br><span class="line">	<span class="type">int</span> length=<span class="number">0</span>;</span><br><span class="line">&#125;HString;</span><br><span class="line"><span class="comment">//BF算法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">index_BF</span><span class="params">(HString HS<span class="comment">/*人的DNA*/</span>, HString T<span class="comment">/*病毒的DNA*/</span>, <span class="type">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i = pos;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (!(i &gt;= <span class="number">1</span> &amp;&amp; i &lt;= HS.length))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (i &lt;= HS.length&amp;&amp;j &lt;= T.length)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (T.arr[j] == HS.arr[i])</span><br><span class="line">		&#123;</span><br><span class="line">			i++; j++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			i = i - j + <span class="number">2</span>; j = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> j &gt; T.length ?  i - T.length : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检测函数</span></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">Virus_Detection</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> num<span class="comment">/*任务数*/</span>, flag<span class="comment">/*状态标志*/</span>;</span><br><span class="line">	<span class="type">int</span> f = <span class="number">0</span>,t = <span class="number">0</span>;<span class="comment">//个数</span></span><br><span class="line">	HString *HS = <span class="keyword">new</span> HString;</span><br><span class="line">	HString *T = <span class="keyword">new</span> HString;</span><br><span class="line">	ifstream inFile;<span class="comment">//对象</span></span><br><span class="line">	ofstream outFile;</span><br><span class="line">	inFile.<span class="built_in">open</span>(<span class="string">&quot;待检测.txt&quot;</span>);</span><br><span class="line">	outFile.<span class="built_in">open</span>(<span class="string">&quot;已检测.txt&quot;</span>);</span><br><span class="line">	inFile &gt;&gt; num;</span><br><span class="line">	<span class="type">int</span> temp_num = num;</span><br><span class="line">	HString* temp= <span class="keyword">new</span> HString;</span><br><span class="line">	<span class="keyword">while</span> (num--)</span><br><span class="line">	&#123;</span><br><span class="line">		inFile &gt;&gt; (*T).arr + <span class="number">1</span>;</span><br><span class="line">		(*T).length = <span class="built_in">strlen</span>(T-&gt;arr + <span class="number">1</span>);</span><br><span class="line">		inFile &gt;&gt; (*HS).arr + <span class="number">1</span>;</span><br><span class="line">		(*HS).length = <span class="built_in">strlen</span>(HS-&gt;arr + <span class="number">1</span>);</span><br><span class="line">		<span class="type">int</span> Len=(*temp).length = (*T).length;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= Len; i++)<span class="comment">//病毒环状要比多次</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>, j=i; k&lt;= Len; k++,j++)<span class="comment">//从环状病毒取病毒</span></span><br><span class="line">			&#123;</span><br><span class="line">				(*temp).arr[k] = (*T).arr[(j<span class="number">-1</span>)% Len +<span class="number">1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">			(*temp).arr[Len + <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//不加的话，文件里会出现未初始化而显示的屯</span></span><br><span class="line">			flag = <span class="built_in">index_BF</span>(*HS, *temp, <span class="number">1</span>);</span><br><span class="line">			<span class="keyword">if</span> (flag)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag)</span><br><span class="line">		&#123;</span><br><span class="line">			t++;</span><br><span class="line">			outFile &lt;&lt; (*T).arr + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (*HS).arr + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;是&quot;</span> &lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;携带病毒：&quot;</span>&lt;&lt; (*temp).arr+<span class="number">1</span>&lt;&lt;<span class="string">&quot; 位置：&quot;</span>&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			f++;</span><br><span class="line">			outFile &lt;&lt; (*T).arr + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (*HS).arr + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;否&quot;</span> &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	outFile &lt;&lt; <span class="string">&quot;共&quot;</span>&lt;&lt; temp_num &lt;&lt;<span class="string">&quot;人，其中感染&quot;</span> &lt;&lt; t &lt;&lt; <span class="string">&quot;人，未感染&quot;</span> &lt;&lt;f &lt;&lt;<span class="string">&quot;人&quot;</span> &lt;&lt; endl;</span><br><span class="line">	inFile.<span class="built_in">close</span>();</span><br><span class="line">	outFile.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">Virus_Detection</span>();</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;已进行检测\n请输入要调用的功能编号 可使用ctrl+c结束或其它&quot;</span></span><br><span class="line">		<span class="string">&quot;\n1 记事本打开已检测.txt\n&quot;</span></span><br><span class="line">		<span class="string">&quot;2 记事本打开待检测.txt\n&quot;</span></span><br><span class="line">		<span class="string">&quot;3 cmd输出已检测.txt\n&quot;</span></span><br><span class="line">		<span class="string">&quot;4 cmd输出待检测.txt\n&quot;</span></span><br><span class="line">		<span class="string">&quot;5 打开当前文件夹\n&quot;</span>);</span><br><span class="line">	<span class="type">char</span> ch = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">srand</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; ch;</span><br><span class="line">		<span class="keyword">switch</span> (ch)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:<span class="built_in">system</span>(<span class="string">&quot;已检测.txt&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:<span class="built_in">system</span>(<span class="string">&quot;待检测.txt&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:<span class="built_in">system</span>(<span class="string">&quot;type 已检测.txt&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:<span class="built_in">system</span>(<span class="string">&quot;type 待检测.txt&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:<span class="built_in">rand</span>()%<span class="number">2</span>==<span class="number">0</span>? <span class="built_in">system</span>(<span class="string">&quot;explorer .&quot;</span>): <span class="built_in">system</span>(<span class="string">&quot;start .&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="二叉树"><a class="markdownIt-Anchor" href="#二叉树"></a> 二叉树</h1>
<p>功能不够</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR -1</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> DataType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">TreeNode</span></span><br><span class="line">&#123;</span><br><span class="line">	DataType elem;</span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">TreeNode</span>* rchild;</span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">TreeNode</span>* lchild;</span><br><span class="line">&#125;TreeNode, *PTREE;</span><br><span class="line"><span class="comment">//先序创建</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreatTree</span><span class="params">(PTREE *Root)</span> </span>&#123;</span><br><span class="line">	<span class="type">char</span> val = <span class="number">0</span>;<span class="comment">//用于下面存放数据</span></span><br><span class="line">	val = <span class="built_in">getchar</span>();<span class="comment">//输入数据值</span></span><br><span class="line">	<span class="comment">//如果输入&#x27;*&#x27;，则指向为空</span></span><br><span class="line">	<span class="keyword">if</span> (val == <span class="string">&#x27;*&#x27;</span>|| val == <span class="string">&#x27;#&#x27;</span> || val == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">		(*Root) = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">//如果输入非&#x27;*&#x27;，则给数据域赋值</span></span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		(*Root) = (PTREE)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(TreeNode));<span class="comment">//申请内存空间</span></span><br><span class="line">		<span class="keyword">if</span> ((*Root) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;创建结点失败，无法分配可用内存...&quot;</span>);</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			(*Root)-&gt;elem = val;<span class="comment">//给结点数据域赋值</span></span><br><span class="line">			<span class="built_in">CreatTree</span>(&amp;(*Root)-&gt;lchild);</span><br><span class="line">			<span class="built_in">CreatTree</span>(&amp;(*Root)-&gt;rchild);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//前序遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrderTree</span><span class="params">(PTREE Root)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (Root == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">putchar</span>(Root-&gt;elem);</span><br><span class="line">		<span class="built_in">PreOrderTree</span>(Root-&gt;lchild);</span><br><span class="line">		<span class="built_in">PreOrderTree</span>(Root-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结点个数01*49**8**25**6** ABD***CE**FG*** 01*49**8**25**6*37***</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetNodeNum</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="literal">NULL</span> == Tree)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">GetNodeNum</span>(Tree-&gt;lchild) + <span class="built_in">GetNodeNum</span>(Tree-&gt;rchild) + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//叶子结点个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetLeafNum</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Tree == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (Tree-&gt;lchild == <span class="literal">NULL</span>&amp;&amp;Tree-&gt;rchild == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">GetLeafNum</span>(Tree-&gt;lchild) + <span class="built_in">GetLeafNum</span>(Tree-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//度为1结点个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetNodde1Num</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Tree == <span class="literal">NULL</span>)</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (Tree-&gt;lchild == <span class="literal">NULL</span>&amp;&amp;Tree-&gt;rchild != <span class="literal">NULL</span> || Tree-&gt;rchild == <span class="literal">NULL</span>&amp;&amp;Tree-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">GetNodde1Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde1Num</span>(Tree-&gt;rchild);</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">GetNodde1Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde1Num</span>(Tree-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//度为2结点个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetNodde2Num</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Tree == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (Tree-&gt;lchild != <span class="literal">NULL</span>&amp;&amp;Tree-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>+ <span class="built_in">GetNodde2Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde2Num</span>(Tree-&gt;rchild);</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">GetNodde2Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde2Num</span>(Tree-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	PTREE root;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入前序 *或#或.为空\t&quot;</span>);</span><br><span class="line">	<span class="built_in">CreatTree</span>(&amp;root);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;前序遍历 ：\t&quot;</span>);</span><br><span class="line">	<span class="built_in">PreOrderTree</span>(root);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;递归求所有结点 %d\n&quot;</span>, <span class="built_in">GetNodeNum</span>(root));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;等式求所有结点 %d\n&quot;</span>, <span class="built_in">GetLeafNum</span>(root)+ <span class="built_in">GetNodde2Num</span>(root) + <span class="built_in">GetNodde1Num</span>(root));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;递归求所有叶子结点 %d\n&quot;</span>, <span class="built_in">GetLeafNum</span>(root));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;性质求所有叶子结点 %d\n&quot;</span>, <span class="built_in">GetNodde2Num</span>(root)+<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;递归求所有度为1的结点 %d\n&quot;</span>, <span class="built_in">GetNodde1Num</span>(root));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;等式求所有度为1的结点 %d\n&quot;</span>, <span class="built_in">GetNodeNum</span>(root)- <span class="built_in">GetLeafNum</span>(root)- <span class="built_in">GetNodde2Num</span>(root));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;递归求所有度为2的结点 %d\n&quot;</span>, <span class="built_in">GetNodde2Num</span>(root));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;性质求所有度为2的结点 %d\n&quot;</span>, <span class="built_in">GetLeafNum</span>(root)<span class="number">-1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;总结： 根据书中的性质3和一个等式，只要有两个数据（度2和度0算一个），其他数据都可以算出\n&quot;</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构第六次上机代码</title>
    <url>/2019/12/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E5%85%AD%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<hr/>
<center><a href="https://pengxiandyou.github.io/src/work/DataStructure/experiment6/">报告</a></center>
<h1 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIST_INIT_SIZE 10 <span class="comment">//线性表储存空间初始分配量</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LISTINCREMRNT 10 <span class="comment">//线性表储存空间的分配增量</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"> <span class="comment">//线性表动态分配顺序储存结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType* elem;<span class="comment">//储存空间基址</span></span><br><span class="line">	<span class="type">int</span> length;<span class="comment">//当前长度</span></span><br><span class="line">	<span class="type">int</span> listsize;<span class="comment">//当前分配的存储容量</span></span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1初始化一个空的表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	L-&gt;elem = (ElemType*)__vcrt_malloc_normal(LIST_INIT_SIZE * <span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">	<span class="keyword">if</span> (!(L-&gt;elem))</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);<span class="comment">//分配失败</span></span><br><span class="line">	L-&gt;length = <span class="number">0</span>;<span class="comment">//长度</span></span><br><span class="line">	L-&gt;listsize = LIST_INIT_SIZE;<span class="comment">//容量</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2插入</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length + <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">	ElemType* q = &amp;(L-&gt;elem[i - <span class="number">1</span>]), *p = <span class="literal">NULL</span>;<span class="comment">// q为插入位置</span></span><br><span class="line">	<span class="keyword">for</span> (p = &amp;(L-&gt;elem[L-&gt;length - <span class="number">1</span>]); p &gt;= q; --p)</span><br><span class="line">		* (p + <span class="number">1</span>) = *p;<span class="comment">// 插入位置及之后的元素后移</span></span><br><span class="line">	*q = e;<span class="comment">// 插入e</span></span><br><span class="line">	++(L-&gt;length);<span class="comment">// 表长增加1</span></span><br><span class="line">	<span class="keyword">if</span> (L-&gt;length == L-&gt;listsize) &#123;</span><br><span class="line">		ElemType*  newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + LISTINCREMRNT) * <span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">		<span class="keyword">if</span> (!newbase)</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">		L-&gt;elem = newbase;<span class="comment">// 新基址</span></span><br><span class="line">		L-&gt;listsize += LISTINCREMRNT;<span class="comment">// 增加存储容量</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3获取长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLength</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4是否为空</span></span><br><span class="line"><span class="function"><span class="type">char</span>* <span class="title">isEmtey</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;length == <span class="number">0</span> ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//5清空</span></span><br><span class="line"><span class="function">Status <span class="title">clearList</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	__vcrt_free_normal(L-&gt;elem);</span><br><span class="line">	L-&gt;length = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6摧毁</span></span><br><span class="line"><span class="function">Status <span class="title">destryList</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	__vcrt_free_normal(L);</span><br><span class="line">	L = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//7通过索引取值</span></span><br><span class="line"><span class="function">ElemType <span class="title">getElemByIndex</span><span class="params">(SqList* L, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;elem[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8通过值取索引</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getIndexByElem</span><span class="params">(SqList* L, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; L-&gt;length; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((L-&gt;elem[j]) == e)</span><br><span class="line">			<span class="keyword">return</span> j + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//9通过索引改值</span></span><br><span class="line"><span class="function">ElemType <span class="title">changeElemByIndex</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span>  L-&gt;elem[i - <span class="number">1</span>] = e;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//11遍历表</span></span><br><span class="line"><span class="function">Status <span class="title">myPrintf</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,(L-&gt;elem[i]));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//验证增序</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">verify</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> length = <span class="built_in">getLength</span>(L);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length<span class="number">-1</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (L-&gt;elem[i]&gt;L-&gt;elem[i+<span class="number">1</span>])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//建表</span></span><br><span class="line"><span class="function">SqList* <span class="title">createSqByCin</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqList* L = (SqList*)__vcrt_malloc_normal(<span class="built_in">sizeof</span>(SqList));</span><br><span class="line">	<span class="built_in">InitList</span>(L);</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入数据：&quot;</span>;</span><br><span class="line">	ElemType elem = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; elem;</span><br><span class="line">		<span class="built_in">ListInsert</span>(L, i + <span class="number">1</span>, elem);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;建表成功: &quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">SqList* <span class="title">createSqByRandom</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqList* L = (SqList*)__vcrt_malloc_normal(<span class="built_in">sizeof</span>(SqList));</span><br><span class="line">	<span class="built_in">InitList</span>(L);</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	ElemType elem = <span class="literal">NULL</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="built_in">ListInsert</span>(L, i + <span class="number">1</span>, <span class="built_in">rand</span>()%<span class="number">100</span>+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;建表成功: &quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertSort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> length = <span class="built_in">getLength</span>(L);</span><br><span class="line">	_LARGE_INTEGER start, finish;</span><br><span class="line">	<span class="type">double</span> Freq;</span><br><span class="line">	LARGE_INTEGER f;</span><br><span class="line">	<span class="built_in">QueryPerformanceFrequency</span>(&amp;f);</span><br><span class="line">	Freq = (<span class="type">double</span>)f.QuadPart;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		ElemType temp = L-&gt;elem[i];</span><br><span class="line">		<span class="keyword">for</span> (j= i<span class="number">-1</span>; j &gt;=<span class="number">0</span>&amp;&amp;L-&gt;elem[j]&gt;temp; j--)</span><br><span class="line">		&#123;</span><br><span class="line">			L-&gt;elem[j + <span class="number">1</span>] = L-&gt;elem[j];</span><br><span class="line">		&#125;</span><br><span class="line">		L-&gt;elem[j + <span class="number">1</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;finish);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">verify</span>(L))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;排序后：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot; 共用时： &quot;</span> &lt;&lt; <span class="number">1000000</span>*(finish.QuadPart - start.QuadPart)/Freq &lt;&lt;<span class="string">&quot; 微秒&quot;</span> &lt;&lt;endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">destryList</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//希尔排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShellInsert</span><span class="params">(SqList* L,<span class="type">int</span> dk)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> length = <span class="built_in">getLength</span>(L);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = dk; i &lt; length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		j = i - dk;</span><br><span class="line">		ElemType temp = L-&gt;elem[i];</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">while</span> ( j &gt;= <span class="number">0</span> &amp;&amp; L-&gt;elem[j]&gt;temp)</span><br><span class="line">			&#123;</span><br><span class="line">				L-&gt;elem[j + dk] = L-&gt;elem[j];</span><br><span class="line">				j -= dk;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (j!=i-dk)</span><br><span class="line">			&#123;</span><br><span class="line">				L-&gt;elem[j + dk] = temp;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShellSort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> dk = <span class="built_in">getLength</span>(L)/<span class="number">2</span>;</span><br><span class="line">	_LARGE_INTEGER start, finish;</span><br><span class="line">	<span class="type">double</span> Freq;</span><br><span class="line">	LARGE_INTEGER f;</span><br><span class="line">	<span class="built_in">QueryPerformanceFrequency</span>(&amp;f);</span><br><span class="line">	Freq = (<span class="type">double</span>)f.QuadPart;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line">	<span class="keyword">while</span> ( dk&gt;=<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">ShellInsert</span>(L, dk);</span><br><span class="line">		dk = dk / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;finish);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">verify</span>(L))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;排序后：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot; 共用时： &quot;</span> &lt;&lt; <span class="number">1000000</span> * (finish.QuadPart - start.QuadPart) / Freq &lt;&lt; <span class="string">&quot; 微秒&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">destryList</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> length = <span class="built_in">getLength</span>(L);</span><br><span class="line">	<span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">	_LARGE_INTEGER start, finish;</span><br><span class="line">	<span class="type">double</span> Freq;</span><br><span class="line">	LARGE_INTEGER f;</span><br><span class="line">	<span class="built_in">QueryPerformanceFrequency</span>(&amp;f);</span><br><span class="line">	Freq = (<span class="type">double</span>)f.QuadPart;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length&amp;&amp;flag==<span class="number">1</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		flag = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length-i<span class="number">-1</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (L-&gt;elem[j]&gt;L-&gt;elem[j+<span class="number">1</span>])<span class="comment">//不会异或相同数</span></span><br><span class="line">			&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				L-&gt;elem[j + <span class="number">1</span>] = L-&gt;elem[j] ^ L-&gt;elem[j + <span class="number">1</span>];</span><br><span class="line">				L-&gt;elem[j] = L-&gt;elem[j] ^ L-&gt;elem[j + <span class="number">1</span>];</span><br><span class="line">				L-&gt;elem[j + <span class="number">1</span>] = L-&gt;elem[j] ^ L-&gt;elem[j + <span class="number">1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;finish);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">verify</span>(L))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;排序后：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot; 共用时： &quot;</span> &lt;&lt; <span class="number">1000000</span> * (finish.QuadPart - start.QuadPart) / Freq &lt;&lt; <span class="string">&quot; 微秒&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">destryList</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Partition</span><span class="params">(SqList* L, <span class="type">int</span> low, <span class="type">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ElemType pivotkey = L-&gt;elem[low];</span><br><span class="line">	<span class="keyword">while</span> (low&lt;high)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (low&lt;high&amp;&amp;L-&gt;elem[high]&gt;=pivotkey)</span><br><span class="line">		&#123;</span><br><span class="line">			high--;</span><br><span class="line">		&#125;</span><br><span class="line">		L-&gt;elem[low] = L-&gt;elem[high];</span><br><span class="line">		<span class="keyword">while</span> (low&lt;high&amp;&amp;L-&gt;elem[low]&lt;=pivotkey)</span><br><span class="line">		&#123;</span><br><span class="line">			low++;</span><br><span class="line">		&#125;</span><br><span class="line">		L-&gt;elem[high] = L-&gt;elem[low];</span><br><span class="line">	&#125;</span><br><span class="line">	L-&gt;elem[low] = pivotkey;</span><br><span class="line">	<span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">QSort</span><span class="params">(SqList* L, <span class="type">int</span> low, <span class="type">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (low &lt; high)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> pivotloc = <span class="built_in">Partition</span>(L, low, high);</span><br><span class="line">		<span class="built_in">QSort</span>(L, low, pivotloc - <span class="number">1</span>);</span><br><span class="line">		<span class="built_in">QSort</span>(L, pivotloc + <span class="number">1</span>, high);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">QuickSort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> length = <span class="built_in">getLength</span>(L);</span><br><span class="line">	_LARGE_INTEGER start, finish;</span><br><span class="line">	<span class="type">double</span> Freq;</span><br><span class="line">	LARGE_INTEGER f;</span><br><span class="line">	<span class="built_in">QueryPerformanceFrequency</span>(&amp;f);</span><br><span class="line">	Freq = (<span class="type">double</span>)f.QuadPart;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line">	<span class="built_in">QSort</span>(L, <span class="number">0</span>, length<span class="number">-1</span>);</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;finish);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">verify</span>(L))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;排序后：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot; 共用时： &quot;</span> &lt;&lt; <span class="number">1000000</span> * (finish.QuadPart - start.QuadPart) / Freq &lt;&lt; <span class="string">&quot; 微秒&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">destryList</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//简单选择排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SelectSort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> length = <span class="built_in">getLength</span>(L)<span class="number">-1</span>;</span><br><span class="line">	_LARGE_INTEGER start, finish;</span><br><span class="line">	<span class="type">double</span> Freq;</span><br><span class="line">	LARGE_INTEGER f;</span><br><span class="line">	<span class="built_in">QueryPerformanceFrequency</span>(&amp;f);</span><br><span class="line">	Freq = (<span class="type">double</span>)f.QuadPart;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> index = i;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span>  j = i+<span class="number">1</span>; j &lt;= length; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (L-&gt;elem[j] &lt; L-&gt;elem[index])</span><br><span class="line">			&#123;</span><br><span class="line">				index = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (L-&gt;elem[index]!= L-&gt;elem[i])<span class="comment">//不会异或相同数 index !=i应该不需要了</span></span><br><span class="line">		&#123;</span><br><span class="line">			L-&gt;elem[index] = L-&gt;elem[index] ^ L-&gt;elem[i];</span><br><span class="line">			L-&gt;elem[i] = L-&gt;elem[index] ^ L-&gt;elem[i];</span><br><span class="line">			L-&gt;elem[index] = L-&gt;elem[index] ^ L-&gt;elem[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;finish);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">verify</span>(L))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;排序后：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot; 共用时： &quot;</span> &lt;&lt; <span class="number">1000000</span> * (finish.QuadPart - start.QuadPart) / Freq &lt;&lt; <span class="string">&quot; 微秒&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">destryList</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//堆排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">heapify</span><span class="params">(ElemType elem[], <span class="type">int</span> i<span class="comment">/*第i个*/</span>, <span class="type">int</span> n<span class="comment">/*共n个*/</span>)</span></span></span><br><span class="line"><span class="function"><span class="comment">//提示：假设第i+1后面已经是堆，调整第i个</span></span></span><br><span class="line"><span class="function"></span>&#123;	<span class="comment">//递归出口隐含在if里所以可以不写</span></span><br><span class="line">	<span class="comment">/*if (n&lt;=i)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		return;</span></span><br><span class="line"><span class="comment">	&#125;*/</span></span><br><span class="line">	<span class="type">int</span> c1 = <span class="number">2</span> * i + <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> c2 = <span class="number">2</span> * i + <span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> max = i;</span><br><span class="line">	<span class="keyword">if</span> (c1&lt;n&amp;&amp;elem[c1]&gt;elem[max])</span><br><span class="line">		max = c1;</span><br><span class="line">	<span class="keyword">if</span> (c2&lt;n&amp;&amp;elem[c2]&gt;elem[max])</span><br><span class="line">		max = c2;</span><br><span class="line">	<span class="keyword">if</span> (max != i)</span><br><span class="line">	&#123;<span class="comment">//三个if保证elem[i]!=elem[max]</span></span><br><span class="line">		elem[i] = elem[i] ^ elem[max];</span><br><span class="line">		elem[max] = elem[i] ^ elem[max];</span><br><span class="line">		elem[i] = elem[i] ^ elem[max];</span><br><span class="line">		<span class="built_in">heapify</span>(elem, max, n);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreatHeap</span><span class="params">(SqList* L,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"><span class="comment">//提示：从最后非叶结点开始heapify建初堆</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> lost_node = (n - <span class="number">1</span>) ;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (lost_node<span class="number">-1</span>)/<span class="number">2</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">heapify</span>(L-&gt;elem, i, n);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;创建的初堆：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HeapSort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="built_in">getLength</span>(L);</span><br><span class="line">	_LARGE_INTEGER start, finish;</span><br><span class="line">	<span class="type">double</span> Freq;</span><br><span class="line">	LARGE_INTEGER f;</span><br><span class="line">	<span class="built_in">QueryPerformanceFrequency</span>(&amp;f);</span><br><span class="line">	Freq = (<span class="type">double</span>)f.QuadPart;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line">	<span class="built_in">CreatHeap</span>(L,n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (L-&gt;elem[<span class="number">0</span>]!=L-&gt;elem[i])</span><br><span class="line">		&#123;</span><br><span class="line">			L-&gt;elem[i] = L-&gt;elem[i] ^ L-&gt;elem[<span class="number">0</span>];</span><br><span class="line">			L-&gt;elem[<span class="number">0</span>] = L-&gt;elem[i] ^ L-&gt;elem[<span class="number">0</span>];</span><br><span class="line">			L-&gt;elem[i] = L-&gt;elem[i] ^ L-&gt;elem[<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">heapify</span>(L-&gt;elem, <span class="number">0</span>, i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;finish);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">verify</span>(L))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;排序后：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot; 共用时： &quot;</span> &lt;&lt; <span class="number">1000000</span> * (finish.QuadPart - start.QuadPart) / Freq &lt;&lt; <span class="string">&quot; 微秒&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">destryList</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//归并排序(从上往下)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge</span><span class="params">(ElemType elem[], <span class="type">int</span> start, <span class="type">int</span> mid, <span class="type">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ElemType *tmp = (ElemType *)<span class="built_in">malloc</span>((end - start + <span class="number">1</span>) * <span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">	<span class="type">int</span> i = start;<span class="comment">// 第1个有序区的索引</span></span><br><span class="line">	<span class="type">int</span> j = mid + <span class="number">1</span>;<span class="comment">// 第2个有序区的索引</span></span><br><span class="line">	<span class="type">int</span> k = <span class="number">0</span>;<span class="comment">// 临时区域的索引</span></span><br><span class="line">	<span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= end)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ( elem[i] &lt;= elem[j])</span><br><span class="line">			tmp[k++] = elem[i++];</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			tmp[k++] = elem[j++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (i &lt;= mid)</span><br><span class="line">		tmp[k++] = elem[i++];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (j &lt;= end)</span><br><span class="line">		tmp[k++] = elem[j++];</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">		 elem[start + i] = tmp[i];</span><br><span class="line">	<span class="built_in">free</span>(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort_up2down</span><span class="params">(ElemType elem[], <span class="type">int</span> start, <span class="type">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (elem == <span class="literal">NULL</span> || start &gt;= end)</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> mid = (end + start) / <span class="number">2</span>;</span><br><span class="line">	<span class="built_in">merge_sort_up2down</span>(elem, start, mid); <span class="comment">// 递归排序 elem[start...mid]</span></span><br><span class="line">	<span class="built_in">merge_sort_up2down</span>(elem, mid + <span class="number">1</span>, end); <span class="comment">// 递归排序 elem[mid+1...end]</span></span><br><span class="line">	<span class="built_in">Merge</span>(elem, start, mid, end);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MergeSort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> end = <span class="built_in">getLength</span>(L) - <span class="number">1</span>;</span><br><span class="line">	_LARGE_INTEGER start, finish;</span><br><span class="line">	<span class="type">double</span> Freq;</span><br><span class="line">	LARGE_INTEGER f;</span><br><span class="line">	<span class="built_in">QueryPerformanceFrequency</span>(&amp;f);</span><br><span class="line">	Freq = (<span class="type">double</span>)f.QuadPart;</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line">	<span class="built_in">merge_sort_up2down</span>(L-&gt;elem, <span class="number">0</span>, end);</span><br><span class="line">	<span class="built_in">QueryPerformanceCounter</span>(&amp;finish);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">verify</span>(L))</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;排序后：&quot;</span>;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot; 共用时： &quot;</span> &lt;&lt; <span class="number">1000000</span> * (finish.QuadPart - start.QuadPart) / Freq &lt;&lt; <span class="string">&quot; 微秒&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">destryList</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//模式一</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mode1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqList* Sq = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">char</span> ch = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;进入模式一\n&quot;</span></span><br><span class="line">		<span class="string">&quot;1.插入排序\n&quot;</span></span><br><span class="line">		<span class="string">&quot;2.希尔排序\n&quot;</span></span><br><span class="line">		<span class="string">&quot;3.冒泡排序\n&quot;</span></span><br><span class="line">		<span class="string">&quot;4.快速排序\n&quot;</span></span><br><span class="line">		<span class="string">&quot;5.选择排序\n&quot;</span></span><br><span class="line">		<span class="string">&quot;6.堆排序\n&quot;</span></span><br><span class="line">		<span class="string">&quot;7.归并排序\n&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; ch;</span><br><span class="line">		<span class="keyword">switch</span> (ch)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;1&#x27;</span>:cout &lt;&lt; <span class="string">&quot;1、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByCin</span>(); <span class="built_in">InsertSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;2&#x27;</span>:cout &lt;&lt; <span class="string">&quot;2、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByCin</span>(); <span class="built_in">ShellSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;3&#x27;</span>:cout &lt;&lt; <span class="string">&quot;3、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByCin</span>(); <span class="built_in">BubbleSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;4&#x27;</span>:cout &lt;&lt; <span class="string">&quot;4、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByCin</span>(); <span class="built_in">QuickSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;5&#x27;</span>:cout &lt;&lt; <span class="string">&quot;5、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByCin</span>(); <span class="built_in">SelectSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;6&#x27;</span>:cout &lt;&lt; <span class="string">&quot;6、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByCin</span>(); <span class="built_in">HeapSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;7&#x27;</span>:cout &lt;&lt; <span class="string">&quot;7、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByCin</span>(); <span class="built_in">MergeSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:<span class="keyword">return</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//模式二</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mode2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqList* Sq = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">char</span> ch = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;进入模式二\n&quot;</span></span><br><span class="line">	<span class="string">&quot;1.插入排序\n&quot;</span></span><br><span class="line">	<span class="string">&quot;2.希尔排序\n&quot;</span></span><br><span class="line">	<span class="string">&quot;3.冒泡排序\n&quot;</span></span><br><span class="line">	<span class="string">&quot;4.快速排序\n&quot;</span></span><br><span class="line">	<span class="string">&quot;5.选择排序\n&quot;</span></span><br><span class="line">	<span class="string">&quot;6.堆排序\n&quot;</span></span><br><span class="line">	<span class="string">&quot;7.归并排序\n&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; ch;</span><br><span class="line">		<span class="keyword">switch</span> (ch)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;1&#x27;</span>:cout &lt;&lt; <span class="string">&quot;1、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByRandom</span>(); <span class="built_in">InsertSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;2&#x27;</span>:cout &lt;&lt; <span class="string">&quot;2、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByRandom</span>(); <span class="built_in">ShellSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;3&#x27;</span>:cout &lt;&lt; <span class="string">&quot;3、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByRandom</span>(); <span class="built_in">BubbleSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;4&#x27;</span>:cout &lt;&lt; <span class="string">&quot;4、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByRandom</span>(); <span class="built_in">QuickSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;5&#x27;</span>:cout &lt;&lt; <span class="string">&quot;5、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByRandom</span>(); <span class="built_in">SelectSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;6&#x27;</span>:cout &lt;&lt; <span class="string">&quot;6、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByRandom</span>(); <span class="built_in">HeapSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;7&#x27;</span>:cout &lt;&lt; <span class="string">&quot;7、输入个数：&quot;</span>; Sq = <span class="built_in">createSqByRandom</span>(); <span class="built_in">MergeSort</span>(Sq); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:<span class="keyword">return</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">	SqList* Sq = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">char</span> ch = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;选择模式：\n1.：输入模式\n2.：随机模式\n&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; ch;</span><br><span class="line">		<span class="keyword">switch</span> (ch)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:<span class="built_in">Mode1</span>(); <span class="keyword">break</span>;</span><br><span class="line">			</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:<span class="built_in">Mode2</span>(); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构第五次上机代码</title>
    <url>/2019/11/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%BA%94%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<hr/>
<center><a href="https://pengxiandyou.github.io/src/work/DataStructure/experiment5/">报告</a></center>
<h1 id="线性查找"><a class="markdownIt-Anchor" href="#线性查找"></a> 线性查找</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIST_INIT_SIZE 10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LISTINCREMRNT 10 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; </span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType* elem;<span class="comment">//储存空间基址</span></span><br><span class="line">	<span class="type">int</span> length;<span class="comment">//当前长度</span></span><br><span class="line">	<span class="type">int</span> listsize;<span class="comment">//当前分配的存储容量</span></span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化一个空的表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L-&gt;elem = (ElemType*)__vcrt_malloc_normal(LIST_INIT_SIZE * <span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">	<span class="keyword">if</span> (!(L-&gt;elem))</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);<span class="comment">//分配失败</span></span><br><span class="line">	L-&gt;length = <span class="number">0</span>;<span class="comment">//长度</span></span><br><span class="line">	L-&gt;listsize = LIST_INIT_SIZE;<span class="comment">//容量</span></span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length + <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	ElemType* q = &amp;(L-&gt;elem[i - <span class="number">1</span>]), *p = <span class="literal">NULL</span>;<span class="comment">// q为插入位置</span></span><br><span class="line">	<span class="keyword">for</span> (p = &amp;(L-&gt;elem[L-&gt;length - <span class="number">1</span>]); p &gt;= q; --p)</span><br><span class="line">		* (p + <span class="number">1</span>) = *p;<span class="comment">// 插入位置及之后的元素后移</span></span><br><span class="line">	*q = e;<span class="comment">// 插入e</span></span><br><span class="line">	++(L-&gt;length);<span class="comment">// 表长增加1</span></span><br><span class="line">	<span class="keyword">if</span> (L-&gt;length == L-&gt;listsize) &#123;</span><br><span class="line">		ElemType*  newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + LISTINCREMRNT) * <span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">		<span class="keyword">if</span> (!newbase)</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">		L-&gt;elem = newbase;<span class="comment">// 新基址</span></span><br><span class="line">		L-&gt;listsize += LISTINCREMRNT;<span class="comment">// 增加存储容量</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历表</span></span><br><span class="line"><span class="function">Status <span class="title">myPrintf</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个值------------&quot;</span> &lt;&lt; (L-&gt;elem[i]) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//顺序查找</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Search_SS</span><span class="params">(SqList* L,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i =<span class="number">0</span> ; i&lt;L-&gt;length ; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (L-&gt;elem[i]==e)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> i + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//顺序查找所有</span></span><br><span class="line"><span class="function">Status <span class="title">Search_SS_ALL</span><span class="params">(SqList* L, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;L-&gt;length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (L-&gt;elem[i] == e)</span><br><span class="line">		&#123;</span><br><span class="line">			k++;</span><br><span class="line">			cout &lt;&lt; i+<span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (k == <span class="number">0</span>)cout &lt;&lt; <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//折半查找</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Search_Bin</span><span class="params">(SqList* L, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> low = <span class="number">0</span>, high = L-&gt;length - <span class="number">1</span>,mid=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(low&lt;=high)</span><br><span class="line">	&#123;</span><br><span class="line">		mid = (<span class="type">int</span>)<span class="built_in">floor</span>(low*<span class="number">0.5</span> + high*<span class="number">0.5</span>);</span><br><span class="line">		<span class="keyword">if</span> (L-&gt;elem[mid]==e)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> mid + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (L-&gt;elem[mid]&gt;e)</span><br><span class="line">		&#123;</span><br><span class="line">			high = mid - <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			low = mid + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//分块查找</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Search_BS</span><span class="params">(SqList* L, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> high = L-&gt;length<span class="number">-1</span>, low = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> mid = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> n = L-&gt;length;</span><br><span class="line">	<span class="type">int</span> k = (<span class="type">int</span>)<span class="built_in">sqrt</span>(L-&gt;length);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (e==L-&gt;elem[<span class="number">0</span>+i*k])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span> + i*k + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (e&gt;L-&gt;elem[<span class="number">0</span>+i*k])</span><br><span class="line">		&#123;</span><br><span class="line">			low = <span class="number">0</span> + i*k;</span><br><span class="line">			high = <span class="number">0</span> + (i + <span class="number">1</span>)*k - <span class="number">1</span> &gt; L-&gt;length - <span class="number">1</span> ? L-&gt;length - <span class="number">1</span> : <span class="number">0</span> + (i + <span class="number">1</span>)*k - <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (low &lt;= high)</span><br><span class="line">	&#123;</span><br><span class="line">		mid = (<span class="type">int</span>)<span class="built_in">floor</span>(low*<span class="number">0.5</span> + high*<span class="number">0.5</span>);</span><br><span class="line">		<span class="keyword">if</span> (L-&gt;elem[mid] == e)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> mid + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (L-&gt;elem[mid]&gt;e)</span><br><span class="line">		&#123;</span><br><span class="line">			high = mid - <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			low = mid + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空缓冲区的一行</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myclear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin.<span class="built_in">clear</span>();</span><br><span class="line">	cin.<span class="built_in">ignore</span>(numeric_limits&lt;std::streamsize&gt;::<span class="built_in">max</span>(), <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="function">Status <span class="title">mysort</span><span class="params">(SqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; L-&gt;length-i<span class="number">-1</span>; k++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (L-&gt;elem[k] &gt; L-&gt;elem[k + <span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				L-&gt;elem[k] = L-&gt;elem[k]^L-&gt;elem[k+<span class="number">1</span>];</span><br><span class="line">				L-&gt;elem[k + <span class="number">1</span>] = L-&gt;elem[k] ^ L-&gt;elem[k + <span class="number">1</span>];</span><br><span class="line">				L-&gt;elem[k] = L-&gt;elem[k] ^ L-&gt;elem[k + <span class="number">1</span>];;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqList* L = (SqList*)__vcrt_malloc_normal(<span class="built_in">sizeof</span>(SqList));</span><br><span class="line">	<span class="built_in">InitList</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入插入个数&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="built_in">myclear</span>();</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入元素&quot;</span> &lt;&lt; endl;</span><br><span class="line">	ElemType e = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; e;</span><br><span class="line">		<span class="built_in">ListInsert</span>(L, i+<span class="number">1</span>, e);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">myclear</span>();</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入结果为:&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">myPrintf</span>(L);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入查找元素&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cin &gt;&gt; e;</span><br><span class="line">	<span class="built_in">myclear</span>();</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;顺序查找到元素位置 &quot;</span> &lt;&lt; <span class="built_in">Search_SS</span>(L, e)&lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;顺序查找到元素位置有 &quot;</span>; <span class="built_in">Search_SS_ALL</span>(L, e);</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入查找元素&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cin &gt;&gt; e;</span><br><span class="line">	<span class="built_in">myclear</span>();</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;顺序查找到元素位置 &quot;</span> &lt;&lt; <span class="built_in">Search_SS</span>(L, e) &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;顺序查找到元素位置有 &quot;</span>; <span class="built_in">Search_SS_ALL</span>(L, e);</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;折半查找需有序,排序后:&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">mysort</span>(L);</span><br><span class="line">	<span class="built_in">myPrintf</span>(L); </span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入查找元素&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cin &gt;&gt; e;</span><br><span class="line">	<span class="built_in">myclear</span>();</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;折半查找到元素位置 &quot;</span> &lt;&lt; <span class="built_in">Search_Bin</span>(L, e) &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;分块查找到元素位置 &quot;</span> &lt;&lt; <span class="built_in">Search_BS</span>(L, e) &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入查找元素&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cin &gt;&gt; e;</span><br><span class="line">	<span class="built_in">myclear</span>();</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;折半查找到元素位置 &quot;</span> &lt;&lt; <span class="built_in">Search_Bin</span>(L, e) &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;分块查找到元素位置 &quot;</span> &lt;&lt; <span class="built_in">Search_BS</span>(L, e) &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="二叉排序树"><a class="markdownIt-Anchor" href="#二叉排序树"></a> 二叉排序树</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> DataType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BST_Node</span> &#123;</span><br><span class="line">	DataType data;</span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">BST_Node</span> *lchild, *rchild;</span><br><span class="line">&#125;BST_T, *BST_P;</span><br><span class="line"><span class="comment">/*//插入</span></span><br><span class="line"><span class="comment">void InsertBST(BST_T *T, DataType data)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">	if (!T)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		BST_P S = new BST_Node;</span></span><br><span class="line"><span class="comment">		S-&gt;data = data;</span></span><br><span class="line"><span class="comment">		S-&gt;lchild = S-&gt;rchild = NULL;</span></span><br><span class="line"><span class="comment">		T = S;</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	else if (data&lt;T-&gt;data)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		InsertBST(T-&gt;lchild, data);</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	else if (data&gt;T-&gt;data)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		InsertBST(T-&gt;rchild, data);</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line"><span class="function">BST_P <span class="title">Search_BST</span><span class="params">(BST_P root, DataType key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">if</span> (key &gt; root-&gt;data) <span class="comment">//查找右子树  </span></span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">Search_BST</span>(root-&gt;rchild, key);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (key &lt; root-&gt;data) <span class="comment">//查找左子树  </span></span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">Search_BST</span>(root-&gt;lchild, key);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Insert_BST</span><span class="params">(BST_P *root, DataType data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//初始化插入节点</span></span><br><span class="line">	BST_P p = (BST_P)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> BST_Node));</span><br><span class="line">	<span class="keyword">if</span> (!p) <span class="keyword">return</span>;</span><br><span class="line">	p-&gt;data = data;</span><br><span class="line">	p-&gt;lchild = p-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">//空树时，直接作为根节点</span></span><br><span class="line">	<span class="keyword">if</span> (*root == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		*root = p;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//是否存在，已存在则返回，不插入</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">Search_BST</span>(*root, data) != <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">	<span class="comment">//进行插入，首先找到要插入的位置的父节点</span></span><br><span class="line">	BST_P tnode = <span class="literal">NULL</span>, troot = *root;</span><br><span class="line">	<span class="keyword">while</span> (troot)</span><br><span class="line">	&#123;</span><br><span class="line">		tnode = troot;</span><br><span class="line">		troot = (data &lt; troot-&gt;data) ? troot-&gt;lchild : troot-&gt;rchild;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (data &lt; tnode-&gt;data)</span><br><span class="line">		tnode-&gt;lchild = p;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		tnode-&gt;rchild = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateBST</span><span class="params">(BST_P *T, <span class="type">int</span> a[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">Insert_BST</span>(T, a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中序遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MidOrderTraverse</span><span class="params">(BST_P T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (T)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">MidOrderTraverse</span>(T-&gt;lchild);</span><br><span class="line">		cout &lt;&lt; T-&gt;data &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		<span class="built_in">MidOrderTraverse</span>(T-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> arr[] = &#123; <span class="number">17</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">25</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">22</span> &#125;;</span><br><span class="line">	BST_P root = <span class="literal">NULL</span>;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;数据为: &quot;</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">		cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">CreateBST</span>(&amp;root, arr, <span class="number">12</span>);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;创建后中序遍历: &quot;</span>;</span><br><span class="line">	<span class="built_in">MidOrderTraverse</span>(root);</span><br><span class="line">	<span class="type">int</span> data = <span class="number">0</span>;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\n输入查找元素: &quot;</span>;</span><br><span class="line">	cin &gt;&gt; data;</span><br><span class="line">	BST_P result = <span class="built_in">Search_BST</span>(root, data);</span><br><span class="line">	<span class="keyword">if</span> (result)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;数据为: &quot;</span> &lt;&lt; result-&gt;data &lt;&lt; <span class="string">&quot;地址为: &quot;</span> &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;未查询到,插入后遍历:&quot;</span> ;</span><br><span class="line">		<span class="built_in">Insert_BST</span>(&amp;root, data);</span><br><span class="line">		<span class="built_in">MidOrderTraverse</span>(root);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\n输入查找元素: &quot;</span>;</span><br><span class="line">	cin &gt;&gt; data;</span><br><span class="line">	 result = <span class="built_in">Search_BST</span>(root, data);</span><br><span class="line">	<span class="keyword">if</span> (result)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;数据为: &quot;</span> &lt;&lt; result-&gt;data &lt;&lt; <span class="string">&quot;地址为: &quot;</span> &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;未查询到,插入后遍历:&quot;</span> ;</span><br><span class="line">		<span class="built_in">Insert_BST</span>(&amp;root, data);</span><br><span class="line">		<span class="built_in">MidOrderTraverse</span>(root);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="哈希查找"><a class="markdownIt-Anchor" href="#哈希查找"></a> 哈希查找</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUCCESS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UNSUCCESS 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HASHSIZE 12  <span class="comment">//定义哈希表长为数组的长度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NULLKEY -32768</span></span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> *elem;  <span class="comment">//数据元素存储的基址，动态分配数组</span></span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">&#125;HashTable;</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function">Status <span class="title">InitHashTable</span><span class="params">(HashTable *H)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	m = HASHSIZE;</span><br><span class="line">	H-&gt;count = m;</span><br><span class="line">	H-&gt;elem = (<span class="type">int</span> *)<span class="built_in">malloc</span>(m * <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">		H-&gt;elem[i] = NULLKEY;</span><br><span class="line">	<span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//hash函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Hash</span><span class="params">(<span class="type">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> key % m; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertHash_1</span><span class="params">(HashTable *H, <span class="type">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> addr = <span class="built_in">Hash</span>(key); </span><br><span class="line">	<span class="keyword">while</span> (H-&gt;elem[addr] != NULLKEY) </span><br><span class="line">		addr = (addr + <span class="number">1</span>) % m;</span><br><span class="line">	H-&gt;elem[addr] = key;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertHash_2</span><span class="params">(HashTable *H, <span class="type">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> k = <span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> addr = <span class="built_in">Hash</span>(key);</span><br><span class="line">	<span class="keyword">while</span> (H-&gt;elem[addr] != NULLKEY)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			addr = (addr + (<span class="type">int</span>)<span class="built_in">pow</span>((<span class="type">int</span>)(k/<span class="number">2</span>),<span class="number">2</span>)) % m;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			addr = (addr - (<span class="type">int</span>)<span class="built_in">pow</span>((<span class="type">int</span>)(k / <span class="number">2</span>), <span class="number">2</span>)) % m;</span><br><span class="line">		&#125;</span><br><span class="line">		++i;</span><br><span class="line">		++k;</span><br><span class="line">	&#125;</span><br><span class="line">	H-&gt;elem[addr] = key;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line"><span class="function">Status <span class="title">SearchHash_1</span><span class="params">(HashTable H, <span class="type">int</span> key, <span class="type">int</span> *addr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	*addr = <span class="built_in">Hash</span>(key);  </span><br><span class="line">	<span class="keyword">while</span> (H.elem[*addr] != key) </span><br><span class="line">	&#123;</span><br><span class="line">		*addr = (*addr + <span class="number">1</span>) % m;  </span><br><span class="line">		<span class="keyword">if</span> (H.elem[*addr] == NULLKEY || *addr == <span class="built_in">Hash</span>(key))</span><br><span class="line">			<span class="keyword">return</span> UNSUCCESS;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line"><span class="function">Status <span class="title">SearchHash_2</span><span class="params">(HashTable H, <span class="type">int</span> key, <span class="type">int</span> *addr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> k = <span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	*addr = <span class="built_in">Hash</span>(key);</span><br><span class="line">	<span class="keyword">while</span> (H.elem[*addr] != key)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			*addr = (*addr + (<span class="type">int</span>)<span class="built_in">pow</span>((<span class="type">int</span>)(k / <span class="number">2</span>), <span class="number">2</span>)) % m;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			*addr = (*addr - (<span class="type">int</span>)<span class="built_in">pow</span>((<span class="type">int</span>)(k / <span class="number">2</span>), <span class="number">2</span>)) % m;</span><br><span class="line">			<span class="keyword">if</span> (*addr&lt;<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				*addr = <span class="built_in">abs</span>(*addr);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		++i;</span><br><span class="line">		++k;</span><br><span class="line">		<span class="keyword">if</span> (H.elem[*addr] == NULLKEY || *addr == <span class="built_in">Hash</span>(key))</span><br><span class="line">			<span class="keyword">return</span> UNSUCCESS;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*</span></span><br><span class="line"><span class="comment">	HashTable H;</span></span><br><span class="line"><span class="comment">	HashTable HH;</span></span><br><span class="line"><span class="comment">	int key=0;</span></span><br><span class="line"><span class="comment">	int addr = 0;</span></span><br><span class="line"><span class="comment">	InitHashTable(&amp;H);</span></span><br><span class="line"><span class="comment">	InitHashTable(&amp;HH);</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;线性探测处理冲突&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;输入12个数:&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	for (int i = 0; i &lt; 12; i++)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		cin &gt;&gt; key;</span></span><br><span class="line"><span class="comment">		InsertHash_1(&amp;H, key);</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;插入结果:&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	for (int i = 0; i &lt; 12; i++)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		cout &lt;&lt; H.elem[i] &lt;&lt; &quot; &quot;;</span></span><br><span class="line"><span class="comment">	&#125;cout &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;输入查找元素:&quot;;</span></span><br><span class="line"><span class="comment">	cin &gt;&gt; key;</span></span><br><span class="line"><span class="comment">	printf(&quot;%s&quot;, SearchHash_1(H, key, &amp;addr) == SUCCESS ? &quot;查找成功\n&quot; : &quot;查找不成功\n&quot;);</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;输入查找元素:&quot;;</span></span><br><span class="line"><span class="comment">	cin &gt;&gt; key;</span></span><br><span class="line"><span class="comment">	printf(&quot;%s&quot;, SearchHash_1(H, key, &amp;addr) == SUCCESS ? &quot;查找成功\n&quot; : &quot;查找不成功\n&quot;);</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;------------------------------------------&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;二次探测处理冲突&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;输入12个数:&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	for (int i = 0; i &lt; 12; i++)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		cin &gt;&gt; key;</span></span><br><span class="line"><span class="comment">		InsertHash_2(&amp;HH, key);</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;插入结果:&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	for (int i = 0; i &lt; 12; i++)</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">		cout &lt;&lt; HH.elem[i] &lt;&lt; &quot; &quot;;</span></span><br><span class="line"><span class="comment">	&#125;cout &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;输入查找元素:&quot;;</span></span><br><span class="line"><span class="comment">	cin &gt;&gt; key;</span></span><br><span class="line"><span class="comment">	printf(&quot;%s&quot;, SearchHash_2(HH, key, &amp;addr) == SUCCESS ? &quot;查找成功\n&quot; : &quot;查找不成功\n&quot;);</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; &quot;输入查找元素:&quot;;</span></span><br><span class="line"><span class="comment">	cin &gt;&gt; key;</span></span><br><span class="line"><span class="comment">	printf(&quot;%s&quot;, SearchHash_2(HH, key, &amp;addr) == SUCCESS ? &quot;查找成功\n&quot; : &quot;查找不成功\n&quot;);*/</span></span><br><span class="line">	<span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	cout &lt;&lt; *(a<span class="number">-1</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构第四次上机代码</title>
    <url>/2019/11/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E5%9B%9B%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<hr/>
<center><a href="https://pengxiandyou.github.io/src/work/DataStructure/experiment4/">报告</a></center>
<h1 id="二叉树"><a class="markdownIt-Anchor" href="#二叉树"></a> 二叉树</h1>
<p>丰富了许多</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR -1</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> DataType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">TreeNode</span></span><br><span class="line">&#123;</span><br><span class="line">	DataType elem;</span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">TreeNode</span>* rchild;</span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">TreeNode</span>* lchild;</span><br><span class="line">&#125;TreeNode, *PTREE;</span><br><span class="line"><span class="comment">//先序创建</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreatTree</span><span class="params">(PTREE *Root)</span> </span>&#123;</span><br><span class="line">	<span class="type">char</span> val = <span class="number">0</span>;<span class="comment">//用于下面存放数据</span></span><br><span class="line">	val = <span class="built_in">getchar</span>();<span class="comment">//输入数据值</span></span><br><span class="line">					<span class="comment">//如果输入&#x27;*&#x27;，则指向为空</span></span><br><span class="line">	<span class="keyword">if</span> (val == <span class="string">&#x27;*&#x27;</span> || val == <span class="string">&#x27;#&#x27;</span> || val == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">		(*Root) = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">//如果输入非&#x27;*&#x27;，则给数据域赋值</span></span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		(*Root) = (PTREE)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(TreeNode));<span class="comment">//申请内存空间</span></span><br><span class="line">		<span class="keyword">if</span> ((*Root) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;创建结点失败，无法分配可用内存...&quot;</span>);</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			(*Root)-&gt;elem = val;<span class="comment">//给结点数据域赋值</span></span><br><span class="line">			<span class="built_in">CreatTree</span>(&amp;(*Root)-&gt;lchild);</span><br><span class="line">			<span class="built_in">CreatTree</span>(&amp;(*Root)-&gt;rchild);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//前序遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrderTraverse</span> <span class="params">(PTREE Root)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Root == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">putchar</span>(Root-&gt;elem);</span><br><span class="line">		<span class="built_in">PreOrderTraverse</span>(Root-&gt;lchild);</span><br><span class="line">		<span class="built_in">PreOrderTraverse</span>(Root-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrderTraverse</span><span class="params">(PTREE Root)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Root != <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="built_in">InOrderTraverse</span>(Root-&gt;lchild);</span><br><span class="line">		<span class="built_in">putchar</span>(Root-&gt;elem);</span><br><span class="line">		<span class="built_in">InOrderTraverse</span>(Root-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrderTraverse</span><span class="params">(PTREE Root)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Root != <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="built_in">PostOrderTraverse</span>(Root-&gt;lchild);</span><br><span class="line">		<span class="built_in">PostOrderTraverse</span>(Root-&gt;rchild);</span><br><span class="line">		<span class="built_in">putchar</span>(Root-&gt;elem);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//深度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Depth</span><span class="params">(PTREE Root)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Root == <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">return</span> (<span class="built_in">Depth</span>(Root-&gt;lchild)&gt;<span class="built_in">Depth</span>(Root-&gt;rchild) ? <span class="built_in">Depth</span>(Root-&gt;lchild) : <span class="built_in">Depth</span>(Root-&gt;rchild )) + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//结点个数01*49**8**25**6** ABD***CE**FG*** 01*49**8**25**6*37***</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetNodeNum</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="literal">NULL</span> == Tree)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">GetNodeNum</span>(Tree-&gt;lchild) + <span class="built_in">GetNodeNum</span>(Tree-&gt;rchild) + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//叶子结点个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetLeafNum</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Tree == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (Tree-&gt;lchild == <span class="literal">NULL</span>&amp;&amp;Tree-&gt;rchild == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">GetLeafNum</span>(Tree-&gt;lchild) + <span class="built_in">GetLeafNum</span>(Tree-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//度为1结点个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetNodde1Num</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Tree == <span class="literal">NULL</span>)</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (Tree-&gt;lchild == <span class="literal">NULL</span>&amp;&amp;Tree-&gt;rchild != <span class="literal">NULL</span> || Tree-&gt;rchild == <span class="literal">NULL</span>&amp;&amp;Tree-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">GetNodde1Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde1Num</span>(Tree-&gt;rchild);</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">GetNodde1Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde1Num</span>(Tree-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//度为2结点个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetNodde2Num</span><span class="params">(PTREE Tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Tree == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (Tree-&gt;lchild != <span class="literal">NULL</span>&amp;&amp;Tree-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">GetNodde2Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde2Num</span>(Tree-&gt;rchild);</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">GetNodde2Num</span>(Tree-&gt;lchild) + <span class="built_in">GetNodde2Num</span>(Tree-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myprintf</span><span class="params">(<span class="type">char</span>* c,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::cout &lt;&lt;c&lt;&lt; <span class="string">&quot;求得结果为\t&quot;</span> &lt;&lt; n &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	PTREE root=<span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">char</span> ch = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;菜单：\n&quot;</span></span><br><span class="line">		<span class="string">&quot;0 先序建表\n&quot;</span></span><br><span class="line">		<span class="string">&quot;1 前序遍历\n&quot;</span></span><br><span class="line">		<span class="string">&quot;2 中序遍历\n&quot;</span></span><br><span class="line">		<span class="string">&quot;3 后序遍历\n&quot;</span></span><br><span class="line">		<span class="string">&quot;4 树的深度\n&quot;</span></span><br><span class="line">		<span class="string">&quot;5 递归所有结点\n&quot;</span></span><br><span class="line">		<span class="string">&quot;6 等式求所有结点\n&quot;</span></span><br><span class="line">		<span class="string">&quot;7 递归求所有叶子结点\n&quot;</span></span><br><span class="line">		<span class="string">&quot;8 性质求所有叶子结点\n&quot;</span></span><br><span class="line">		<span class="string">&quot;9 递归求所有度为1的结点\n&quot;</span></span><br><span class="line">		<span class="string">&quot;a 等式求所有度为1的结点\n&quot;</span></span><br><span class="line">		<span class="string">&quot;b 递归求所有度为2的结点\n&quot;</span></span><br><span class="line">		<span class="string">&quot;c 性质求所有度为2的结点\n&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cin &gt;&gt; ch;</span><br><span class="line">		<span class="keyword">switch</span> (ch)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:<span class="built_in">getchar</span>();<span class="comment">/*过滤回车符*/</span> <span class="built_in">CreatTree</span>(&amp;root); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:<span class="built_in">printf</span>(<span class="string">&quot;1 前序遍历结果： &quot;</span>); <span class="built_in">PreOrderTraverse</span>(root); <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="keyword">break</span>;<span class="comment">//前序遍历</span></span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:<span class="built_in">printf</span>(<span class="string">&quot;2 中序遍历结果： &quot;</span>); <span class="built_in">InOrderTraverse</span>(root);  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:<span class="built_in">printf</span>(<span class="string">&quot;3 后序遍历结果： &quot;</span>); <span class="built_in">PostOrderTraverse</span>(root); <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;4 树的深度 &quot;</span>,<span class="built_in">Depth</span>(root)); <span class="keyword">break</span>;<span class="comment">//深度</span></span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;5 递归所有结点 &quot;</span>,<span class="built_in">GetNodeNum</span>(root)); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;6 等式求所有结点 &quot;</span>,<span class="built_in">GetLeafNum</span>(root) + <span class="built_in">GetNodde2Num</span>(root) + <span class="built_in">GetNodde1Num</span>(root)); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;7 递归求所有叶子结点 &quot;</span>,<span class="built_in">GetLeafNum</span>(root)); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;8 性质求所有叶子结点 &quot;</span>,<span class="built_in">GetNodde2Num</span>(root) + <span class="number">1</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;9 递归求所有度为1的结点 &quot;</span>,<span class="built_in">GetNodde1Num</span>(root)); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;a 等式求所有度为1的结点 &quot;</span>,<span class="built_in">GetNodeNum</span>(root) - <span class="built_in">GetLeafNum</span>(root) - <span class="built_in">GetNodde2Num</span>(root)); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;b 递归求所有度为2的结点 &quot;</span>,<span class="built_in">GetNodde2Num</span>(root)); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:<span class="built_in">myprintf</span>(<span class="string">&quot;c 性质求所有度为2的结点 &quot;</span>,<span class="built_in">GetLeafNum</span>(root) - <span class="number">1</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;\n&#x27;</span>:<span class="keyword">case</span> <span class="string">&#x27;\t&#x27;</span>:<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="图"><a class="markdownIt-Anchor" href="#图"></a> 图</h1>
<p>储存</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> VerTexType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ArcType;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_VALUE INT_MAX</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_NUM 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">matrix</span></span><br><span class="line">&#123;</span><br><span class="line">	VerTexType vexs[MAX_NUM];<span class="comment">//节点</span></span><br><span class="line">	ArcType arcs[MAX_NUM][MAX_NUM];<span class="comment">//邻接矩阵</span></span><br><span class="line">	<span class="type">int</span> vexnum, arcnum;<span class="comment">//节点数,边数</span></span><br><span class="line">&#125; Graph;</span><br><span class="line"><span class="comment">//寻找索引</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LocateVex</span><span class="params">(Graph g, <span class="type">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;g.vexnum; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (c == g.vexs[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建无向图</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">g_create</span><span class="params">(Graph * g)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::cout &lt;&lt;<span class="string">&quot;输入节点数和边数&quot;</span>&lt;&lt; std::endl;</span><br><span class="line">	std::cin &gt;&gt; g-&gt;vexnum &gt;&gt; g-&gt;arcnum;</span><br><span class="line">	std::cout &lt;&lt;<span class="string">&quot;输入顶点&quot;</span>&lt;&lt; std::endl;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; g-&gt;vexnum; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cin &gt;&gt; g-&gt;vexs[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(g-&gt;arcs, <span class="number">0</span>, <span class="built_in">sizeof</span>(g-&gt;arcs));<span class="comment">//初始化矩阵</span></span><br><span class="line">	<span class="type">char</span> v1=<span class="literal">NULL</span>, v2 = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">int</span> k = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line">	std::cout &lt;&lt;<span class="string">&quot;输入边&quot;</span>&lt;&lt; std::endl;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; g-&gt;arcnum; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cin &gt;&gt; v1 &gt;&gt; v2;</span><br><span class="line">		k = <span class="built_in">LocateVex</span>(*g, v1);</span><br><span class="line">		l = <span class="built_in">LocateVex</span>(*g, v2);</span><br><span class="line">		g-&gt;arcs[k][l] = <span class="number">1</span>;</span><br><span class="line">		g-&gt;arcs[l][k] = g-&gt;arcs[k][l];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印邻接矩阵</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myprintf</span><span class="params">(Graph g)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;邻接矩阵为&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; g.vexnum; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; g.vexnum; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			std::cout &lt;&lt; g.arcs[i][j] &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		std::cout &lt;&lt; std::endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Graph g;</span><br><span class="line">	<span class="built_in">g_create</span>(&amp;g);</span><br><span class="line">	<span class="built_in">myprintf</span>(g);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构线性表链式实现作业</title>
    <url>/2019/09/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BA%BF%E6%80%A7%E8%A1%A8%E9%93%BE%E5%BC%8F%E5%AE%9E%E7%8E%B0%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"><span class="comment">//单链表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode, *LinkList;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">Status <span class="title function_">initList</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	*L = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	(*L)-&gt;data = <span class="number">0</span>;</span><br><span class="line">	(*L)-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">isEmpty</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (*L)-&gt;next == <span class="literal">NULL</span> ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getLength</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = *L;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p-&gt;next)</span><br><span class="line">	&#123;</span><br><span class="line">		++i;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//默认头插法建表</span></span><br><span class="line">Status <span class="title function_">creatListHead</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p ;</span><br><span class="line">	<span class="type">char</span> str[] = <span class="string">&quot;myGithub:https://github.com/pengxiandyou&quot;</span>;</span><br><span class="line">	(*L)-&gt;data=(<span class="type">int</span>)_mbstrlen(str);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;(<span class="type">int</span>)_mbstrlen(str); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		p= (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">		p-&gt;data = str[i];</span><br><span class="line">		p-&gt;next = (*L)-&gt;next;</span><br><span class="line">		(*L)-&gt;next = p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//默认尾插法建表 </span></span><br><span class="line">Status <span class="title function_">creatListEnd</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p,r=*L;</span><br><span class="line">	<span class="type">char</span> str[] = <span class="string">&quot;myGithub:https://github.com/pengxiandyou&quot;</span>;</span><br><span class="line">	(*L)-&gt;data = (<span class="type">int</span>)_mbstrlen(str);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; (<span class="type">int</span>)_mbstrlen(str); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		p = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">		p-&gt;data = str[i];</span><br><span class="line">		p-&gt;next = <span class="literal">NULL</span>;<span class="comment">//必须要否则遍历异常</span></span><br><span class="line">		r -&gt;next= p;</span><br><span class="line">		r = p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历表</span></span><br><span class="line">Status <span class="title function_">traversalList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = L-&gt;next;</span><br><span class="line">	<span class="keyword">while</span> (p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, p-&gt;data);</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">Status <span class="title function_">insertList</span><span class="params">(LinkList* L, <span class="type">int</span> i ,<span class="type">char</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (L == <span class="literal">NULL</span> || (i &gt; (*L)-&gt;data || i &lt; <span class="number">1</span>))<span class="keyword">return</span> ERROR;</span><br><span class="line">	LinkList p=*L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;j&lt;i<span class="number">-1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//定在前一个</span></span><br><span class="line">        j++;</span><br><span class="line">	&#125;</span><br><span class="line">	LinkList q = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	q-&gt;data = c;</span><br><span class="line">	q-&gt;next = p-&gt;next;</span><br><span class="line">	p-&gt;next = q;</span><br><span class="line">	(*L)-&gt;data++;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按位查找</span></span><br><span class="line">LNode* <span class="title function_">getListByIndex</span><span class="params">(LinkList L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//if (L == NULL || (i &gt; (L)-&gt;data || i &lt; 1))return NULL;</span></span><br><span class="line">	LinkList p = L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;j&lt;i - <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//前一个</span></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//	p = p-&gt;next;</span></span><br><span class="line">	<span class="keyword">return</span> (p);<span class="comment">//前一个</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按值查找</span></span><br><span class="line">LNode* <span class="title function_">getListByElem</span><span class="params">(LinkList L, <span class="type">char</span> c ,<span class="type">int</span>* i)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = L;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (p&amp;&amp;p-&gt;next-&gt;data!=c)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;<span class="comment">//前一个</span></span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	*i = j + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> p; <span class="comment">//前一个</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除 通过索引</span></span><br><span class="line">Status <span class="title function_">deleteListElem</span><span class="params">(LinkList* L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = getListByIndex(*L, i);</span><br><span class="line">	LinkList q = p-&gt;next;</span><br><span class="line">	p-&gt;next = p-&gt;next-&gt;next;</span><br><span class="line">	<span class="built_in">free</span>(q);</span><br><span class="line">	(*L)-&gt;data--;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除 通过值 </span></span><br><span class="line">Status <span class="title function_">deleteListElem</span><span class="params">(LinkList* L, <span class="type">char</span> c,<span class="type">int</span>* i)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = getListByElem(*L, c,i);</span><br><span class="line">	LinkList q = p-&gt;next;</span><br><span class="line">	p-&gt;next = p-&gt;next-&gt;next;</span><br><span class="line">	<span class="built_in">free</span>(q);</span><br><span class="line">	(*L)-&gt;data--;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//逆置链表</span></span><br><span class="line">Status <span class="title function_">Reverse</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = (*L)-&gt;next;</span><br><span class="line">	LinkList q = *L;</span><br><span class="line">	LinkList s;</span><br><span class="line">	<span class="keyword">while</span> (q-&gt;next)</span><br><span class="line">	&#123;</span><br><span class="line">		q = q-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (p!=q)</span><br><span class="line">	&#123;</span><br><span class="line">		s = q-&gt;next;</span><br><span class="line">		q-&gt;next = p;</span><br><span class="line">		(*L)-&gt;next = p-&gt;next;</span><br><span class="line">		p-&gt;next = s;</span><br><span class="line">		p = (*L)-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//改值 根据索引</span></span><br><span class="line">Status <span class="title function_">changeElemByIndex</span><span class="params">(LinkList* L,<span class="type">char</span> c, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	getListByIndex(*L, i)-&gt;next-&gt;data = c;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中间结点 运用快慢指针</span></span><br><span class="line"><span class="comment">//快慢指针可以判断是否为环,两链表是否相交等</span></span><br><span class="line">LNode* <span class="title function_">findListMiddle</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList fast, slow;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	fast = slow = L;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; fast != <span class="literal">NULL</span>&amp;&amp;fast-&gt;next != <span class="literal">NULL</span>; fast = fast-&gt;next-&gt;next)</span><br><span class="line">	&#123;</span><br><span class="line">		slow = slow-&gt;next;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> slow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除表</span></span><br><span class="line">Status <span class="title function_">deleteALL</span><span class="params">(LinkList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList p = *L, q;</span><br><span class="line">	<span class="keyword">while</span> (p-&gt;next)</span><br><span class="line">	&#123;</span><br><span class="line">		q = p-&gt;next;</span><br><span class="line">		p-&gt;next = q-&gt;next;</span><br><span class="line">		(*L)-&gt;data--;</span><br><span class="line">		<span class="built_in">free</span>(q);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">free</span>(p);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList L;</span><br><span class="line">	<span class="comment">//初始化</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始初始化\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;初始化-------%s\n&quot;</span>, initList(&amp;L)==OK?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="comment">//判空</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;单链表为-----%s\n&quot;</span>, isEmpty(&amp;L));</span><br><span class="line">	<span class="comment">//获取长度</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;单链表长度为-%d\n&quot;</span>,getLength(&amp;L));</span><br><span class="line">	<span class="comment">//建表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始建表,使用默认头插法方式,尾插法未使用\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;建表---------%s\n&quot;</span>, creatListHead(&amp;L)==OK?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;单链表长度为-%d\n&quot;</span>, getLength(&amp;L));</span><br><span class="line">	<span class="comment">//遍历表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始遍历\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历---------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="comment">//逆转链表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始逆转\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;逆转-------------------%s\n&quot;</span>, Reverse(&amp;L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历-------------------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;逆转-------------------%s\n&quot;</span>, Reverse(&amp;L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历-------------------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="comment">//中间结点</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;寻找中间结点\n&quot;</span>);</span><br><span class="line">	LNode* s = findListMiddle(L);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;地址为 %d\t值为 %c\n&quot;</span>,s -&gt;next, s-&gt;data);</span><br><span class="line">	<span class="comment">//查找</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始查找\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	LNode* t= getListByElem(L, <span class="string">&#x27;h&#x27;</span>, &amp;i);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;按值(h)查找,值为 %c\t索引为 %d\n&quot;</span>, t-&gt;next-&gt;data, i);</span><br><span class="line">	t = getListByIndex(L, <span class="number">20</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;按为(20)查找,值为 %c\n&quot;</span>, t-&gt;next-&gt;data);</span><br><span class="line">	<span class="comment">//插入</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始插入\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;在索引1处插入!---------%s\n&quot;</span>, insertList(&amp;L,<span class="number">1</span>,<span class="string">&#x27;!&#x27;</span>) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;单链表长度为-%d\n&quot;</span>, getLength(&amp;L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历---------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="comment">//改值</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始改值\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;更改索引1处的值为%%-----%s\n&quot;</span>, changeElemByIndex(&amp;L, <span class="string">&#x27;%&#x27;</span>, <span class="number">1</span>) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历--------------------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="comment">//删除</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始删除\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;通过索引1\n&quot;</span>);</span><br><span class="line">	deleteListElem(&amp;L, <span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;单链表长度为-----------%d\n&quot;</span>, getLength(&amp;L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历-------------------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;通过值#\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;在索引1处插入#---------%s\n&quot;</span>, insertList(&amp;L, <span class="number">1</span>, <span class="string">&#x27;#&#x27;</span>) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;单链表长度为-----------%d\n&quot;</span>, getLength(&amp;L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历-------------------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">	deleteListElem(&amp;L,<span class="string">&#x27;#&#x27;</span>, &amp;j);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;单链表长度为-----------%d\n&quot;</span>, getLength(&amp;L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历-------------------%s\n&quot;</span>, traversalList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="comment">//删除表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始删除表\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;删除-------------------%s\n&quot;</span>, deleteALL(&amp;L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构线性表顺序实现作业</title>
    <url>/2019/09/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BA%BF%E6%80%A7%E8%A1%A8%E9%A1%BA%E5%BA%8F%E5%AE%9E%E7%8E%B0%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIST_INIT_SIZE 10 <span class="comment">//线性表储存空间初始分配量</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LISTINCREMRNT 10 <span class="comment">//线性表储存空间的分配增量</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"></span><br><span class="line">					  <span class="comment">//线性表动态分配顺序储存结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType* elem;<span class="comment">//储存空间基址</span></span><br><span class="line">	<span class="type">int</span> length;<span class="comment">//当前长度</span></span><br><span class="line">	<span class="type">int</span> listsize;<span class="comment">//当前分配的存储容量</span></span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1初始化一个空的表</span></span><br><span class="line">Status <span class="title function_">InitList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	L-&gt;elem = (ElemType*)__vcrt_malloc_normal(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">	<span class="keyword">if</span> (!(L-&gt;elem))</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);<span class="comment">//分配失败</span></span><br><span class="line">	L-&gt;length = <span class="number">0</span>;<span class="comment">//长度</span></span><br><span class="line">	L-&gt;listsize = LIST_INIT_SIZE;<span class="comment">//容量</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2插入</span></span><br><span class="line">Status <span class="title function_">ListInsert</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length + <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">	ElemType* q = &amp;(L-&gt;elem[i - <span class="number">1</span>]), *p = <span class="literal">NULL</span>;<span class="comment">// q为插入位置</span></span><br><span class="line">	<span class="keyword">for</span> (p = &amp;(L-&gt;elem[L-&gt;length - <span class="number">1</span>]); p &gt;= q; --p)</span><br><span class="line">		* (p + <span class="number">1</span>) = *p;<span class="comment">// 插入位置及之后的元素后移</span></span><br><span class="line">	*q = e;<span class="comment">// 插入e</span></span><br><span class="line">	++(L-&gt;length);<span class="comment">// 表长增加1</span></span><br><span class="line">	<span class="keyword">if</span> (L-&gt;length == L-&gt;listsize) &#123;</span><br><span class="line">		ElemType*  newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + LISTINCREMRNT) * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">		<span class="keyword">if</span> (!newbase)</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">		L-&gt;elem = newbase;<span class="comment">// 新基址</span></span><br><span class="line">		L-&gt;listsize += LISTINCREMRNT;<span class="comment">// 增加存储容量</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3获取长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getLength</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4是否为空</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">isEmtey</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;length == <span class="number">0</span> ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//5清空</span></span><br><span class="line">Status <span class="title function_">clearList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	__vcrt_free_normal(L-&gt;elem);</span><br><span class="line">	L-&gt;length = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6摧毁</span></span><br><span class="line">Status <span class="title function_">destryList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	__vcrt_free_normal(L);</span><br><span class="line">	L = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//7通过索引取值</span></span><br><span class="line">ElemType <span class="title function_">getElemByIndex</span><span class="params">(SqList* L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> L-&gt;elem[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8通过值取索引</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getIndexByElem</span><span class="params">(SqList* L, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; L-&gt;length; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((L-&gt;elem[j]) == e)</span><br><span class="line">			<span class="keyword">return</span> j + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//9通过索引改值</span></span><br><span class="line">ElemType <span class="title function_">changeElemByIndex</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span>  L-&gt;elem[i - <span class="number">1</span>] = e;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//10删除元素</span></span><br><span class="line">Status <span class="title function_">deleteElmeByIndex</span><span class="params">(SqList* L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = i - <span class="number">1</span>; j &lt; L-&gt;length - <span class="number">1</span>; ++j)</span><br><span class="line">		L-&gt;elem[j] = L-&gt;elem[j + <span class="number">1</span>];</span><br><span class="line">	--(L-&gt;length);</span><br><span class="line">	ElemType*  newbase = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (((L-&gt;listsize) - (L-&gt;length)) &gt;= <span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize - LISTINCREMRNT) * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">		<span class="keyword">if</span> (!newbase) &#123;</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			L-&gt;elem = newbase;</span><br><span class="line">			L-&gt;listsize -= LISTINCREMRNT;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//11遍历表</span></span><br><span class="line">Status <span class="title function_">myPrintf</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;第%d个值------------%d\n&quot;</span>,i+<span class="number">1</span>, (L-&gt;elem[i]));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	SqList* L = (SqList*)__vcrt_malloc_normal(<span class="keyword">sizeof</span>(SqList));</span><br><span class="line">	<span class="comment">//创建表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;线性表创建状态----%d\n&quot;</span>, InitList(L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;当前容量----------%d\n&quot;</span>, L-&gt;listsize);</span><br><span class="line">	<span class="comment">//获取长度</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;长度--------------%d\n&quot;</span>, getLength(L));</span><br><span class="line">	<span class="comment">//判空</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, isEmtey(L));</span><br><span class="line">	<span class="comment">//为表赋值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;插入状态%d---------%d\n&quot;</span>,i, ListInsert(L, i + <span class="number">1</span>, i));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;当前容量----------%d\n&quot;</span>, L-&gt;listsize);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;长度--------------%d\n&quot;</span>, getLength(L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, isEmtey(L));</span><br><span class="line">	<span class="comment">//遍历表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始遍历表\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历状态----------%s\n&quot;</span>, myPrintf(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, isEmtey(L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;长度--------------%d\n&quot;</span>, getLength(L));</span><br><span class="line">	<span class="comment">//通过索引取值</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;通过索引5取值得---%d\n&quot;</span>, getElemByIndex(L,<span class="number">5</span>));</span><br><span class="line">	<span class="comment">//通过值取索引</span></span><br><span class="line">	ElemType e = <span class="number">4</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;通过值4取索引得----%d\n&quot;</span>, getIndexByElem(L,e));	</span><br><span class="line">	<span class="comment">//通过索引改值</span></span><br><span class="line">	e = <span class="number">66</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;通过索引6改值后为--%d\n&quot;</span>, changeElemByIndex(L, <span class="number">6</span>,e));</span><br><span class="line">	<span class="comment">//删除元素</span></span><br><span class="line">	<span class="type">int</span> temp = L-&gt;length;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">5</span>;i&lt;=temp;++i)</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;删除元素-----------%s\n&quot;</span>, deleteElmeByIndex(L, <span class="number">5</span>) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;遍历状态----------%s\n&quot;</span>, myPrintf(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, isEmtey(L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;长度--------------%d\n&quot;</span>, getLength(L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;当前容量----------%d\n&quot;</span>, L-&gt;listsize);</span><br><span class="line">	<span class="comment">//清空表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始清空表\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;清空状态----------%s\n&quot;</span>, clearList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, isEmtey(L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;长度--------------%d\n&quot;</span>, getLength(L));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;当前容量----------%d\n&quot;</span>, L-&gt;listsize);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//摧毁表</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;摧毁表的状态------%s\n&quot;</span>, destryList(L) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>); </span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构顺序栈</title>
    <url>/2019/09/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A1%BA%E5%BA%8F%E6%A0%88/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1 <span class="comment">//通过</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 <span class="comment">//错误 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2 <span class="comment">//堆栈溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 50 <span class="comment">//容量 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status; <span class="comment">//函数类型,其值为状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> ElemType; <span class="comment">//抽象数据类型</span></span><br><span class="line"><span class="comment">//顺序结构储存</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">	ElemType* base;</span><br><span class="line">	ElemType* top;</span><br><span class="line">	<span class="type">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> </span><br><span class="line">&#123;</span><br><span class="line">	f,t</span><br><span class="line">&#125;Bool;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function">Status <span class="title">initStack</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	S-&gt;base = <span class="keyword">new</span> ElemType[MAXSIZE];</span><br><span class="line">	<span class="keyword">if</span> (!S-&gt;base)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">	&#125;</span><br><span class="line">	S-&gt;top = S-&gt;base;</span><br><span class="line">	S-&gt;stacksize = MAXSIZE;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="function">Bool <span class="title">isEmpty</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> S-&gt;base == S-&gt;top ? t : f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLength</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> S-&gt;top - S-&gt;base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//入栈</span></span><br><span class="line"><span class="function">Status <span class="title">pushElem</span><span class="params">(SqStack* S,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">getLength</span>(S) == S-&gt;stacksize)<span class="keyword">return</span> ERROR;</span><br><span class="line">	*(S-&gt;top) = e;</span><br><span class="line">	S-&gt;top++;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line"><span class="function">ElemType <span class="title">popElem</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">isEmpty</span>(S))<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	S-&gt;top--;</span><br><span class="line">	<span class="keyword">return</span> *(S-&gt;top);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取栈顶</span></span><br><span class="line"><span class="function">ElemType <span class="title">getTop</span><span class="params">(SqStack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">isEmpty</span>(S))<span class="keyword">return</span> *(S-&gt;top - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SqStack* S = <span class="keyword">new</span> SqStack;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;初始化-----------%s\n&quot;</span>, <span class="built_in">initStack</span>(S) == OK ? <span class="string">&quot;成功&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>, <span class="built_in">isEmpty</span>(S) ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>);</span><br><span class="line">	<span class="type">char</span>* str = <span class="string">&quot;https://github.com/pengxiandyou&quot;</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始入栈\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = _mbstrlen(str)<span class="number">-1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;入栈-----------%s--------长度  %d\n&quot;</span>, <span class="built_in">pushElem</span>(S, str[i])==OK?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>,<span class="built_in">getLength</span>(S));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;是否为空----------%s\n&quot;</span>,<span class="built_in">isEmpty</span>(S) ? <span class="string">&quot;空&quot;</span> : <span class="string">&quot;不空&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;栈顶为---------%c\n&quot;</span>, <span class="built_in">getTop</span>(S));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;开始出栈\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">31</span>- <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,<span class="built_in">popElem</span>(S) );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>作业</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>有趣的东西</title>
    <url>/2020/08/12/%E6%9C%89%E8%B6%A3%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
    <content><![CDATA[<h1 id="来源"><a class="markdownIt-Anchor" href="#来源"></a> 来源</h1>
<table border="1">
<tr>
<th>标题</th>
<th>链接</th>
 <th>作者</th>   
</tr>
<tr>
    <td><a href="https://www.bilibili.com/video/BV1za4y1E7oS">盘点一些你不太熟悉但是十分有趣的HTML标签</a></a></td>
    <td><a href="https://www.bilibili.com/video/BV1za4y1E7oS">https://www.bilibili.com/video/BV1za4y1E7oS</a></a></td>
<td><a href="https://space.bilibili.com/10433048">lookroot</a></td>
</tr>
<tr>
<td>我和你</td>
<td>你和我</td>
<td>在一起</td>
</tr>
<tr>
<td>我爱你</td>
<td>你爱我</td>
<td>生一群</td>
</tr>
</table>
<h1 id="html"><a class="markdownIt-Anchor" href="#html"></a> html</h1>
<h2 id="有趣的html"><a class="markdownIt-Anchor" href="#有趣的html"></a> 有趣的html</h2>
<h3 id="input"><a class="markdownIt-Anchor" href="#input"></a> input</h3>
<p><code>&lt;input type=&quot;color&quot; name=&quot;&quot;&gt;</code><input type="color" name=""></p>
<p><code>&lt;input type=&quot;range&quot; name=&quot;&quot;&gt;</code><input type="range" name=""></p>
<p><code>&lt;input type=&quot;time&quot; name=&quot;&quot;&gt;</code><input type="time" name=""></p>
<p><code>&lt;input type=&quot;date&quot; name=&quot;&quot;&gt;</code><input type="date" name=""></p>
<p><code>&lt;input type=&quot;datetime-local&quot; name=&quot;&quot;&gt;</code><input type="datetime-local" name=""></p>
<p><code>&lt;input type=&quot;week&quot; name=&quot;&quot;&gt;</code><input type="week" name=""></p>
<h3 id="list"><a class="markdownIt-Anchor" href="#list"></a> list</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;list&quot;</span> <span class="attr">list</span>=<span class="string">&quot;emaillist&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;emaillist&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;@qq.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;@gamil.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<input type="list" list="emaillist" name="">
<datalist id="emaillist">
	<option value="@qq.com"></option>
	<option value="@gamil.com"></option>
</datalist>
<h3 id="progress"><a class="markdownIt-Anchor" href="#progress"></a> progress</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">max</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">value</span>=<span class="string">&quot;30&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><progress value="" max=""></progress><progress value="30" max="100"></progress></p>
<h3 id="meter"><a class="markdownIt-Anchor" href="#meter"></a> meter</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meter</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">low</span>=<span class="string">&quot;30&quot;</span> <span class="attr">optimum</span>=<span class="string">&quot;50&quot;</span> <span class="attr">high</span>=<span class="string">&quot;70&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meter</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meter</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">low</span>=<span class="string">&quot;30&quot;</span> <span class="attr">optimum</span>=<span class="string">&quot;50&quot;</span> <span class="attr">high</span>=<span class="string">&quot;70&quot;</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meter</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meter</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">low</span>=<span class="string">&quot;30&quot;</span> <span class="attr">optimum</span>=<span class="string">&quot;50&quot;</span> <span class="attr">high</span>=<span class="string">&quot;70&quot;</span> <span class="attr">value</span>=<span class="string">&quot;80&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meter</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><meter max="100" min="0" low="30" optimum="50" high="70" value="20"></meter><meter max="100" min="0" low="30" optimum="50" high="70" value="50"></meter><meter max="100" min="0" low="30" optimum="50" high="70" value="80"></meter></p>
<h3 id="小东西合在一起"><a class="markdownIt-Anchor" href="#小东西合在一起"></a> 小东西合在一起</h3>
<ul>
<li><code>&lt;del&gt;删除线&lt;/del&gt;</code><del>删除线</del>typora-markdown:<code>~~删除线~~</code><s>删除线</s></li>
<li><code>&lt;ins&gt;下划线&lt;/ins&gt;</code><ins>下划线</ins><code>&lt;u&gt;下划线&lt;/u&gt;</code><u>下划线</u>(不推荐)</li>
<li><code>&lt;abbr title=&quot;你放上来了&quot;&gt;放上来&lt;/abbr&gt;</code><abbr title="你放上来了">放上来</abbr></li>
<li><code>&lt;mark&gt;我学到了&lt;/mark&gt;</code><mark>我学到了</mark></li>
<li><code>&lt;details&gt;&lt;summary&gt;点击查看更多&lt;/summary&gt;&lt;p&gt;没更多&lt;/p&gt;&lt;/details&gt;</code><details><summary>点击查看更多</summary><p>没更多</p></details></li>
</ul>
<h3 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://dwz.cn/NMaOCMyf&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>我是头像<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure>
		<img data-src="https://dwz.cn/NMaOCMyf" width="200" height="200">
		<figcaption>我是头像</figcaption>
</figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span><span class="comment">&lt;!--可以实现响应式图片，应该需要服务器支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">&quot;https://dwz.cn/NMaOCMyf&quot;</span> <span class="attr">media</span>=<span class="string">&quot;(max-width:300px)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">&quot;https://dwz.cn/NMaOCMyf&quot;</span> <span class="attr">media</span>=<span class="string">&quot;(max-width:600px)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://dwz.cn/NMaOCMyf&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure>
<picture>
    <source srcset="https://dwz.cn/NMaOCMyf" media="(max-width:300px)">
    <source srcset="https://dwz.cn/NMaOCMyf" media="(max-width:600px)">
    <img data-src="https://dwz.cn/NMaOCMyf" alt="">
</picture>
<h3 id="from"><a class="markdownIt-Anchor" href="#from"></a> from</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<form action="">
    <fieldset>
        无聊<input type="text" name=""><br>
        有趣<input type="password" name=""><br>
    </fieldset>
</form>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<form action="">
    text-r<input type="text" name="" required><br>
    email-r<input type="email" name="" required><br>
    <input type="submit" name="" value="提交"><br>
</form>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;MAILTO:1508115864@qq.com&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;text/plain&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 不建议 --》</span></span><br></pre></td></tr></table></figure>
<form action="MAILTO:1508115864@qq.com" method="POST" enctype="text/plain">
    <input type="text" name=""><br>
    <input type="submit" name="" value="提交"><br>
</form>
### dialog
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dialog</span> <span class="attr">id</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">open</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>提示<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>可以关的弹窗<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;javascript:document.getElementById(&#x27;dialog&#x27;).close()&quot;</span>&gt;</span>关<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>
<dialog id="dialog-my" open>
    <p><strong>提示</strong></p>
    <p>可以关的弹窗</p>
    <button onclick="javascript:document.getElementById('dialog-my').close()">关</button>
</dialog><button onclick="javascript:document.getElementById('dialog-my').show()">开</button><button onclick="javascript:document.getElementById('dialog-my').close()">关</button>
<h2 id="偶然了解"><a class="markdownIt-Anchor" href="#偶然了解"></a> 偶然了解</h2>
<ul>
<li>2024年1月22日 23:43:02 html特性，每个标签都有一个title属性，可以用来显示信息。鼠标放上去就可以显示。</li>
</ul>
<h1 id="hexo-next"><a class="markdownIt-Anchor" href="#hexo-next"></a> hexo-next</h1>
<h2 id="全文阅读"><a class="markdownIt-Anchor" href="#全文阅读"></a> 全文阅读</h2>
<p> <code>read_more_btn: true</code>阅读全文的按钮显示。</p>
<p> <code>excerpt_description: true</code>如果<code>true</code>，则预览写在<code>description:</code>即可。如果<code>false</code>，则需要用<code>&lt;!-- more --&gt;</code>来分割。前者不好写复杂的东西，不能回车等，需要用html。后者则需要每次都写。</p>
<h2 id="内容显隐"><a class="markdownIt-Anchor" href="#内容显隐"></a> 内容显隐</h2>
<p><code>&#123;% fold 点击显/隐内容 %&#125;`<br/>

`&#123;% endfold %&#125;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fold_hider&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;close hider_title&quot;</span>&gt;</span>点击显示/隐藏代码<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fold&quot;</span>&gt;</span></span><br><span class="line">        要隐藏的部分</span><br><span class="line">        25338785</span><br><span class="line">        54535</span><br><span class="line">        2424</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="思维导图"><a class="markdownIt-Anchor" href="#思维导图"></a> 思维导图</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% markmap 400px %&#125;</span><br><span class="line"></span><br><span class="line">- links</span><br><span class="line">	--色的人</span><br><span class="line">	--使得法国</span><br><span class="line"></span><br><span class="line">- **inline** ~~text~~ *styles*</span><br><span class="line"></span><br><span class="line">- multiline</span><br><span class="line">	text</span><br><span class="line"></span><br><span class="line">- `inline code`</span><br><span class="line"></span><br><span class="line">- ```js代码块</span><br><span class="line">	console.log(&#x27;code block&#x27;);</span><br><span class="line">	console.log(&#x27;code block&#x27;);</span><br><span class="line"></span><br><span class="line">- latex - $x = &#123;-b \pm \sqrt&#123;b^2-4ac&#125; \over 2a&#125;$</span><br><span class="line"></span><br><span class="line">&#123;% endmarkmap %&#125;</span><br></pre></td></tr></table></figure>
<p>另一种用<code>#</code>的不展示了。另外高版本的mermaid支持思维导图。</p>
<h2 id="画图"><a class="markdownIt-Anchor" href="#画图"></a> 画图</h2>
<ul>
<li><a href="https://blog.csdn.net/qq_36075612/article/details/118161100">[使用Typora画 流程图、时序图、顺序图、甘特图、等图详解_typora流程图-CSDN博客]</a></li>
<li><a href="https://support.typoraio.cn/Draw-Diagrams-With-Markdown/">Draw Diagrams With Markdown - Typora Support (typoraio.cn)</a></li>
<li><a href="http://pengxiandyou.github.io/2020/10/04/%E5%9C%A8Typora%E9%87%8C%E4%BD%BF%E7%94%A8mermaid%E7%94%BB%E5%9B%BE">在Typora里使用mermaid画图</a></li>
</ul>
<h2 id="hexo和next文档"><a class="markdownIt-Anchor" href="#hexo和next文档"></a> hexo和next文档</h2>
<p>可以阅读到一些用法，比如标签插件、变量等。</p>
<ul>
<li><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></li>
<li><a href="https://theme-next.js.org/">NexT - Theme for Hexo (theme-next.js.org)</a></li>
<li><a href="https://www.w3cschool.cn/hexodocument/">Hexo 中文文档_w3cschool</a></li>
</ul>
<h2 id="fa"><a class="markdownIt-Anchor" href="#fa"></a> FA</h2>
<ul>
<li><a href="https://www.jc2182.com/fontawesome/fontawesome-jiaocheng.html">FontAwesome 教程 - 蝴蝶教程 (jc2182.com)</a></li>
</ul>
]]></content>
      <categories>
        <category>合集</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>markdown</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>用阿里云服务器实现贴吧自动签到</title>
    <url>/2020/07/27/%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0%E8%B4%B4%E5%90%A7%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/</url>
    <content><![CDATA[<h1 id="为什么"><a class="markdownIt-Anchor" href="#为什么"></a> 为什么</h1>
<p>​	平时几乎逛贴吧，又不水贴，所以等级基本不高。发帖问问题有要一点等级撑腰。当然可以拿来装B。</p>
<p>​	以前用过两个别人提供的签到服务，都需要提供Cookie，感觉不太可靠。当然，他们提供的服务我也没用多久。</p>
<h1 id="本地运行"><a class="markdownIt-Anchor" href="#本地运行"></a> 本地运行</h1>
<p>​	从<a href="https://blog.csdn.net/echizao1839/article/details/105490215">利用阿里云的函数计算实现百度贴吧免费定时签到</a>复制python代码可以运行，但需要改成3一下的版本。</p>
<p>​	首先从<a href="https://www.python.org/">官网</a>下载包安装。由于我不想卸载3的版本，所以通过添加PYTHON_HOME，然后在Path里引用。这样就可以通过修改PYTHON_HOME的值就可修改成想要用的版本。但最终我没改值，而是在命令行里使用2的版本运行程序。</p>
<p>​	此时又遇到库的问题。解决方式可以下载库，理论也可把3里下的库复制过来。我想节约空间就用命令<code>mklink /j &quot;D:\Python275\Lib\site-packages&quot; &quot;D:\Python\Lib\site-packages&quot;</code>进行联接（应该是软联接，不是快捷方式，需要前面的文件夹不存在）。这样就可以用3里面的库了。</p>
<p>​	总是在f处报<code>SyntaxError: invalid syntax</code>，但3正常，于是换成用format的。改了之后又报编码相关的错<code>UnicodeEncodeError: 'ascii' codec can't encode characters in position 1-2: ordinal not in range(128)</code>。这回添加</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>就好，而且在服务器上也可以运行。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handler</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="comment"># 数据</span></span><br><span class="line">    like_url = <span class="string">&#x27;https://tieba.baidu.com/mo/q/newmoindex?&#x27;</span></span><br><span class="line">    sign_url = <span class="string">&#x27;http://tieba.baidu.com/sign/add&#x27;</span></span><br><span class="line">    tbs = <span class="string">&#x27;自行寻找&#x27;</span></span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html, */*; q=0.01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9,en;q=0.8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;自行寻找&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;tieba.baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://tieba.baidu.com/i/i/forum&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;Chrome/71.0.3578.98 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>&#125;</span><br><span class="line">    s = Session()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取关注的贴吧</span></span><br><span class="line">    bars = []</span><br><span class="line">    dic = s.get(like_url, headers=head).json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;like_forum&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> bar_info <span class="keyword">in</span> dic:</span><br><span class="line">        bars.append(bar_info[<span class="string">&#x27;forum_name&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 签到</span></span><br><span class="line">    already_signed_code = <span class="number">1101</span></span><br><span class="line">    success_code = <span class="number">0</span></span><br><span class="line">    need_verify_code = <span class="number">2150040</span></span><br><span class="line">    already_signed = <span class="number">0</span></span><br><span class="line">    succees = <span class="number">0</span></span><br><span class="line">    failed_bar = []</span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> n &lt; <span class="built_in">len</span>(bars):</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">        bar = bars[n]</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ie&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;kw&#x27;</span>: bar,</span><br><span class="line">            <span class="string">&#x27;tbs&#x27;</span>: tbs</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = s.post(sign_url, data=data, headers=head)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;未能签到&#123;&#125;, 由于&#123;&#125;。&quot;</span>.<span class="built_in">format</span>(bar,e))</span><br><span class="line">            failed_bar.append(bar)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        dic = r.json()</span><br><span class="line">        msg = dic[<span class="string">&#x27;no&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> msg == already_signed_code:</span><br><span class="line">            already_signed += <span class="number">1</span>;</span><br><span class="line">            r = <span class="string">&#x27;已经签到过了!&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> msg == need_verify_code:</span><br><span class="line">            n -= <span class="number">1</span>;</span><br><span class="line">            r = <span class="string">&#x27;需要验证码，即将重试!&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> msg == success_code:</span><br><span class="line">            <span class="comment">#r = f&quot;签到成功!你是第&#123;dic[&#x27;data&#x27;][&#x27;uinfo&#x27;][&#x27;user_sign_rank&#x27;]&#125;个签到的吧友,共签到&#123;dic[&#x27;data&#x27;][&#x27;uinfo&#x27;][&#x27;total_sign_num&#x27;]&#125;天。&quot;</span></span><br><span class="line">            r = <span class="string">&quot;签到成功!你是第&#123;&#125;个签到的吧友,共签到&#123;&#125;天。&quot;</span>.<span class="built_in">format</span>(dic[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;uinfo&#x27;</span>][<span class="string">&#x27;user_sign_rank&#x27;</span>],dic[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;uinfo&#x27;</span>][<span class="string">&#x27;total_sign_num&#x27;</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = <span class="string">&#x27;未知错误!&#x27;</span> + dic[<span class="string">&#x27;error&#x27;</span>]</span><br><span class="line">        <span class="comment">#print(&quot;&#123;&#125;：&#123;&#125;&quot;.format(bar,r))</span></span><br><span class="line">        <span class="built_in">print</span>(bar+<span class="string">&quot;:&quot;</span>+r)</span><br><span class="line">        succees += <span class="number">1</span></span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">    l = <span class="built_in">len</span>(bars)</span><br><span class="line">    failed = <span class="string">&quot;\n失败列表：&quot;</span> + <span class="string">&#x27;\n&#x27;</span>.join(failed_bar) <span class="keyword">if</span> <span class="built_in">len</span>(failed_bar) <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;共&#123;&#125;个吧，其中: &#123;&#125;个吧签到成功，&#123;&#125;个吧签到失败，&#123;&#125;个吧已经签到。&#123;&#125;&quot;</span>.<span class="built_in">format</span>(l,succees,<span class="built_in">len</span>(failed_bar),already_signed,failed))</span><br><span class="line">handler()</span><br></pre></td></tr></table></figure>
<h1 id="服务器lamp环境运行"><a class="markdownIt-Anchor" href="#服务器lamp环境运行"></a> 服务器（LAMP环境）运行</h1>
<ol>
<li>
<p>编写shell。因为要添加至定时任务，所以路径要写全。shell的文件在<code>/opt/corn/</code>下面，生成的文件也在这里。</p>
<div><div class="fold_hider"><div class="close hider_title">有bug的代码</div></div><div class="fold">
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">f_dir=$(date +%Y)</span><br><span class="line">s_dir=$(date +%m)</span><br><span class="line">t_dir=$(date +%d)</span><br><span class="line">num=1</span><br><span class="line">r_dir=/opt/cron</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件夹</span></span><br><span class="line">if [ ! -d $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125; ];then</span><br><span class="line">	mkdir -p $&#123;f_dir&#125;/$&#123;s_dir&#125;</span><br><span class="line">	var1=&#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;执行创建&#x27;+$&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;</span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash"><span class="built_in">echo</span> 1</span></span><br><span class="line">else</span><br><span class="line">	var1=&#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;已存在&#x27;+$&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;</span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash"><span class="built_in">echo</span> 2</span></span><br><span class="line">fi</span><br><span class="line">echo $&#123;var1&#125; &gt;&gt; $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行python代码</span></span><br><span class="line">python /opt/cron/tieba2.py &gt; $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;+$&#123;1:-$&#123;num&#125;&#125;.txt || echo &#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;python运行失败&#x27; &gt;&gt; $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;.log</span><br><span class="line"></span><br><span class="line">echo $&#123;f_dir&#125;+$&#123;s_dir&#125;+$&#123;t_dir&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为生成&lt;li&gt;&lt;/li&gt; 此处可把<span class="keyword">if</span>删掉，把下面的&gt;&gt;换成&gt;</span></span><br><span class="line">tmp=$&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;&#x27;tmp&#x27;.txt</span><br><span class="line">if [ -f $&#123;tmp&#125; ];then</span><br><span class="line">	rm -rf $&#123;tmp&#125; &amp;&amp; echo &#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;中间文件已存在-删除&#x27;+$&#123;tmp&#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">cat $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;+$&#123;1:-$&#123;num&#125;&#125;.txt | while read line;do</span><br><span class="line">	echo &#x27;&lt;li&gt;&#x27;$&#123;line&#125;&#x27;&lt;/li&gt;&#x27; &gt;&gt; $&#123;tmp&#125;</span><br><span class="line">done</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拼接html</span></span><br><span class="line">cat /opt/cron/head.txt &gt; /var/www/html/index.html</span><br><span class="line">cat $&#123;tmp&#125; &gt;&gt; /var/www/html/index.html</span><br><span class="line">cat /opt/cron/tail.txt &gt;&gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line">echo &#x27;done&#x27; </span><br></pre></td></tr></table></figure>

</div></div>
<p>代码在跨月时，可能会出问题，可设计多运行几次。下面的代码稍微改了点，还是有问题，不改了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">f_dir=$(date +%Y)</span><br><span class="line">s_dir=$(date +%m)</span><br><span class="line">t_dir=$(date +%d)</span><br><span class="line">num=1</span><br><span class="line">r_dir=/opt/cron</span><br><span class="line">echo $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125; &gt; $&#123;r_dir&#125;/daily.log</span><br><span class="line">if [ ! -d $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125; ];then</span><br><span class="line">	mkdir -p $&#123;f_dir&#125;/$&#123;s_dir&#125;</span><br><span class="line">	var1=&#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;执行创建&#x27;+$&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;</span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash"><span class="built_in">echo</span> 1</span></span><br><span class="line">else</span><br><span class="line">	var1=&#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;已存在&#x27;+$&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;</span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash"><span class="built_in">echo</span> 2</span></span><br><span class="line">fi</span><br><span class="line">echo $&#123;var1&#125; &gt;&gt; $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;.log</span><br><span class="line">python /opt/cron/tieba2.py &gt; $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;+$&#123;1:-$&#123;num&#125;&#125;.txt || echo &#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;python运行失败&#x27; &gt;&gt; $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;.log</span><br><span class="line"></span><br><span class="line">echo $&#123;f_dir&#125;+$&#123;s_dir&#125;+$&#123;t_dir&#125;</span><br><span class="line"></span><br><span class="line">tmp=$&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;&#x27;tmp&#x27;.txt</span><br><span class="line">if [ -f $&#123;tmp&#125; ];then</span><br><span class="line">	rm -rf $&#123;tmp&#125; &amp;&amp; echo &#x27;log&#x27;$&#123;1:-$&#123;num&#125;&#125;+$(date +%H-%M-%S)+&#x27;中间文件已存在-删除&#x27;+$&#123;tmp&#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">cat $&#123;r_dir&#125;/$&#123;f_dir&#125;/$&#123;s_dir&#125;/$&#123;t_dir&#125;+$&#123;1:-$&#123;num&#125;&#125;.txt | while read line;do</span><br><span class="line">	echo &#x27;&lt;li&gt;&#x27;$&#123;line&#125;&#x27;&lt;/li&gt;&#x27; &gt;&gt; $&#123;tmp&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">cat /opt/cron/head.txt &gt; /var/www/html/index.html</span><br><span class="line">echo &#x27;&lt;li&gt;&#x27;$&#123;f_dir&#125;+$&#123;s_dir&#125;+$&#123;t_dir&#125;&#x27;&lt;li&gt;&#x27; &gt;&gt; /var/www/html/index.html</span><br><span class="line">cat $&#123;tmp&#125; &gt;&gt; /var/www/html/index.html</span><br><span class="line">cat /opt/cron/tail.txt &gt;&gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line">echo &#x27;done&#x27; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果需要多次执行生成不同的文件，要传入数字，表示第几次执行。</p>
</li>
<li>
<p>有设计日志，出问题可看。</p>
</li>
<li>
<p>拼接的html很简单。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>贴吧每日签到<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">       <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">text-align</span>: center</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: auto;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-id">#fdiv</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">height</span>: <span class="number">1700px</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascrip&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;fdiv&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ol</span> <span class="attr">id</span>=<span class="string">&quot;tb&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--此处分割为两个文件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span>               </span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果需要网页有较多功能，比如再执行一边。可自行设计。由于我前段时间看过<a href="https://www.bilibili.com/video/BV15b411e71u">尚学堂杨淑娟老师-手写服务器</a>，代码也有，所以修改修改再添加点，最后打包，就应该可以放到服务器里运行了。</p>
</li>
<li>
<p>服务器到期后可放到阿里、腾讯、百度的函数计算上。个人推荐百度的，因为有免费1G的外网流量。leancloud也可应该。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>记录</category>
        <category>懒惰记录</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>贴吧</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>真我GtNeo闪速版更换屏幕总成过程记录</title>
    <url>/2023/01/24/%E7%9C%9F%E6%88%91GtNeo%E9%97%AA%E9%80%9F%E7%89%88%E6%9B%B4%E6%8D%A2%E5%B1%8F%E5%B9%95%E6%80%BB%E6%88%90%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="手机情况"><a class="markdownIt-Anchor" href="#手机情况"></a> 手机情况</h2>
<p>  手机摔下后，屏幕全黑，猜测是内屏漏液，其他都还没坏。不过经过测试发现触摸还在。触摸还在的话，可以凭记忆忙按，可用TalkBack（建议提前打开学习一边以应当此情况）操作，可以使用语音助手辅助。❤️</p>
<h2 id="材料准备"><a class="markdownIt-Anchor" href="#材料准备"></a> 材料准备</h2>
<ol>
<li> 屏幕总成：如果有能力更换内屏的话，去看这个相关教程。这个屏幕总成在购买的时候要考虑好，一般原装很贵，带指纹也很贵，不知道为什么。如果手机这种“三明治”结构（后盖、边框、屏幕）的话，在购买时要考虑带不带边框。个人建议是不带边框的，带边框的通常要拆电池，搬板等，我觉得麻烦，可能需要更多的胶水。</li>
<li>热风枪：必备。现在基本都是胶，不加热难以打开。</li>
<li>B-7000胶水：通常购买屏幕总成时会赠送。</li>
<li>螺丝刀：建议准备齐全各种样式的。通常购买屏幕总成时会赠送。实在没有的话，剪刀等代替。</li>
<li>粘电池的双面胶：胶水应该是不行。我虽不打算拆电池，但准备了3M强力双面胶。</li>
<li>翘片：<img data-src="https://cbu01.alicdn.com/img/ibank/2020/341/768/16151867143_536514295.220x220.jpg" alt="翘片" />我只有这个。如果你有不错的指甲，也可以不用。通常购买屏幕总成时会赠送。</li>
<li>吸盘：我没准备，我靠的指甲和我准备的翘片。通常购买屏幕总成时会赠送。</li>
<li>到片：看你需要，我用这撬开一个角用。</li>
<li>其实准备（购买）一套简易的拆机工具即可。</li>
</ol>
<h2 id="拆机"><a class="markdownIt-Anchor" href="#拆机"></a> 拆机</h2>
<p>  我背面无指纹识别等其他元件，所以拆的时候不用担心排线。先关机取出卡槽，然后用热风枪加热背面。家用吹风机应该是两档，可用手试。放心，手机没那么娇贵。撬开缝隙后，建议先拆开长边，过程中要温柔一点，不要大力，否则塑料后壳弯了不好盖。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E7%9C%9F%E6%88%91gtneo%E9%97%AA%E9%80%9F%E7%89%88%E6%8B%86%E6%9C%BA%E5%90%8E%E7%9B%96202301241833897.jpg" alt="IMG_20230117_145328" /></p>
<p>  拆开后，趁着余热把残胶清理干净。然后就是拧下螺丝，大概只须拧图中（即下半部分）的螺丝即可。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E7%9C%9F%E6%88%91gtneo%E9%97%AA%E9%80%9F%E7%89%88%E8%9E%BA%E4%B8%9D202301241840387.jpg" alt="IMG_20230117_150213" /></p>
<p>  螺丝拧下后，从充电口用力扳即可把边框和手机分成人字形，如下图。扳的时候不要用力过度把边框掰断了。之所以不把所有螺丝拧下，是因为镜头模组下还有螺丝，为了保护镜头才这样。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E7%9C%9F%E6%88%91gtneo%E9%97%AA%E9%80%9F%E7%89%88%E4%BA%BA%E5%BD%A2%E8%BE%B9%E6%A1%86202301241845748.jpg" alt="IMG_20230117_153212" /></p>
<p>  这是已经看到屏幕排线了，可断开。注意这次拆机无法断开电池排线，故断开屏幕排线时注意点。此时就可进行屏幕测试了，可以把应用图标拖来拖去。测试成功后就要拆屏了。</p>
<p>  同理，用热风枪吹屏幕，从边框角落开始撬。注意这个边框是小边框，不要撬两个边框中间。</p>
<p>  注意，真我GtNeo闪速版的屏幕排线在左下角，撬的时候注意。排线旁的红色塑料顶出来即可。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E7%9C%9F%E6%88%91gtneo%E9%97%AA%E9%80%9F%E7%89%88%E5%B1%8F%E5%B9%95%E6%8B%86%E8%A7%A3%E8%BF%87%E7%A8%8B%E4%B8%AD202301241854210.jpg" alt="IMG_20230117_153001" /></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E7%9C%9F%E6%88%91gtneo%E9%97%AA%E9%80%9F%E7%89%88%E5%B1%8F%E5%B9%95%E6%8B%86%E8%A7%A3%E5%AE%8C%E6%88%90202301241857509.jpg" alt="IMG_20230117_154200" /></p>
<h2 id="换屏"><a class="markdownIt-Anchor" href="#换屏"></a> 换屏</h2>
<p>  快速的在屏幕边框上涂上胶水，将屏幕扣上，塞入红色塑料，扣上排线，拧上螺丝，不要使劲拧顶到屏幕。在边框上涂上胶水，将后壳盖上。为了防水，可在后壳摄像头位置涂上一圈。最后用橡皮筋捆好，等待1天。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E7%9C%9F%E6%88%91gtneo%E9%97%AA%E9%80%9F%E6%8D%A2%E5%A5%BD%E5%B1%8F202301241906221.jpg" alt="IMG_20230117_160558" /></p>
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<p>1.realme真我gtneo真我GT闪速版手机维修换屏幕总成多少钱，真我GT手机换后盖多少钱，真我GT闪速版黑屏怎么办换屏幕总成</p>
<iframe src="//player.bilibili.com/player.html?aid=562855657&bvid=BV12v4y117JS&cid=897646607&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<p>2.realmeGT真我GT手机维修换原装屏幕总成多少钱，真我GT换后盖多少钱，realmeGT真我手机黑屏爆屏修复换原装屏幕总成拆机视频教程，真我GT换电池多少钱</p>
<iframe src="//player.bilibili.com/player.html?aid=643430260&bvid=BV1aY4y177gT&cid=773344816&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<p>3.手机屏幕破碎如何在家就能自己更换屏幕总成呢？不要着急看完秒懂</p>
<iframe src="//player.bilibili.com/player.html?aid=244598983&bvid=BV17v411C7pG&cid=236375988&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<p>4.[最详细的拆解]真我realme GT neo拆机换屏幕换电池教程</p>
<iframe src="//player.bilibili.com/player.html?aid=854051811&bvid=BV18L4y1F7Gb&cid=721537756&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<p>5.<a href="https://haokan.baidu.com/v?vid=8046755978919862412&amp;pd=pcshare&amp;hkRelaunch=p1%3Dpc%26p2%3Dvideoland%26p3%3Dshare_input">真我GT neo，不小心掉地上，内屏碎了，屏幕也全部黑屏不显示,数码,手机,好看视频</a></p>
<iframe src="https://vd4.bdstatic.com/mda-pa3b1ji0328gdw6d/sc/cae_h264/1672888875997453833/mda-pa3b1ji0328gdw6d.mp4?v_from_s=hkapp-haokan-hbe&amp;auth_key=1674561194-0-0-2e56480ee08556f474b46a6032d6c624&amp;bcevod_channel=searchbox_feed&amp;pd=1&amp;cd=0&amp;pt=3&amp;logid=1394683701&amp;vid=8046755978919862412&amp;abtest=&amp;klogid=1394683701" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
]]></content>
      <categories>
        <category>记录</category>
        <category>维修记录</category>
      </categories>
      <tags>
        <tag>维修</tag>
        <tag>外屏</tag>
        <tag>屏幕总成</tag>
      </tags>
  </entry>
  <entry>
    <title>自己实现一个native方法</title>
    <url>/2021/01/25/%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAnative%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h1>
<ol>
<li>
<p>Windows专业版</p>
</li>
<li>
<p>java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\桌面</span><br><span class="line">λ java -version</span><br><span class="line">java version &quot;1.8.0_191&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_191-b12) Java HotSpot(TM) 64-Bit Server VM (build 25.191-b12, mixed mode)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>gcc——mingw-w64</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\桌面</span><br><span class="line">λ gcc -v</span><br><span class="line">Using built-in specs.</span><br><span class="line">COLLECT_GCC=gcc</span><br><span class="line">COLLECT_LTO_WRAPPER=D:/mingw-w64/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe</span><br><span class="line">Target: x86_64-w64-mingw32</span><br><span class="line">Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion=&#x27;x86_64-posix-seh-rev0, Built by MinGW-W64 project&#x27; --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS=&#x27;-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include&#x27; CXXFLAGS=&#x27;-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include&#x27; CPPFLAGS=&#x27; -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include&#x27; LDFLAGS=&#x27;-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib &#x27;</span><br><span class="line">Thread model: posix</span><br><span class="line">gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>cmder 191012</p>
<p>默认是<code>GBK</code>编译，切换<code>utf-8</code>，可用<code>chcp 65001</code>，切换回来用<code>chcp 936</code>。</p>
<p>在编译运行java，可以尝试<code>-encoding</code>，不会写的话，就百度或者去翻自己的ide。</p>
<p>在编译dll是，可用<code>-fexec-charset=gbk -finput-charset=utf-8</code>。</p>
<p>我不在dll里打印中文信息，就统一<code>GBK</code>了，如果要换成<code>uft8</code>，我会崩溃的。</p>
</li>
</ol>
<h1 id="一-编写testnativejava并编译"><a class="markdownIt-Anchor" href="#一-编写testnativejava并编译"></a> 一、编写<code>TestNative.java</code>并编译</h1>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestNative</span>&#123;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="comment">//要写绝对路径</span></span><br><span class="line">		<span class="comment">//System.load(&quot;TestNative.dll&quot;);</span></span><br><span class="line">		System.loadLibrary(<span class="string">&quot;TestNative&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">static</span> String <span class="title function_">getYouHeart</span><span class="params">(String msg)</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">		System.out.println(getYouHeart(args[<span class="number">0</span>]));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\桌面                                                 </span><br><span class="line">λ javac TestNative.java                               </span><br><span class="line">                                                      </span><br><span class="line">D:\桌面                                                 </span><br><span class="line">λ dir | find &quot;TestNative&quot;                             </span><br><span class="line">2021/01/25  20:05               451 TestNative.class  </span><br><span class="line">2021/01/25  20:03               201 TestNative.java   </span><br></pre></td></tr></table></figure>
<h1 id="二-使用javah生成h文件"><a class="markdownIt-Anchor" href="#二-使用javah生成h文件"></a> 二、使用<code>javah</code>生成<code>.h</code>文件</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\桌面                                                 </span><br><span class="line">λ javah -jni TestNative                               </span><br><span class="line">                                                      </span><br><span class="line">D:\桌面                                                 </span><br><span class="line">λ dir | find &quot;TestNative&quot;                             </span><br><span class="line">2021/01/25  20:05               451 TestNative.class  </span><br><span class="line">2021/01/25  20:11               436 TestNative.h      </span><br><span class="line">2021/01/25  20:03               201 TestNative.java   </span><br></pre></td></tr></table></figure>
<p>  下面是生成的<code>TestNative.h</code>,不要随意修改。如果java里的方法没变，基本上生成一次就够了。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/* DO NOT EDIT THIS FILE - it is machine generated */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="comment">/* Header for class TestNative */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _Included_TestNative</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _Included_TestNative</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Class:     TestNative</span></span><br><span class="line"><span class="comment"> * Method:    getYouHeart</span></span><br><span class="line"><span class="comment"> * Signature: (Ljava/lang/String;)Ljava/lang/String;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">JNIEXPORT jstring JNICALL <span class="title function_">Java_TestNative_getYouHeart</span></span><br><span class="line">  <span class="params">(JNIEnv *, jclass, jstring)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="三-编写c文件"><a class="markdownIt-Anchor" href="#三-编写c文件"></a> 三、编写<code>.c</code>文件</h1>
<p>  由于我使用指定的路径总是出问题，于是就在编译时指定了。</p>
<p>  实现相应的方法就可。</p>
<p>  我的文件名<code>TestNative.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//总是出奇怪的问题</span></span><br><span class="line"><span class="comment">//#include &lt;D:/JAVA/8u191/JDK/include/jni.h&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;D:/JAVA/8u191/JDK/include/win32/jni_md.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;jni.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;jni_md.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;TestNative.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">JNIEXPORT jstring JNICALL <span class="title function_">Java_TestNative_getYouHeart</span></span><br><span class="line">  <span class="params">(JNIEnv* env, jclass obj, jstring msg)</span>&#123;</span><br><span class="line">  	<span class="type">const</span> <span class="type">char</span>* msg_char = (*env)-&gt;GetStringUTFChars(env, msg, <span class="number">0</span>);</span><br><span class="line">  	<span class="comment">/*在gbk下乱码，在utf8其他地方乱码*/</span></span><br><span class="line">  	<span class="comment">//printf(&quot;你说：%s\n&quot;, msg_char);</span></span><br><span class="line">  	<span class="keyword">if</span>(<span class="number">0</span> == <span class="built_in">strcmp</span>(msg_char , <span class="string">&quot;我爱你&quot;</span>))&#123;</span><br><span class="line">  		<span class="comment">//printf(&quot;%s\n&quot;, msg_char);</span></span><br><span class="line">  		<span class="keyword">return</span> (*env)-&gt;NewStringUTF(env, <span class="string">&quot;我知道你的心意，我也爱你&quot;</span>);</span><br><span class="line"></span><br><span class="line">  	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  		<span class="keyword">return</span> (*env)-&gt;NewStringUTF(env, <span class="string">&quot;你可知道我的心意？&quot;</span>);</span><br><span class="line">  	&#125;</span><br><span class="line">  	<span class="comment">//老有问题</span></span><br><span class="line">  	<span class="comment">//(*env)-&gt;ReleaseStringUTFChars(msg,msg_char);</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="四-编译testnativec生成testnativedll"><a class="markdownIt-Anchor" href="#四-编译testnativec生成testnativedll"></a> 四、编译<code>TestNative.c</code>生成<code>TestNative.dll</code></h1>
<p>  <code>-I</code>后面是头文件是搜索路径，为<code>$&#123;JAVA_HOME&#125;</code>下的<code>include</code>和<code>include/win32</code>。</p>
<p>  <code>-o</code>是指定输出文件名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\桌面</span><br><span class="line">λ gcc -o TestNative.dll -shared TestNative.c -I &quot;D:/JAVA/8u191/JDK/include/&quot; -I &quot;D:/JAVA/8u191/JDK/include/win32/&quot;</span><br></pre></td></tr></table></figure>
<h1 id="五-运行class文件"><a class="markdownIt-Anchor" href="#五-运行class文件"></a> 五、运行<code>.class</code>文件</h1>
<p>  先前最简单的方式，在<code>.c</code>里打印一下。 此时乱码的原因是因为<code>cmder</code>的编码是<code>GBK</code>。用<code>chcp 65001</code>即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\桌面</span><br><span class="line">λ javac TestNative.java</span><br><span class="line"></span><br><span class="line">D:\桌面</span><br><span class="line">λ java TestNative 我爱你</span><br><span class="line">p↑Fk</span><br></pre></td></tr></table></figure>
<p>  最后运行效果。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\桌面</span><br><span class="line">λ javac TestNative.java</span><br><span class="line"></span><br><span class="line">D:\桌面</span><br><span class="line">λ javah -jni TestNative</span><br><span class="line">//记得编写.c文件</span><br><span class="line">D:\桌面</span><br><span class="line">λ  gcc -o TestNative.dll -shared TestNative.c -I &quot;D:/ JAVA/8u191/JDK/include/&quot; -I &quot;D:/JAVA/8u191/JDK/include/win32/&quot;</span><br><span class="line"></span><br><span class="line">D:\桌面</span><br><span class="line">λ dir | find &quot;TestNative&quot;</span><br><span class="line">2021/01/26  11:31               813 TestNative.c</span><br><span class="line">2021/01/26  11:32               571 TestNative.class</span><br><span class="line">2021/01/26  11:32            48,029 TestNative.dll</span><br><span class="line">2021/01/25  21:54               456 TestNative.h</span><br><span class="line">2021/01/26  10:16               284 TestNative.java</span><br><span class="line"></span><br><span class="line">D:\桌面</span><br><span class="line">λ java TestNative 你爱我吗？</span><br><span class="line">你可知道我的心意？</span><br><span class="line"></span><br><span class="line">D:\桌面</span><br><span class="line">λ java TestNative 我爱你</span><br><span class="line">我知道你的心意，我也爱你</span><br></pre></td></tr></table></figure>
<h1 id="我想说"><a class="markdownIt-Anchor" href="#我想说"></a> 我想说</h1>
<p>  很就以前就知道有jni这个东西，当时好像是为了完成一个什么东西。这个东西用java写的话，我不会。如果用c写的话，我还可以挣扎一下。至于为什么放弃了，是因为当时看到jni的写法，感觉不会写。毕竟当时c学得不多和java理解得不多，虽然现在c也忘得差不多了。</p>
<p>  对于dll——动态链接库，我是在一个pvz的外挂视频里了解到的。我当时应该是很想用c来写外挂。比较没读大学前就通过套路来破解安卓游戏。我现在还记得一些关键的东西，比如<code>onCreate</code>、<code>6000</code>。现在想要破解这些东西，要按照套路来已经很困难了。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li><a href="https://blog.csdn.net/nimeghbia/article/details/70174269">jstring</a></li>
<li><a href="https://blog.csdn.net/qq_37635373/article/details/101352301">怎样自己实现一个native本地方法呢？</a></li>
<li><a href="https://www.cnblogs.com/szlbm/p/5504603.html">自己实现一个Native方法的调用</a></li>
<li><a href="https://blog.csdn.net/torane/article/details/102981221">[Java] 用C编写你自己的native方法</a></li>
<li><a href="https://www.cnblogs.com/alan666/p/8311984.html">gcc -I -L -l区别</a></li>
<li><a href="https://www.cnblogs.com/siqi/p/4798444.html">linux gcc头文件搜索路径</a></li>
<li><a href="https://blog.csdn.net/u011598031/article/details/85051242">JNI基础之JNIEnv，jclass和jobject</a></li>
<li><a href="https://blog.csdn.net/a_thousand_miles/article/details/81125017">02.JNIEnv和jclass,数据类型,访问java属性方法</a></li>
<li><a href="https://blog.csdn.net/xlxxcc/article/details/51106721">JNI中string 、 char* 和 jstring 两种转换</a></li>
<li><a href="https://blog.csdn.net/jacke121/article/details/61419590">char* 和jstring转换</a></li>
<li><a href="https://cloud.tencent.com/developer/ask/49921">如何将jstring转换为char *？</a></li>
<li><a href="https://bbs.csdn.net/topics/320220343">char类型与jstring类型的转换</a></li>
<li><a href="https://blog.csdn.net/xiuye2015/article/details/90112905">Java JNI 创建字符串对象</a></li>
<li><a href="https://bbs.csdn.net/topics/390165867">JNI中如何把char * 转化为jstring</a></li>
<li><a href="https://bbs.csdn.net/topics/390351378">JNI char*转jstring乱码问题</a></li>
<li><a href="https://blog.csdn.net/yishifu/article/details/52180448">JNI官方中文资料</a></li>
<li><a href="https://blog.csdn.net/yaosongyuan/article/details/9120013">java编译UTF-8文件乱码的问题</a></li>
<li><a href="https://www.cnblogs.com/CodeWorkerLiMing/p/12503166.html">GCC编译环境中文乱码解决方案</a></li>
</ol>
]]></content>
      <categories>
        <category>这算教程吧</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>c</tag>
        <tag>jni</tag>
      </tags>
  </entry>
  <entry>
    <title>研究院指导笔记整理</title>
    <url>/2020/07/29/%E7%A0%94%E7%A9%B6%E9%99%A2%E6%8C%87%E5%AF%BC%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h1 id="前期"><a class="markdownIt-Anchor" href="#前期"></a> 前期</h1>
<p>​		主要是虚拟机的下载、安装、创建、配置。没记什么，因为早就弄好了。</p>
<p>​		一些基础的命令。</p>
<div><div class="fold_hider"><div class="close hider_title">是否使用照妖镜使妖怪现形</div></div><div class="fold">
<p>解压</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u251-linux-x64.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure>
<p>更改网络配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp改static</span><br><span class="line">IPADDR=192.168.222.100</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.222.2</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line">DNS2=223.6.6.6</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure>
<p>配环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<p>防火墙</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动： systemctl start firewalld</span><br><span class="line">关闭： systemctl stop firewalld</span><br><span class="line">查看状态： systemctl status firewalld</span><br><span class="line">开机禁用  ： systemctl disable firewalld</span><br><span class="line">开机启用  ： systemctl enable firewalld</span><br></pre></td></tr></table></figure>
<p>主机名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname px02 &amp;&amp; bash</span><br></pre></td></tr></table></figure>
<p>分发</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r hadoop/ px03:/usr/local/hadoop-2.9.2/etc/</span><br></pre></td></tr></table></figure>
<p>ssh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa &amp;&amp; ssh-copy-id 地址</span><br></pre></td></tr></table></figure>

</div></div>
<h1 id="day03-应该是-一台"><a class="markdownIt-Anchor" href="#day03-应该是-一台"></a> day03 应该是 一台</h1>
<ol>
<li>
<p><a href="http://hadoop-env.sh">hadoop-env.sh</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk1.8.0_251</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>core-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定HDFS中NameNode的地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop100:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定Hadoop运行时产生文件的存储目录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop-2.9.2/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>hdfs-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定HDFS副本的数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">格式化NameNode（第一次启动时格式化，以后就不要总格式化）</span><br><span class="line">hadoop namenode -format</span><br><span class="line">启动NameNode</span><br><span class="line">hadoop-daemon.sh start namenode</span><br><span class="line">启动DataNode</span><br><span class="line">hadoop-daemon.sh start datanode</span><br><span class="line">（当时应该没有执行）hadoop-daemon.sh start secondarynamenode</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意配置环境变量，否则要写全路径。启动后用jps（要先配置java）查看</span></span><br><span class="line">web页面：机子ip:50070</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="day04-第一台伪分布多一个配置"><a class="markdownIt-Anchor" href="#day04-第一台伪分布多一个配置"></a> day04 第一台伪分布+多一个配置</h1>
<ol>
<li>
<p><a href="http://hadoop-env.sh">hadoop-env.sh</a>  JAVA_HOME</p>
</li>
<li>
<p>vi core-site.xml 不变</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;&lt;name&gt;fs.defaultFS&lt;/name&gt;&lt;value&gt;hdfs://ip:9000</span><br><span class="line">				 hadoop.tmp.dir            /usr/local/hadoop-2.9.2/tmp</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>vi hdfs-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定 Hadoop 辅助名称节点主机配置 ，可以不设置，默认在和namenode在同一台机器上 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop104:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>vim slaves</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.100.102 去掉localhost 这是本机 下面是其他机</span><br><span class="line">192.168.100.103</span><br><span class="line">192.168.100.104</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>杂</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">拷贝到其他机器 profile jdk hadoop</span><br><span class="line">scp -r /usr/local/hadoop-2.9.2/ 192.168.100.103:/usr/local/</span><br><span class="line">为了方便生成密钥 单向的</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id 地址</span><br><span class="line"></span><br><span class="line">如果通过其他方式比如xftp传输， Permission denied 命令行输入  sudo chmod -R 777 /(java_home的完整路径)  同理</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式化 他说你地址写那个就在那里格式化 但我不清楚那个地址 我在第2台机子上格的</span><br><span class="line">hadoop namenode -format</span><br><span class="line">如果没改主机名，会出现localhost/127.0.0.1 而不是分配好的ip地址</span><br><span class="line">hostnamectl set-hostname px02</span><br><span class="line">bash</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>杂</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">映射 他说用映射比较好，主机名ip都行</span><br><span class="line">vim core-site.xml 把ip改为主机名</span><br><span class="line">改了要分发一下</span><br><span class="line">vim /etc/hosts</span><br><span class="line">ip 名</span><br><span class="line">都改或分发</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>web</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.100.102:50070/ 应该是namenode的机子ip</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="day05"><a class="markdownIt-Anchor" href="#day05"></a> day05</h1>
<h2 id="搭建-yarn-昨天hdfs"><a class="markdownIt-Anchor" href="#搭建-yarn-昨天hdfs"></a> 搭建 yarn 昨天hdfs</h2>
<ol>
<li>
<p>vim <a href="http://yarn-env.sh">yarn-env.sh</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JAVA_HOME /usr/local/jdk1.8.0_251/</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>vim yarn-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- reducer获取数据的方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定yarn的resourcemanager的地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>px03<span class="tag">&lt;/<span class="name">vslue</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>vim <a href="http://mapred-env.sh">mapred-env.sh</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JAVA_HOME</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>mapred-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">cp mapred-site.xml.template mapred-site.xml</span><br><span class="line">拷贝一份，以防写错</span><br><span class="line">vim mapred-site.xml</span><br><span class="line"><span class="comment">&lt;!--指定mr在yarn上运行--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>分发</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4个文件 可偷懒分发hadoop文件夹 可用主机名或ip</span><br><span class="line">scp -r hadoop/ px03:/usr/local/hadoop-2.9.2/etc/</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">resourcemanage在那台机子就在那台启动，比如我的px03</span><br><span class="line">要先启动hdfs </span><br><span class="line">start-dfs.sh（我是在px02上启动的 我的机子 02 03 04）</span><br><span class="line">再启动yarn 若未配置免密则须输密码</span><br><span class="line">start-yarn.sh（我03上启动的）</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>web页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.100.103:8088/ ip为resourcemanage的机子的ip</span><br><span class="line">注：后面的再次配置会把端口改为18088</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果觉得不方便，把所有主机写在同一台，secondnamenode去掉</p>
</li>
</ol>
<h2 id="hdfs基本命令"><a class="markdownIt-Anchor" href="#hdfs基本命令"></a> hdfs基本命令</h2>
<ol>
<li>
<p>fs和dfs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/hadoop fs具体命令OR bin/hdfs dfs具体命令。</span><br><span class="line">dfs是fs的实现类。</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">帮助</span><br><span class="line">hadoop fs -help 命令</span><br><span class="line">-ls</span><br><span class="line">hadoop fs -ls /  /根目录</span><br><span class="line">-mkdir 创建目录</span><br><span class="line">hadoop fs -mkdir / 可在hdfs web界面看 ip/explorer.html#/</span><br><span class="line">从本地（不是windows）剪切粘贴到HDFS</span><br><span class="line">hadoop fs -moveFromLocal 文件 目录</span><br><span class="line">查看文件</span><br><span class="line">hadoop fs -cat 文件</span><br><span class="line">追加</span><br><span class="line">hadoop fs -appendToFile 源文件 目标文件</span><br><span class="line">从本机拷贝 等同于 -put</span><br><span class="line">          -copyFromLocal 文件 目录</span><br><span class="line">拷贝回本地 等同于 -get </span><br><span class="line">		  -copyToLocal 文件 目录</span><br><span class="line">HDFS中拷贝到另一个路径</span><br><span class="line">		  -cp 文件 目录</span><br><span class="line">移动 -mv</span><br><span class="line"></span><br><span class="line">感觉就是linux命令的结合</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="wordcount案例"><a class="markdownIt-Anchor" href="#wordcount案例"></a> wordcount案例</h2>
<ol>
<li>
<p>准备</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">目录</span><br><span class="line">/usr/local/hadoop-2.9.2/share/hadoop/mapreduce</span><br><span class="line">文件</span><br><span class="line"> hadoop-mapreduce-examples-2.9.2.jar</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop jar hadoop-mapreduce-examples-2.9.2.jar wordcount（主类） /wordcount.txt（输入） /output（输出）</span><br><span class="line">http://192.168.100.103:8088/cluster/ 可看</span><br><span class="line">他的在204 我的未在04而在02 猜测随机</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可用以下命令查看</span><br><span class="line">hadoop fs -cat /output/part-r-00000</span><br><span class="line">他会出现统计的频率</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="写程序前"><a class="markdownIt-Anchor" href="#写程序前"></a> 写程序前</h2>
<ol>
<li>windows的jdk配置</li>
<li>windows配置hadoop
<ul>
<li>更改env的JAVA_HOME</li>
<li>添加HADOOP_HOME</li>
<li>添加Path，%HADOOP_HOME%\bin 绝对路径相对路径随意</li>
<li>验证 cmd hadoop</li>
</ul>
</li>
</ol>
<h2 id="新命令"><a class="markdownIt-Anchor" href="#新命令"></a> 新命令</h2>
<p>杀死进程 kill -9 进程号</p>
<h1 id="day06"><a class="markdownIt-Anchor" href="#day06"></a> day06</h1>
<h2 id="zookeeper-注他此时hdfs和yarn是启动好的"><a class="markdownIt-Anchor" href="#zookeeper-注他此时hdfs和yarn是启动好的"></a> zookeeper 注：他此时hdfs和yarn是启动好的</h2>
<ol>
<li>
<p>解压</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf 文件 -C 目录</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>改配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建data目录</span><br><span class="line">在data下创建文件myid，里面写1（id为1）</span><br><span class="line">在conf下</span><br><span class="line">拷贝文件  cp zoo_sample.cfg zoo.cfg</span><br><span class="line">修改dataDir为 /usr/local/zookeeper-3.4.13/data/</span><br><span class="line">添加      （id） （主机或ip）</span><br><span class="line">    server.1=px02:2888:3888</span><br><span class="line">    server.2=px03:2888:3888</span><br><span class="line">    server.3=px04:2888:3888</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>分发</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r /usr/local/zookeeper-3.4.13/ px03:/usr/local/</span><br><span class="line">scp -r /usr/local/zookeeper-3.4.13/ px04:/usr/local/</span><br><span class="line">修改data下的myid</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在bin目录下</span><br><span class="line">./zkServer.sh start</span><br><span class="line">三台都要敲命令</span><br><span class="line"># 注：配置环境变量会简单点</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>查看状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./zkServer.sh status</span><br><span class="line">出现Mode: follower、Mode: leader成功了</span><br><span class="line">进程为QuorumPeerMain</span><br><span class="line">注：他说（意为）：zkp一般搭建奇数台，三台中正常第二台为leader</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="编程windows"><a class="markdownIt-Anchor" href="#编程windows"></a> 编程（windows）</h2>
<ol>
<li>
<p>idea导包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">share\hadoop下的</span><br><span class="line">common和lib、hdfs和lib、mapreduce和lib、yarn和lib</span><br><span class="line">有多余的，但老师他说不管</span><br><span class="line">会出现jdiff，他说选不选无所谓，他没选</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>小技巧：idea里 .var可以方便声明变量</p>
</li>
<li>
<p>代码</p>
<ul>
<li>
<p>mapper</p>
<div><div class="fold_hider"><div class="close hider_title">代码隐藏</div></div><div class="fold">
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copyright (C), 2015-2020, px有限公司</span></span><br><span class="line"><span class="comment"> * FileName: WordCounttMapper</span></span><br><span class="line"><span class="comment"> * Author:   15081</span></span><br><span class="line"><span class="comment"> * Date:     2020/7/6 15:51</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> * History:</span></span><br><span class="line"><span class="comment"> * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;</span></span><br><span class="line"><span class="comment"> * px                修改时间           版本号              描述</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> cn.org.sibd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 〈一句话功能简述〉&lt;br&gt; </span></span><br><span class="line"><span class="comment"> * 〈〉</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 15081</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020/7/6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//其中Text涉及序列化和反序列化 相当于String</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCounttMapper</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;LongWritable, Text,Text, IntWritable&gt; &#123;</span><br><span class="line">    <span class="type">Text</span> <span class="variable">kkey</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text</span>();</span><br><span class="line">    <span class="type">IntWritable</span> <span class="variable">vvalue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">(LongWritable key, Text value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">//获取第一行</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> value.toString();</span><br><span class="line">        <span class="comment">//划分</span></span><br><span class="line">        String[] words = line.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            kkey.set(word);</span><br><span class="line">            <span class="comment">//输出</span></span><br><span class="line">            context.write(kkey,vvalue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
</li>
<li>
<p>reducer</p>
<div><div class="fold_hider"><div class="close hider_title">代码隐藏</div></div><div class="fold">
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copyright (C), 2015-2020, px有限公司</span></span><br><span class="line"><span class="comment"> * FileName: WordCountReducer</span></span><br><span class="line"><span class="comment"> * Author:   15081</span></span><br><span class="line"><span class="comment"> * Date:     2020/7/6 15:53</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> * History:</span></span><br><span class="line"><span class="comment"> * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;</span></span><br><span class="line"><span class="comment"> * px                修改时间           版本号              描述</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> cn.org.sibd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 〈一句话功能简述〉&lt;br&gt; </span></span><br><span class="line"><span class="comment"> * 〈〉</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 15081</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020/7/6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">hadoop 1</span></span><br><span class="line"><span class="comment">hadoop 1</span></span><br><span class="line"><span class="comment">java 1</span></span><br><span class="line"><span class="comment">会默认排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCountReducer</span> <span class="keyword">extends</span> <span class="title class_">Reducer</span>&lt;Text, IntWritable,Text,IntWritable&gt; &#123;</span><br><span class="line">    <span class="type">IntWritable</span> <span class="variable">v</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (IntWritable value : values) &#123;</span><br><span class="line">            sum+=value.get();</span><br><span class="line">        &#125;</span><br><span class="line">        v.set(sum);</span><br><span class="line">        context.write(key,v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
</li>
<li>
<p>driver</p>
<div><div class="fold_hider"><div class="close hider_title">代码隐藏</div></div><div class="fold">
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copyright (C), 2015-2020, px有限公司</span></span><br><span class="line"><span class="comment"> * FileName: WordCountDriver</span></span><br><span class="line"><span class="comment"> * Author:   15081</span></span><br><span class="line"><span class="comment"> * Date:     2020/7/6 15:53</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> * History:</span></span><br><span class="line"><span class="comment"> * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;</span></span><br><span class="line"><span class="comment"> * px                修改时间           版本号              描述</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> cn.org.sibd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 〈一句话功能简述〉&lt;br&gt; </span></span><br><span class="line"><span class="comment"> * 〈〉</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 15081</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020/7/6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCountDriver</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">//连接</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="comment">//job实例对象</span></span><br><span class="line">        <span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> Job.getInstance(conf);</span><br><span class="line">        <span class="comment">//把类联系起来</span></span><br><span class="line">        job.setJarByClass(WordCountDriver.class);</span><br><span class="line">        job.setReducerClass(WordCountReducer.class);</span><br><span class="line">        job.setMapperClass(WordCounttMapper.class);</span><br><span class="line">        <span class="comment">//map的输出类型</span></span><br><span class="line">        job.setMapOutputKeyClass(Text.class);</span><br><span class="line">        job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line">        <span class="comment">//最终的输出类型 不要加reduce</span></span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line">        <span class="comment">//输入路径</span></span><br><span class="line">        <span class="comment">//FileInputFormat.setInputPaths(job,new Path(&quot;D:\\IntelliJ IDEA 2020.1.1\\WorkSpace\\mapreduce-project\\input\\wordcount.txt&quot;));</span></span><br><span class="line">        FileInputFormat.setInputPaths(job,<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;./input/wordcount.txt&quot;</span>));</span><br><span class="line">        <span class="comment">//输出路径 不用我们去创建，会报错</span></span><br><span class="line">        FileOutputFormat.setOutputPath(job,<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;./output&quot;</span>));</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">resout</span> <span class="operator">=</span> job.waitForCompletion(<span class="literal">true</span>);</span><br><span class="line">        System.out.println(resout?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
</li>
</ul>
</li>
<li>
<p>输入文本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop java</span><br><span class="line">java zookeeper</span><br><span class="line">hive hadoop</span><br><span class="line">hive java</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>每次运行要删除output文件夹 当然可用代码删除</p>
<div><div class="fold_hider"><div class="close hider_title">代码隐藏</div></div><div class="fold">
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;./output&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">FileDelete</span>(<span class="string">&quot;./output&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//自行拆分</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copyright (C), 2015-2020, px有限公司</span></span><br><span class="line"><span class="comment"> * FileName: FileDelete</span></span><br><span class="line"><span class="comment"> * Author:   15081</span></span><br><span class="line"><span class="comment"> * Date:     2020/7/6 19:08</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> * History:</span></span><br><span class="line"><span class="comment"> * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;</span></span><br><span class="line"><span class="comment"> * px                修改时间           版本号              描述</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> cn.org.sibd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 〈一句话功能简述〉&lt;br&gt; </span></span><br><span class="line"><span class="comment"> * 〈〉</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 15081</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020/7/6</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileDelete</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FileDelete</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.deleteFileAndFolder(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteFileAndFolder</span><span class="params">(String path)</span>&#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">            <span class="keyword">return</span> file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">        File[] files = file.listFiles();</span><br><span class="line">        <span class="keyword">for</span> (File f : files) &#123;</span><br><span class="line">            <span class="keyword">if</span>(f.isFile())&#123;</span><br><span class="line">                <span class="keyword">if</span>(!f.delete())&#123;</span><br><span class="line">                    System.out.println(f.getAbsolutePath()+<span class="string">&quot; delete error!&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="built_in">this</span>.deleteFileAndFolder(f.getAbsolutePath()))&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> file.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
</li>
</ol>
<h2 id="新知识"><a class="markdownIt-Anchor" href="#新知识"></a> 新知识</h2>
<p>移动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv [-fiv] source destination</span><br></pre></td></tr></table></figure>
<h1 id="day07day08day09day10"><a class="markdownIt-Anchor" href="#day07day08day09day10"></a> day07+day08+day09+day10</h1>
<h2 id="day07-java基础"><a class="markdownIt-Anchor" href="#day07-java基础"></a> day07 java基础</h2>
<p>真的基础，所以没记，看看。</p>
<h2 id="day08-假hive"><a class="markdownIt-Anchor" href="#day08-假hive"></a> day08 假hive</h2>
<ol>
<li>
<p>数据仓库 比mysql东西多</p>
</li>
<li>
<p>mysql</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">下载yum库</span><br><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install 包</span><br><span class="line">我使用的方式是：</span><br><span class="line">yum -y install http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">安装数据库</span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line">重启mysql</span><br><span class="line">systemctl restart mysqld</span><br><span class="line">查找密码</span><br><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br><span class="line">登录</span><br><span class="line">mysql -uroot -p密码</span><br><span class="line">修改密码强度</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_policy=low;</span><br><span class="line">set global validate_password_length=6;</span><br><span class="line">修改密码</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">重启mysql</span><br><span class="line">mysql简单练习</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="day09-要假不假hive"><a class="markdownIt-Anchor" href="#day09-要假不假hive"></a> day09 要假不假hive</h2>
<ol>
<li>
<p>使得不只本地可以连接数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update user set host=&#x27;%&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">至于刷新flush privileges;他没执行。</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>解压</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -zxvf apache-hive-2.3.7-bin.tar.gz -C  /usr/local/</span><br><span class="line">他说配不配都可以 配置环境变量 到bin目录 /etc/profile 记得生效一下</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>到conf目录下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp hive-env.sh.template  hive-env.sh</span><br><span class="line">vim hive-env.sh</span><br><span class="line">HADOOP_HOME=/usr/local/hadoop-2.9.2</span><br><span class="line">export HIVE_CONF_DIR=/usr/local/apache-hive-2.3.7-bin/conf</span><br><span class="line">export HIVE_AUX_JARS_PATH=/usr/local/apache-hive-2.3.7-bin/lib</span><br></pre></td></tr></table></figure>
<div><div class="fold_hider"><div class="close hider_title">hive-site.xml隐藏</div></div><div class="fold">
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">创建hive-site.xml</span><br><span class="line">vim hive-site.xml </span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>我度出来修改的</span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">      JDBC connect string for a JDBC metastore.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Username to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>password to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

</div></div>
</li>
<li>
<p>杂</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 上传mysql-connector-java-5.1.48.jar到../lib目录下</span><br><span class="line">他说 2点多和1点多不一样 1点多可以直接起动了 2点多要初始化</span><br><span class="line">schematool -dbType mysql -initSchema 如果没配环境变量，用./也可以</span><br><span class="line">注：他机子变了，但我机子没变，我在px02（020304）上改动.而且我的hdfs、yarn、zookeeper没关，他报错了，而我没报错，但这不能算好消息。他把HIVE_AUX_JARS_PATH注了，而我没注。</span><br><span class="line">他说他删了一个库，创建不上了。他在ConnectionURL里加了 &amp;amp;useSSL=false（我没加），为了不看警告。</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive</span><br><span class="line">测试show databases;</span><br><span class="line">我打错了，打成 show databses;报了atatat的错。打对就好了</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="day10-hive-注他不用101了而用102但还是连的101应该是克隆后没改19216811"><a class="markdownIt-Anchor" href="#day10-hive-注他不用101了而用102但还是连的101应该是克隆后没改19216811"></a> day10 hive <s>注：他不用101了而用102，但还是连的101，应该是克隆后没改</s>192.168.1.1</h2>
<h3 id="杂一"><a class="markdownIt-Anchor" href="#杂一"></a> 杂一</h3>
<p>他重新搭建了hive。没配<code>HIVE_AUX_JARS_PATH</code>。<font color=red><s><code>&amp;amp;useSSL=false</code>改为了<code>; useSSL=false</code>。</s>(字体颜色有问题，有些字符看不清。)</font><font color=green><code>&amp;amp;</code>是字符<code>&amp;</code></font>报错了。<a href="http://xn--start-dfs-zy7ng9sl85gqd8d.sh">他说没先start-dfs.sh</a>。 <code>show databases;</code>没出来，他说其他地方没有权限，其实开了（%）。他说防火墙没关。还是。他一直有RunJar的进程，而我没有。他hadoop的``hadoop.tmp.dir<code>值是</code>/usr/local/hadoop/hadoop-2.9.2/tmp`,不是他原先教我门设置的，虽感觉在那都可。重搭了。</p>
<h3 id="杂二"><a class="markdownIt-Anchor" href="#杂二"></a> 杂二</h3>
<p>我还是在hive-site.xml 添加上了<code>&amp;amp;useSSL=false</code>，不想看SSl的警告。</p>
<h3 id="hive-sql语法总结-可在web页面看一些东西"><a class="markdownIt-Anchor" href="#hive-sql语法总结-可在web页面看一些东西"></a> Hive <a href="https://www.cnblogs.com/starzy/p/11441131.html">SQL语法总结</a> 可在web页面看一些东西</h3>
<div><div class="fold_hider"><div class="close hider_title">多命令隐藏</div></div><div class="fold">
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建数据库 可加上 if not exists # 在HDFS上/user/hive/warehouse</span><br><span class="line">create database test;</span><br><span class="line"># 创建管理表or内部表</span><br><span class="line">create table st(id int,name string)</span><br><span class="line">row format delimited fields terminated by &#x27;\t&#x27;;</span><br><span class="line"># 创建外部表</span><br><span class="line"> create external table dept(deptno int,dname string,loc int)</span><br><span class="line"> row format delimited fields terminated by &#x27;\t&#x27;;</span><br><span class="line"># 导入数据 也可以自己建</span><br><span class="line">load data local inpath &#x27;文件&#x27; into table 表名;</span><br><span class="line"># 查询 应该可以举一反三</span><br><span class="line">select * from 表;</span><br><span class="line"># 查看表格式化数据 可看类型</span><br><span class="line">desc formatted dept;</span><br><span class="line"># 创建分区表 单的</span><br><span class="line">create table dept_partition(dno int,dname string,loc string)</span><br><span class="line">partitioned by(month string)</span><br><span class="line">row format delimited fields terminated by &#x27;\t&#x27;;</span><br><span class="line">	# 加载数据</span><br><span class="line">	load data local inpath &#x27;/opt/dept.txt&#x27; into table dept_partition partition(month=&#x27;202006&#x27;);</span><br><span class="line">	# 查询</span><br><span class="line">	select * from dept_partition;</span><br><span class="line">	select * from dept_partition where month=202006;</span><br><span class="line">	# 增加分区表 可以跟多个partition，空格隔开 感觉本质是文件夹 </span><br><span class="line">	alter table dept_partition add partition(month=&#x27;202004&#x27;);</span><br><span class="line">	# 注：通过hadoop fs -mkdir创建、-put上传，查不到；通过alter增加分区表、-put上传可以查到</span><br><span class="line">	# 删除</span><br><span class="line">	add换drop，多个partition用逗号隔开</span><br><span class="line"># 创建多分区</span><br><span class="line">by(month string,day string) 举一反三</span><br><span class="line"></span><br></pre></td></tr></table></figure>

</div></div>
<h1 id="day11day12day13"><a class="markdownIt-Anchor" href="#day11day12day13"></a> day11+day12+day13</h1>
<h2 id="day11-续hive"><a class="markdownIt-Anchor" href="#day11-续hive"></a> day11 续hive</h2>
<div><div class="fold_hider"><div class="close hider_title">多命令隐藏</div></div><div class="fold">
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 重命名表</span><br><span class="line">alter table st rename to st01;</span><br><span class="line"># 增加、修改、替换列信息</span><br><span class="line">	# 增加、替换</span><br><span class="line">	 alter table st01 add|replace columns(age int);</span><br><span class="line">	# 更新</span><br><span class="line">	alter table st01 change age sex string;</span><br><span class="line"># 删除表</span><br><span class="line">drop table 表名;</span><br><span class="line"># 通过查询语句插入数据</span><br><span class="line">	# 创建表</span><br><span class="line">	create table st(</span><br><span class="line">    &gt; id int,name string)</span><br><span class="line">    &gt; partitioned by(month string)</span><br><span class="line">    &gt; row format delimited fields terminated by &#x27;\t&#x27;;</span><br><span class="line">    # 插入基本的数据</span><br><span class="line">	insert into table st partition(month=&#x27;202006&#x27;)values(3,&#x27;zs&#x27;),(2,&#x27;ww&#x27;);</span><br><span class="line">	# 查询单张表插入</span><br><span class="line">	insert overwrite table st partition(month=&#x27;202007&#x27;)</span><br><span class="line">    &gt; select id,name from st;</span><br><span class="line"># 查询语句中创建表并加入数据</span><br><span class="line">create table st03</span><br><span class="line">&gt; as select id,name from st;</span><br><span class="line"># 创建表时指定加载数据的路径</span><br><span class="line">	# 创建表，指定在HDFS的位置</span><br><span class="line">	 create table st04(</span><br><span class="line">    &gt; id int,name string)</span><br><span class="line">    &gt; row format delimited fields terminated by &#x27;\t&#x27;</span><br><span class="line">    &gt; location &#x27;/user/hive/warehouse/test.db/st04&#x27;;</span><br><span class="line">    # 加载数据</span><br><span class="line">    load data local inpath &#x27;/opt/st.txt&#x27; into table st04;</span><br><span class="line">	# 注他未使用dfs -put /opt/st.txt /user/hive/warehouse/test.db/st05;</span><br><span class="line"># insert导出 导出目录，目录里有文件 去掉local可导到HDFS</span><br><span class="line">	# 未格式化</span><br><span class="line">	insert overwrite local directory &#x27;/opt/st&#x27; select * from st05;</span><br><span class="line">	# 格式化</span><br><span class="line">	insert overwrite local directory &#x27;/opt/st&#x27; row format delimited fields terminated by &#x27;\t&#x27; select * from st05;</span><br><span class="line">	# 还有hadoop命令、Hive Shell命令等 感觉写脚本有用</span><br><span class="line">	hive -e &#x27;select * from default.student;&#x27; &gt; student4.txt;</span><br><span class="line"># 查询类同mysql</span><br><span class="line">group by	</span><br><span class="line">join 等值：join|inner join交集，left join左连接同右，右没左没，full join全连接，左右没，他说mysql不支持全连接，但我听说有方式</span><br></pre></td></tr></table></figure>

</div></div>
<p>他使用的文档可在网络上找到 关键词：尚硅谷 [文档关键词，例如：hive]</p>
<h2 id="day12-续hive"><a class="markdownIt-Anchor" href="#day12-续hive"></a> day12 续hive</h2>
<h3 id="另一种启动hive"><a class="markdownIt-Anchor" href="#另一种启动hive"></a> 另一种启动hive</h3>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">不管那种方式都要start-dfs.sh</span><br><span class="line">修改core-site.xml</span><br><span class="line">   <span class="comment">&lt;!-- 如果不配置下列信息 hive的jdbc连接会报：User: root is not allowed to impersonate root --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- hadoop.proxyuser.root.hosts   root  可以换成别的用户 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">第一个窗口 hiveserver2</span><br><span class="line">第二个窗口 beeline -u jdbc:hive2://localhost:10000 -n root</span><br><span class="line">他说容易掉。</span><br><span class="line">显示结果像mysql。第一个窗口会显示命令结果</span><br></pre></td></tr></table></figure>
<h3 id="集合数据类型"><a class="markdownIt-Anchor" href="#集合数据类型"></a> 集合数据类型</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">集合数据类型 struct、map、array </span><br><span class="line">array在创建表时要加上collection items terminated by &#x27;:&#x27;; 索引获取，包含：array_contains(列名，变量)，大小用size(列名)</span><br><span class="line">map在建表时要map&lt;类型,类型&gt;和map keys terminated by &#x27;#&#x27;;获取：列名[key],取key：map_keys(列名)，取value：map_values(列名)</span><br><span class="line">struct建表要写struct&lt;列名:类型,……&gt;他加上了collection items terminated by &#x27;:&#x27;;像map，用点获取</span><br></pre></td></tr></table></figure>
<h2 id="day13-python-豆瓣有反扒注意"><a class="markdownIt-Anchor" href="#day13-python-豆瓣有反扒注意"></a> day13 python 豆瓣有反扒，注意</h2>
<div><div class="fold_hider"><div class="close hider_title">代码隐藏</div></div><div class="fold">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python  </span></span><br><span class="line"><span class="comment">#! -*- coding:utf-8 -*-  </span></span><br><span class="line"><span class="comment">#====#====#====#====  </span></span><br><span class="line"><span class="comment">#!@Author : px</span></span><br><span class="line"><span class="comment">#!@time   : 2020/7/12 10:37</span></span><br><span class="line"><span class="comment">#!@File   : 爬虫.py</span></span><br><span class="line"><span class="comment">#!License : (C)Copyright 2017-2018, Liugroup-NLPR-CASIA</span></span><br><span class="line"><span class="comment">#====#====#====#====</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">             ┏┓      ┏┓</span></span><br><span class="line"><span class="string">            ┏┛┻━━━━━━┛┻┓</span></span><br><span class="line"><span class="string">            ┃          ┃</span></span><br><span class="line"><span class="string">            ┃  ┳┛  ┗┳  ┃</span></span><br><span class="line"><span class="string">            ┃     ┻    ┃</span></span><br><span class="line"><span class="string">            ┗━┓      ┏━┛</span></span><br><span class="line"><span class="string">              ┃      ┗━━━┓</span></span><br><span class="line"><span class="string">              ┃  神兽保佑 ┣┓</span></span><br><span class="line"><span class="string">              ┃  永无BUG！┏┛</span></span><br><span class="line"><span class="string">              ┗┓┓┏━━━━┳┓┏┛</span></span><br><span class="line"><span class="string">               ┃┫┫    ┃┫┫</span></span><br><span class="line"><span class="string">               ┗┻┛    ┗┻┛</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line">PRE_BOOK_PAGE_COUNT=<span class="number">20</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_content</span>(<span class="params">page</span>):</span><br><span class="line">    url= <span class="string">&#x27;https://book.douban.com/tag/%E5%90%8D%E8%91%97?start=&#123;&#125;&amp;type=T&#x27;</span>.<span class="built_in">format</span>((page-<span class="number">1</span>)*PRE_BOOK_PAGE_COUNT)</span><br><span class="line">    headers=&#123;</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>:<span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>:<span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Cache-Control&#x27;</span>:<span class="string">&#x27;max-age=0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>:<span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;自行查找&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>:<span class="string">&#x27;book.douban.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>:<span class="string">&#x27;https&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>:<span class="string">&#x27;document&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>:<span class="string">&#x27;navigate&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>:<span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-User&#x27;</span>:<span class="string">&#x27;?1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>:<span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/83.0.4103.116Safari/537.36&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">    context=requests.get(url=url,headers=headers).text</span><br><span class="line">    <span class="comment">#print(context)</span></span><br><span class="line">    <span class="keyword">return</span> context</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_date</span>(<span class="params">context</span>):</span><br><span class="line">    html=etree.HTML(context)</span><br><span class="line">    li_list=html.xpath(<span class="string">&#x27;//*[@id=&quot;subject_list&quot;]/ul/li&#x27;</span>)</span><br><span class="line">    <span class="comment">#print(li_list)</span></span><br><span class="line">    book_list=[]</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">        title=li.xpath(<span class="string">&#x27;div[2]/h2/a/@title&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">#print(title)</span></span><br><span class="line">        <span class="comment">#message=&quot;&quot;.join((li.xpath(&#x27;div[2]/div[1]/text()&#x27;)[0]).split())</span></span><br><span class="line">        message = (li.xpath(<span class="string">&#x27;div[2]/div[1]/text()&#x27;</span>)[<span class="number">0</span>]).replace(<span class="string">&#x27;\n        \n  \n  &#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\n\n      &#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="comment">#print(message)</span></span><br><span class="line">        summary=li.xpath(<span class="string">&#x27;div[2]/p/text()&#x27;</span>)</span><br><span class="line">        summary=summary[<span class="number">0</span>] <span class="keyword">if</span> summary!=[] <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        <span class="comment">#print(summary)</span></span><br><span class="line">        score=li.xpath(<span class="string">&#x27;div[2]/div[2]/span[2]/text()&#x27;</span>)</span><br><span class="line">        score=score[<span class="number">0</span>] <span class="keyword">if</span> score!=[] <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        <span class="comment">#print(score)</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;douban.csv&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            writer = csv.writer(f)</span><br><span class="line">            writer.writerow([title, message, summary, score])</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;douban.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>,newline=<span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    writer=csv.writer(f)</span><br><span class="line">    writer.writerow([<span class="string">&#x27;书名&#x27;</span>,<span class="string">&#x27;信息&#x27;</span>,<span class="string">&#x27;简介&#x27;</span>,<span class="string">&#x27;评分&#x27;</span>])</span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">63</span>):</span><br><span class="line">    context=get_content(page)</span><br><span class="line">    get_date(context)</span><br><span class="line">    <span class="built_in">print</span>(page)</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

</div></div>
<h1 id="day14-按照手册搭建day15-又简单爬一边"><a class="markdownIt-Anchor" href="#day14-按照手册搭建day15-又简单爬一边"></a> day14 按照手册搭建+day15 又简单爬一边</h1>
<h2 id="day14"><a class="markdownIt-Anchor" href="#day14"></a> day14</h2>
<ol>
<li>
<p>由于我们是本地克隆，需要修改ip。</p>
<p><code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp改static</span><br><span class="line">IPADDR=192.168.100.200</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.222.2</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line">DNS2=223.6.6.6</span><br></pre></td></tr></table></figure>
<p>最后要重启网络<code>service network restart</code></p>
<p><font color=red>注:</font>xshell的隧道钩去掉。VT模式里初始化数字键盘选设置为普通，可使用小键盘。</p>
</li>
<li>
<p>每台修改主机名。记忆<code>hostname clt</code></p>
<p><code>hostnamectl set-hostname master</code></p>
<p><code>bash</code> 生效一下</p>
<p>未使用文档里的改文件的的方法</p>
</li>
<li>
<p>关闭防火墙。同理记忆。从windows的mysqld推测，服务的结尾都加了<code>d</code></p>
<p><code>systemctl stop firewalld</code></p>
<p>对于开机重启，比赛 不需要 <code>systemctl disable firewalld</code></p>
</li>
<li>
<p>映射</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.100.200 master</span><br><span class="line">192.168.100.201 slave1</span><br><span class="line">192.168.100.202 slave2</span><br></pre></td></tr></table></figure>
<p>他是每台写，我使用的分发。此时没<a href="#ssh">配ssh</a> ，要输密码等</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r /etc/hosts slave1:/etc/</span><br></pre></td></tr></table></figure>
<p>最后<code>ping</code>一下</p>
</li>
<li>
<p>时间同步</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date 查看时间</span><br><span class="line">tzselect 选择时间，记忆梯子选择</span><br><span class="line">由于时间一样，暂时不管</span><br></pre></td></tr></table></figure>
<p><font color=red>注:</font><code>tzselect</code>并不会改成功，需要执行它显示的<code>TZ='Asia/Shanghai'; export TZ</code>命令。使用后成功把<code>EDT</code>改成了<code>CST</code>，但还是感觉有问题，因为我用了<code>timedatectl status</code>。<a href="https://blog.csdn.net/weixin_42167759/article/details/90648225">Linux —— 时间（tzselect、timedatactl命令，查看和修改时区，修改时区为东八区）</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">每台下载ntp</span><br><span class="line">yum install -y ntp</span><br><span class="line">再master修改/etc/ntp.conf</span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br><span class="line">重启服务</span><br><span class="line">systemctl restart ntpd.service</span><br><span class="line">测试 我是在修改文件少的机子上用date -s 00:00，然后过了几分钟用（对当然也可以等）ntpdate master同步</span><br><span class="line">当然最好同步一下</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><span id="ssh">配ssh</span></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line"> ssh-copy-id 地址</span><br><span class="line"> 他没有用手册里的dsa</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>由于要好几次修改/etc/profile，所以预先修改了。java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk1.8.0_251</span><br><span class="line">export HADOOP_HOME=/usr/local/hadoop-2.9.2</span><br><span class="line">export HIVE_HOME=/usr/local/apache-hive-2.3.7-bin</span><br><span class="line">export ZOOKEEPER_HOME=/usr/local/zookeeper-3.4.13</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin:$ZOOKEEPER_HOME/bin</span><br><span class="line">所以上传相应文件并解压</span><br><span class="line">记得source生效</span><br><span class="line">我还分发里一下/etc/profile和java，和生效。</span><br><span class="line">记不住分发的命令可以用xftp</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>zookeeper</p>
<div><div class="fold_hider"><div class="close hider_title">太多隐藏</div></div><div class="fold">
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">拷贝zookeeper-3.4.13/conf/zoo_sample.cfg</span><br><span class="line">cp zoo_sample.cfg zoo.cfg </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建文件夹</span><br><span class="line">/usr/local/zookeeper-3.4.13/data</span><br><span class="line">创建myid</span><br><span class="line">vim /usr/local/zookeeper-3.4.13/data/myid</span><br><span class="line">写1 修改23</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置zoo.cfg </span><br><span class="line">修改dataDir=/usr/local/zookeeper-3.4.13/data</span><br><span class="line">他未添加dataLogDir</span><br><span class="line">添加，不知能否从0开始</span><br><span class="line">    server.1=master:2888:3888</span><br><span class="line">    server.2=slave1:2888:3888</span><br><span class="line">    server.3=slave2:2888:3888</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分发/usr/local/zookeeper-3.4.13/</span><br><span class="line">scp -r /usr/local/zookeeper-3.4.13/ 主机名:/usr/local/</span><br><span class="line">修改每台myid</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置环境变量，此处可以在上面提前写</span><br><span class="line">export ZOOKEEPER_HOME=/usr/local/zookeeper-3.4.13</span><br><span class="line">path后面加上:$ZOOKEEPER_HOME/bin</span><br><span class="line">分发记得生效</span><br><span class="line">他说每分发一个都要生效一下</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动zkServer.sh start</span><br><span class="line">状态zkServer.sh status</span><br><span class="line">注意要都启动再看状态，否则会看到Connection refused (Connection refused) 误以为配错了</span><br><span class="line">启动顺序 master slave1 slave2 ，slave1会是leader</span><br></pre></td></tr></table></figure>

</div></div>
</li>
<li>
<p>hadoop</p>
<div><div class="fold_hider"><div class="close hider_title">太多隐藏</div></div><div class="fold">
   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解压配环境变量已经在上面做了</span><br><span class="line">他说lib没有必要，从来也没用</span><br></pre></td></tr></table></figure>
   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置/usr/local/hadoop-2.9.2/etc/hadoop/hadoop-env.sh</span><br><span class="line">修改export JAVA_HOME=/usr/local/jdk1.8.0_251</span><br></pre></td></tr></table></figure>
   <div><div class="fold_hider"><div class="close hider_title">core-site.xml隐藏</div></div><div class="fold">
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">配置core-site.xml</span><br><span class="line">添加</span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.default.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop-2.9.2/hdfs/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        &lt;--!他们直接在tmp下，没有hdfs--&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>io.file.buffer.size<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>131072<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.checkpoint.period<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>60<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.checkpoint.size<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>67108864<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</div></div>
<div><div class="fold_hider"><div class="close hider_title">hdfs-site.xml隐藏</div></div><div class="fold">
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">配置hdfs-site.xml</span><br><span class="line">添加</span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop-2.9.2/hdfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">final</span>&gt;</span>true<span class="tag">&lt;/<span class="name">final</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop-2.9.2/hdfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">final</span>&gt;</span>true<span class="tag">&lt;/<span class="name">final</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</div></div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">编写slaves</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br><span class="line">编写master，他不建议这样写</span><br><span class="line">master</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">他配了yarn-env.sh</span><br><span class="line">改了export JAVA_HOME=/usr/local/jdk1.8.0_251/</span><br><span class="line">都可以</span><br></pre></td></tr></table></figure>
<div><div class="fold_hider"><div class="close hider_title">yarn-site.xml隐藏</div></div><div class="fold">
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">配置yarn-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18040<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18030<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18088<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18025<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18141<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.auxservices.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
</div></div>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">配置mapred-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分发，我觉得可以都解压了，然后就只须分发hadoop目录了</span><br><span class="line">scp -r </span><br><span class="line">与此同时可以去搭hive</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动</span><br><span class="line">	master格式化 hadoop namenode -format</span><br><span class="line">	start-all.sh</span><br><span class="line">查看</span><br><span class="line">	master:50070</span><br><span class="line">	master:18088</span><br></pre></td></tr></table></figure>
</div></div>
</li>
<li>
<p>hive</p>
<div>
    <div class="fold_hider">
        <div class="close hider_title">太多隐藏</div>
    </div>
    <div class="fold">
        <div>
    <div class="fold_hider">
        <div class="close hider_title">隐藏slave2</div>
    </div>
    <div class="fold">
        <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slave2安装mysql server</span><br><span class="line">他先下了wget，用wget下载源安装包</span><br><span class="line">我觉得这样也可以yum -y install http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line">grep &quot;password&quot; /var/log/mysqld.log </span><br><span class="line">进入maysql</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=6;</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">可以退出重进一下</span><br><span class="line"># 下面两个用其中一个，我第二个一直让我输入</span><br><span class="line"># update user set host=&#x27;%&#x27; where user=&#x27;root&#x27;;</span><br><span class="line"># grant all privileges on *. * to &#x27;root&#x27;@&#x27;%  with grant option;</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">上传connection包到slave1:/usr/local/apache-hive-2.3.7-bin/lib，比赛时应该会在某个地方，文档说/lib下</span><br></pre></td></tr></table></figure>
    </div>
</div>
      <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">master作为client，slave1作为 hive server</span><br></pre></td></tr></table></figure>
        <div>
    <div class="fold_hider">
        <div class="close hider_title">隐藏slave1</div>
    </div>
    <div class="fold">
       <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">在slave1下conf</span><br><span class="line">	cp hive-env.sh.template hive-env.sh</span><br><span class="line">	vim hive-env.sh</span><br><span class="line">	修改HADOOP_HOME=/usr/local/hadoop-2.9.2</span><br><span class="line">	创建vim hive-site.xml</span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.warehouse.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive_remote/warehouse<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://slave2:3306/hive?createDatabaseIfNotExist=true<span class="symbol">&amp;amp;</span>useSSL=false<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--文档里没使用，但官方视频使用了&amp;amp;useSSL=false又加上&amp;amp;characterEncoding=UTF-8--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.schema.verification<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>datanucleus.schema.autoCreateAll<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
    </div>
</div>
        <div>
    <div class="fold_hider">
        <div class="close hider_title">隐藏master</div>
    </div>
    <div class="fold">
     <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">在master下</span><br><span class="line">cp /usr/local/apache-hive-2.3.7-bin/lib/jline-2.12.jar /usr/local/hadoop-2.9.2/share/hadoop/yarn/lib/</span><br><span class="line">修改hive-env.sh，我情愿slave发过来</span><br><span class="line">HADOOP_HOME=/usr/local/hadoop-2.9.2</span><br><span class="line">修改hive-site.xml</span><br><span class="line">   <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.warehouse.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive_remote/warehouse<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.local<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.uris<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">value</span>&gt;</span>thrift://slave1:9083<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
    </div>
</div>
       <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动</span><br><span class="line">	slave1下</span><br><span class="line">		hive --service metastore</span><br><span class="line">	master下</span><br><span class="line">		hive</span><br><span class="line">		测试show databases;</span><br><span class="line"># 报Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span><br><span class="line">有可能&lt;name&gt;hive.metastore.uris&lt;/name&gt;值写错了</span><br><span class="line"># 报 Could not create ServerSocket on address 0.0.0.0/0.0.0.0:9083.</span><br><span class="line">可尝试把runjar杀掉</span><br></pre></td></tr></table></figure>
    </div>
</div>
</li>
</ol>
<h2 id="day-15-爬"><a class="markdownIt-Anchor" href="#day-15-爬"></a> day 15 爬</h2>
<ol>
<li><code>string(div/div[3]/a/em)</code>可以获取下面的所以文字。</li>
<li><code>time.time()</code>时间戳</li>
<li>字典形的str，可用<code>json.loads(str)</code>转成字典</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>大数据</tag>
        <tag>mysql</tag>
        <tag>hadoop</tag>
        <tag>hive</tag>
        <tag>zookeeper</tag>
        <tag>jdk</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次健健康天天报自动化失败</title>
    <url>/2020/04/13/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%81%A5%E5%81%A5%E5%BA%B7%E5%A4%A9%E5%A4%A9%E6%8A%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<h1 id="为什么要搞"><a class="markdownIt-Anchor" href="#为什么要搞"></a> 为什么要搞</h1>
<p>本来，在手机上好好的，也很流畅，用<code>Xposed edge</code>搞了个定时任务，每天执行。后来，网页越更新越不流畅，在选地址的页面可以卡很久。一点用手机填的欲望都没有。</p>
<p>免费领了<a href="%5Bhttps://pengxiandyou.github.io/2020/04/03/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%98%BF%E9%87%8C%E4%BA%91ECS%E7%9A%84%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B/%5D(https://pengxiandyou.github.io/2020/04/03/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%98%BF%E9%87%8C%E4%BA%91ECS%E7%9A%84%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B/)">阿里云的服务器</a>，想挂在上面。这样就可省时省力了。</p>
<h1 id="开搞"><a class="markdownIt-Anchor" href="#开搞"></a> 开搞</h1>
<p>首先用<code>Fiddler</code>抓包，分析大致流程。抓了好几次，才稍微清晰点，因为知识不足。</p>
<p>最终因为cookie时效性不长，再加上<code>login?code=</code>每一次生成都不一样，而告终。</p>
<h1 id="后续可能思路"><a class="markdownIt-Anchor" href="#后续可能思路"></a> 后续可能思路</h1>
<ol>
<li>写个服务器，通过服务器来进行转发等等。</li>
<li>看能否通过python或其他语言编写一个简易的抓包工具，获取到信息后进行后续操作。</li>
</ol>
<h1 id="后续"><a class="markdownIt-Anchor" href="#后续"></a> 后续</h1>
<p>通过截断，发现企业微信登录，点击天天报，发现<code>login?code=</code>是程序生成的（应该），所以可能会通过点击天天报，然后后续通过其他方式（dll？等）完成后续。</p>
<h1 id="在后续"><a class="markdownIt-Anchor" href="#在后续"></a> 在后续</h1>
<ol>
<li>
<p>反编译apk，发现一个很有意思代码，感觉很妙啊。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> e = [], t = <span class="number">0</span>; t &lt; <span class="variable language_">this</span>.<span class="property">w</span>.<span class="property">length</span>; t++) <span class="variable language_">this</span>.<span class="property">w</span>[t] &amp;&amp; (e[<span class="title class_">Math</span>.<span class="title function_">floor</span>(t / <span class="number">6</span>)] ^= <span class="number">1</span> &lt;&lt; t % <span class="number">6</span>);</span><br><span class="line"><span class="keyword">for</span> (t = <span class="number">0</span>; t &lt; e.<span class="property">length</span>; t++) e[t] = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_&quot;</span>.<span class="title function_">charAt</span>(e[t] || <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> e.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>) + <span class="string">&quot;~&quot;</span>;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>通过对“音量增强器”、<a href="https://github.com/nining377/UnblockMusicPro_Xposed">“ unblock music pro”</a>思考，如果写个Xposed模块进行hook，应该可行。（对吧？）</p>
</li>
</ol>
]]></content>
      <categories>
        <category>记录</category>
        <category>懒惰记录</category>
      </categories>
      <tags>
        <tag>抓包</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次leetcode解题：剑指Offer38.字符串的排列</title>
    <url>/2023/01/31/%E8%AE%B0%E4%B8%80%E6%AC%A1leetcode%E8%A7%A3%E9%A2%98%EF%BC%9A%E5%89%91%E6%8C%87Offer38-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97/</url>
    <content><![CDATA[<h2 id="题目详情"><a class="markdownIt-Anchor" href="#题目详情"></a> 题目详情</h2>
<p>  <a href="https://leetcode.cn/problems/zi-fu-chuan-de-pai-lie-lcof/description/?languageTags=java">剑指 Offer 38. 字符串的排列</a></p>
<p>  输入一个字符串，打印出该字符串中字符的所有排列。</p>
<p>  你可以以任意顺序返回这个字符串数组，但里面不能有重复元素。</p>
<p>  <strong>示例:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：s = &quot;abc&quot;</span><br><span class="line">输出：[&quot;abc&quot;,&quot;acb&quot;,&quot;bac&quot;,&quot;bca&quot;,&quot;cab&quot;,&quot;cba&quot;]</span><br></pre></td></tr></table></figure>
<p>  <strong>限制：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 &lt;= s 的长度 &lt;= 8</span><br></pre></td></tr></table></figure>
<h2 id="我的解题思路"><a class="markdownIt-Anchor" href="#我的解题思路"></a> 我的解题思路</h2>
<p>  我的目标是在能过的基础上，尽可能好。</p>
<p>  初看这道题，虽然是中等难度，但我觉得还是不是特别难。细看这道题，我想起大学老师用Python讲算法时讲的子集的题。当时用了二进制的思想，但不能用在这道题里。</p>
<p>  在开始想过用<code>for</code>来交换进行排列，但太难了。</p>
<p>  后来，我突然想到了用整体和局部视角来看，可将排列分成两个部分，对这两个部分进行排列。</p>
<p>  再后来，我认为，每一个排列都是将一个元素放在上一个排列的左边和右边。如：元素<code>c</code>，上一个排列<code>ab</code>，那么将有排列<code>cab</code>和<code>abc</code>。</p>
<p>  那么根据思路写出如下代码。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%89%91%E6%8C%87offer38%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%88%97%E4%BB%A3%E7%A0%811202301312225255.PNG" alt="解题1" /></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    HashSet&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;String&gt;();<span class="comment">//结果集，进行去重</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String[] permutation(String s) &#123;</span><br><span class="line">        slove(<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;&quot;</span>), <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s));<span class="comment">//执行</span></span><br><span class="line">        <span class="keyword">return</span> set.toArray(<span class="keyword">new</span> <span class="title class_">String</span>[set.size()]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">slove</span><span class="params">(StringBuffer e,StringBuffer s)</span>&#123;<span class="comment">//e是被排列部分，s中取出的元素看作和空进行排列</span></span><br><span class="line">        <span class="keyword">if</span>(s.length() == <span class="number">1</span>)&#123;<span class="comment">//只剩一个元素进行排列了进行终止</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(e)).insert(<span class="number">0</span>,s));</span><br><span class="line">            set.add(t1);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> t;<span class="comment">//要排列的元素，从s中取出</span></span><br><span class="line">        StringBuffer ss;<span class="comment">//对象引用，必须复制一份用于接下来的排列</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ;i&lt;s.length();i++)&#123;<span class="comment">//依次遍历s中的每一个元素进行排列</span></span><br><span class="line">            t = s.charAt(i);</span><br><span class="line">            ss = <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s);        </span><br><span class="line">            ss.deleteCharAt(i);</span><br><span class="line">            slove((<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(e)).insert(<span class="number">0</span>,t),ss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  通过对其他题解进行分析，改为如下。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/pengxiandyou/TuChuang/hexo/%E5%89%91%E6%8C%87offer38%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%88%97%E4%BB%A3%E7%A0%812202301312235024.PNG" alt="解题2" /></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    HashSet&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;String&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String[] permutation(String s) &#123;</span><br><span class="line">        slove(<span class="string">&quot;&quot;</span>, <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s));</span><br><span class="line">        <span class="keyword">return</span> set.toArray(<span class="keyword">new</span> <span class="title class_">String</span>[set.size()]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">slove</span><span class="params">(String e,StringBuffer s)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.length() == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">t1</span> <span class="operator">=</span> e+s;</span><br><span class="line">            set.add(t1);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> t;</span><br><span class="line">        StringBuffer ss;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ;i&lt;s.length();i++)&#123;</span><br><span class="line">            t = s.charAt(i);</span><br><span class="line">            ss = <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s);        </span><br><span class="line">            ss.deleteCharAt(i);</span><br><span class="line">            slove(e+t, ss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//仅少量变化，注释看上一个</span></span><br></pre></td></tr></table></figure>
<p>  虽然不知不觉写出了回溯的方法，也进行了一定的剪枝，但是当<code>s</code>里有相同元素时，会出现相同排列。根据我对我看了的几个题解，我认为可以对<code>s</code>进行排序，每次排列时找出当前元素的最大相同的子集，将其视为一个。如，<code>baa</code>，在进行<code>b</code>和<code>a</code>的排列时，可以将<code>aa</code>视为一个<code>a</code>。但这样会不会绕路?</p>
<h2 id="我的错误或者失误"><a class="markdownIt-Anchor" href="#我的错误或者失误"></a> 我的错误或者失误</h2>
<p>  代码当然不是一下就写好的，当中也出现了许多错误。</p>
<ol>
<li>
<p>许久没写代码了，<code>String</code>和<code>StringBuffer</code>以及其他类的方法不是特别熟悉了。</p>
</li>
<li>
<p><code>list</code>和<code>set</code>的查找时间复杂度没有第一时间反应出来。</p>
</li>
<li>
<p>当发现超时和内存超限时，仔细分析才发现排列时把左右都排列会出双倍的重复。如<code>abc</code>，当<code>a</code>和<code>&quot;&quot;</code>左右排列以及<code>b</code>和<code>&quot;&quot;</code>左右排列后时，下一步会出现<code>ab</code>和<code>ba</code>以及<code>ba</code>和<code>ab</code>（先排右在排左），出现重复工作。如下代码9-12和21-22。</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">  	ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">    <span class="keyword">public</span> String[] permutation(String s) &#123; </span><br><span class="line">        slove(<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;&quot;</span>), <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s));</span><br><span class="line">        <span class="keyword">return</span> list.toArray(<span class="keyword">new</span> <span class="title class_">String</span>[list.size()]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">slove</span><span class="params">(StringBuffer e,StringBuffer s)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.length() == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(e)).insert(<span class="number">0</span>,s));</span><br><span class="line">            <span class="type">String</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(e)).append(s));</span><br><span class="line">            <span class="keyword">if</span>(!list.contains(t1))list.add(t1);</span><br><span class="line">            <span class="keyword">if</span>(!list.contains(t2))list.add(t2);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer t;</span><br><span class="line">        StringBuffer ss;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ;i&lt;s.length();i++)&#123;</span><br><span class="line">            t = <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;&quot;</span>+s.charAt(i));</span><br><span class="line">            ss = <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s);        </span><br><span class="line">            ss.deleteCharAt(i);</span><br><span class="line">            slove((<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(e)).insert(<span class="number">0</span>,t),ss);</span><br><span class="line">            slove((<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(e)).append(t),ss); </span><br><span class="line"></span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title>记一次阿里云ECS的使用过程</title>
    <url>/2020/04/03/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%98%BF%E9%87%8C%E4%BA%91ECS%E7%9A%84%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="获取服务器"><a class="markdownIt-Anchor" href="#获取服务器"></a> 获取服务器</h1>
<p>点击<a href="https://developer.aliyun.com/adc/student/">链接</a>登录或注册，我是用的是支付宝登录，自行判断适合自己的方式。登录后需要实名认证和（大）学生认证，然后答题，然后每日8：00抢资格。选择自己合适的选项。速度要快、网络要好。</p>
<p>领取后放了很久没管，因为当时主要是为了搭建永恒的MC服务器，但流量主要是用来上网课，要节约。</p>
<h1 id="服务器设置"><a class="markdownIt-Anchor" href="#服务器设置"></a> 服务器设置</h1>
<p>我主要修改了一下描述，重置了远程密码，创建了安全组。</p>
<p>添加了80、3389、3306、443、22，授权对象为0.0.0.0/0。</p>
<h1 id="xshell连接服务器"><a class="markdownIt-Anchor" href="#xshell连接服务器"></a> XShell连接服务器</h1>
<p>我用的是通过ip和用户名、密码来连接的。网上也有密钥对的教程，<a href="https://help.aliyun.com/product/25365.html">帮助文档</a>也有指导。</p>
<p>注意如果连不上要看一下端口哦。后期我也要换成密钥对的方式。</p>
<h1 id="安装apache"><a class="markdownIt-Anchor" href="#安装apache"></a> 安装Apache</h1>
<ol>
<li>安装</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install httpd</span><br><span class="line">//注：我用的是centos7.0，所以是yum</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>相关命令</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start httpd //启动Apache</span><br><span class="line">systemctl stop httpd //停止apache</span><br><span class="line">systemctl restart httpd //重启apache</span><br><span class="line">systemctl enable httpd //设置apache开机启动</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>防火墙</li>
</ol>
<p>我因为顺利没有用到，自行查阅。</p>
<ol start="4">
<li>是否成功</li>
</ol>
<p>通过访问ip，可以反应。</p>
<h1 id="安装php"><a class="markdownIt-Anchor" href="#安装php"></a> 安装php</h1>
<ol>
<li>安装</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-bcmath php-mhash</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>是否成功</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart httpd.service //重启Apache服务</span><br></pre></td></tr></table></figure>
<p>用vi、vim等等自己喜欢的方式在<code>/var/www/html</code>建一个文件，<code>index.html</code>、<code>index.php</code>、<code>info.php</code>等应该都是可以的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">//如果页面空白或者是源代码 不要太担心。</span><br><span class="line">//试试&lt;body&gt;随便&lt;/body&gt;</span><br><span class="line">//我当时因为一直这样，就各种改文件，重置了两次磁盘，当时真是气死了。</span><br><span class="line">//后来换[教程](https://www.cnblogs.com/jxc321/p/8159631.html)就成功了。</span><br><span class="line">//后面MySQL可以用下面的试试</span><br><span class="line">&lt;?php</span><br><span class="line">$link = mysqli_connect(&#x27;localhost&#x27;, &#x27;username&#x27;, &#x27;password&#x27;);</span><br><span class="line">if (!$link) &#123;</span><br><span class="line">die(&#x27;Could not connect: &#x27; . mysqli_error());</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;Connected successfully&#x27;;</span><br><span class="line">mysqli_close($link);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>访问ip/文件名看看</p>
<h1 id="安装mysql"><a class="markdownIt-Anchor" href="#安装mysql"></a> 安装MySQL</h1>
<ol>
<li>下载安装</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">sudo yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>安装MySQL服务器</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum -y install mysql-community-server</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>配置</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mysqld //运行MySQL</span><br><span class="line">sudo systemctl status mysqld //查看运行状态</span><br><span class="line">grep &quot;password&quot; /var/log/mysqld.log //找出密码 低版本可以不需要密码</span><br><span class="line">mysql -u root-p 进入数据库</span><br><span class="line">//修改密码 部分内容自行修改</span><br><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;New_Password&#x27;; </span><br><span class="line">//如果要修改简单密码，可以用下面的 低版本应该可以不用 再高版本命令部分可能不同 查看版本 select version();</span><br><span class="line">mysql&gt; set global validate_password_policy=LOW;</span><br><span class="line">mysql&gt; set global validate_password_length=检查至少密码位数;</span><br><span class="line">//至于编码，看需要</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>收尾</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//删除前面安装的yum respository</span><br><span class="line">sudo yum -y remove mysql57-community-release-el7-10.noarch</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>远程连接</li>
</ol>
<p>我使用的是navicat，主机名是ip。远程连接最好新建一个用户，设置一些权限，设定一下范围。</p>
<p>如果一直连接不成功，可以看看端口。</p>
<p>我当时就是连不上，重置了磁盘。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">来自 https://www.cnblogs.com/zhangjianqiang/p/10019809.html 感谢。</span><br><span class="line">1、本地环境</span><br><span class="line"></span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">mysql  Ver 14.14 Distrib 5.7.22, for Linux (x86_64) using  EditLine wrapper</span><br><span class="line">2、以root用户登录Mysql</span><br><span class="line"></span><br><span class="line">mysql -uroot -proot</span><br><span class="line">3、切换到mysql数据库</span><br><span class="line"></span><br><span class="line">use mysql</span><br><span class="line">4、添加用户</span><br><span class="line"></span><br><span class="line">//只允许指定ip连接</span><br><span class="line">create user &#x27;新用户名&#x27;@&#x27;localhost&#x27; identified by &#x27;密码&#x27;;</span><br><span class="line">//允许所有ip连接（用通配符%表示）</span><br><span class="line">create user &#x27;新用户名&#x27;@&#x27;%&#x27; identified by &#x27;密码&#x27;;</span><br><span class="line">5、为新用户授权</span><br><span class="line"></span><br><span class="line">//基本格式如下</span><br><span class="line">grant all privileges on 数据库名.表名 to &#x27;新用户名&#x27;@&#x27;指定ip&#x27; identified by &#x27;新用户密码&#x27; ;</span><br><span class="line">//示例</span><br><span class="line">//允许访问所有数据库下的所有表</span><br><span class="line">grant all privileges on *.* to &#x27;新用户名&#x27;@&#x27;指定ip&#x27; identified by &#x27;新用户密码&#x27; ;</span><br><span class="line">//指定数据库下的指定表</span><br><span class="line">grant all privileges on test.test to &#x27;新用户名&#x27;@&#x27;指定ip&#x27; identified by &#x27;新用户密码&#x27; ;</span><br><span class="line">6、设置用户操作权限</span><br><span class="line"></span><br><span class="line">//设置用户拥有所有权限也就是管理员</span><br><span class="line">grant all privileges on *.* to &#x27;新用户名&#x27;@&#x27;指定ip&#x27; identified by &#x27;新用户密码&#x27; WITH GRANT OPTION;</span><br><span class="line">//拥有查询权限</span><br><span class="line">grant select on *.* to &#x27;新用户名&#x27;@&#x27;指定ip&#x27; identified by &#x27;新用户密码&#x27; WITH GRANT OPTION;</span><br><span class="line">//其它操作权限说明,select查询 insert插入 delete删除 update修改</span><br><span class="line">//设置用户拥有查询插入的权限</span><br><span class="line">grant select,insert on *.* to &#x27;新用户名&#x27;@&#x27;指定ip&#x27; identified by &#x27;新用户密码&#x27; WITH GRANT OPTION;</span><br><span class="line">//取消用户查询的查询权限</span><br><span class="line">REVOKE select ON what FROM &#x27;新用户名&#x27;;</span><br><span class="line">7、删除用户</span><br><span class="line"></span><br><span class="line">DROP USER username@localhost;</span><br><span class="line">8、修改后刷新权限</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>后期问题</li>
</ol>
<p>过来一两天，mysql连不上，报 ……（2）的错误，一通改报……（40）的错误、重置，也是换了<a href="https://www.cnblogs.com/jxc321/p/8159631.html">教程</a>才好，目前问题还为重复出现，等待。</p>
<h1 id="java安装"><a class="markdownIt-Anchor" href="#java安装"></a> Java安装</h1>
<p>看<a href="https://blog.csdn.net/renfufei/article/details/52621034#commentBox">这个</a>，我觉得不错，也是跟这个安装的。</p>
<h1 id="建议"><a class="markdownIt-Anchor" href="#建议"></a> 建议</h1>
<p>不要使用这个<a href="https://www.cnblogs.com/skkip/p/9998112.html">教程</a></p>
<h1 id="感谢"><a class="markdownIt-Anchor" href="#感谢"></a> 感谢</h1>
<ol>
<li>感谢阿里云</li>
<li>感谢各个博主</li>
</ol>
<h1 id="主要参考"><a class="markdownIt-Anchor" href="#主要参考"></a> 主要参考</h1>
<ol>
<li><a href="https://blog.csdn.net/renfufei/article/details/52621034#commentBox">如何查找YUM 安装的 JAVA_HOME</a></li>
<li><a href="https://blog.csdn.net/weixin_43708900/article/details/89179653">关于MYSQL重装后/var/lib/mysql无文件的解决方法</a></li>
<li><a href="https://www.cnblogs.com/summer-cool/p/3959699.html">启动mysql时显示：/tmp/mysql.sock 不存在的解决方法</a></li>
<li><a href="https://blog.liangjinjin.cn/?p=823">/var/lib/mysql/mysql.sock错误的解决办法</a></li>
<li><a href="https://blog.csdn.net/hexinghua0126/article/details/79641341">CentOS下MySQL安装失败,报socket '/tmp/mysql.sock错误解决方法</a></li>
<li>不推荐<a href="https://www.cnblogs.com/skkip/p/9998112.html">Linux服务器上搭建Centos7.0+Apache+php+Mysql网站</a></li>
<li>推荐<a href="https://www.cnblogs.com/jxc321/p/8159631.html">CentOS7安装配置Apache、PHP和MySQL INSTALL CENTOS7 to configure Apache, PHP, and Mysql</a></li>
<li><a href="https://www.cnblogs.com/yvanBk/p/9711500.html">远程登录Linux（Ubuntu）环境下的mysql 时，如果直接在工具中创建数据库，会出现1044-Access denied for user ‘root’@’%’ to database ‘lc_db’ 错误</a></li>
<li><a href="https://www.cnblogs.com/zhangjianqiang/p/10019809.html">Mysql添加用户与授权</a></li>
<li><a href="https://blog.csdn.net/hello_world_qwp/article/details/79551789">ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</a></li>
</ol>
<h1 id="部分次要参考"><a class="markdownIt-Anchor" href="#部分次要参考"></a> 部分次要参考</h1>
<ol>
<li>
<p><a href="https://jingyan.baidu.com/article/7082dc1c67c369e40a89bde5.html">怎么在centos下使用yum安装java</a></p>
</li>
<li>
<p><a href="https://www.jianshu.com/p/6e7d6bc90833">centos服务器上部署java</a></p>
</li>
<li>
<p><a href="https://blog.51cto.com/13043516/2108728">Centos7部署JAVA环境</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/yao22yao/article/details/54646004">centos服务器上部署javaweb项目</a></p>
</li>
<li>
<p><a href="https://www.cnblogs.com/vinic-xxm/p/11825691.html">centos安装java</a></p>
</li>
<li>
<p><a href="https://www.cnblogs.com/lxblog0615/p/6274230.html">访问mysql出现“Access denied for user root@localhost”（using password：NO）解决方案</a></p>
</li>
<li>
<p><a href="http://blog.sina.com.cn/s/blog_1539133510102xmlb.html">ERROR2002(HY000):CantconnecttolocalMySQLserverthroughsocket/var/lib/mysql/mysq</a></p>
</li>
<li>
<p><a href="https://www.cnblogs.com/heyongboke/p/9876345.html">查看mysql的版本号</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>记录</category>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>阿里云</tag>
        <tag>服务器</tag>
        <tag>ECS</tag>
        <tag>Apache</tag>
        <tag>php</tag>
        <tag>Java</tag>
        <tag>Linux</tag>
        <tag>Centos7.0</tag>
      </tags>
  </entry>
  <entry>
    <title>踩坑出坑记一</title>
    <url>/2019/10/11/%E8%B8%A9%E5%9D%91%E5%87%BA%E5%9D%91%E8%AE%B0%E4%B8%80/</url>
    <content><![CDATA[<ol>
<li>
<p>使用hexo在Github搭建博客后，没有404页面很痛苦。根据教程在404文件夹里写index.html结果没用。今天，我又看了一些教材。直接在根目录（<s>在public里建</s>，在 资源文件夹建或在主题资源文件夹建，不要直接在Github里建，否则推送后会消失）<a href="http://xn--404-p18dohk07g.xn--html404-kf7n.md">建一个404.html或404.md</a>，大家可以在 <a href="https://www.github.com/pengxiandyou">我的仓库</a> 里直接复制腾讯公益404页面，只须改一点。</p>
</li>
<li>
<p>QQ浏览器对于localhost:4000打不开（127.0.0.1:4000也打不开），报 SLL 的错误 而其他浏览器可以正常访问。</p>
<p>找到interner工具-高级-还原高级设置 我观察了一些 使用Sll3.0的钩去掉了 记得重启。</p>
</li>
<li>
<p>不蒜子与live2d冲突，解决：看<code>F12</code>,自行搜索文件内容找到文件，把<code>style=&quot;display: none;&quot;</code>删了。此时对于页脚的显示应该解决了。对于每一篇文章，可以把外层<code>&lt;span&gt;</code>去掉，或者修改js代码。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>经验</category>
      </categories>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
</search>
